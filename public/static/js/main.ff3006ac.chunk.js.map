{"version":3,"sources":["store/auth/types.ts","store/auth/reducer.ts","store/match/types.ts","store/match/reducer.ts","store/description/types.ts","store/description/reducer.ts","store/card/types.ts","store/card/reducer.ts","store/spinUI/types.ts","store/spinUI/reducer.ts","store/deck/types.ts","store/deck/reducer.ts","store/ui-modal/types.ts","store/ui-modal/reducer.ts","store/play/types.ts","store/play/reducer.ts","store/index.ts","context/MenuContext.tsx","hooks/useSocket.ts","context/SocketContext.tsx","store/play/action.ts","helpers/fetch.ts","store/auth/action.ts","store/card/action.ts","store/description/action.ts","pages/LoginPage.tsx","pages/RegisterPage.tsx","routers/AuthRouter.tsx","routers/PrivateRouter.tsx","routers/PublicRouter.tsx","hooks/useHideMenu.ts","store/deck/action.ts","components/signed/user/Play.tsx","components/signed/admin/Cards.tsx","store/spinUI/action.ts","components/signed/admin/NewCard.tsx","components/signed/admin/Users.tsx","components/signed/user/Decks.tsx","components/signed/user/NewDeckCardContainer.tsx","components/signed/user/NewDeckCard.tsx","components/signed/user/NewDeck.tsx","store/match/action.ts","constants/index.ts","store/ui-modal/action.ts","helpers/shuffle.ts","helpers/throwsCards.ts","components/match/CardComponent.tsx","components/match/Zone.tsx","components/modals/ThrowXcardsModal.tsx","components/modals/drag/CardComponentContainer.tsx","components/modals/drag/CardComponent.tsx","components/modals/ViewCardsModal.tsx","components/modals/SelectXcardsModal.tsx","components/modals/TakeControlOpponentCardModal.tsx","components/modals/AssingWeaponModal.tsx","pages/MatchPage.tsx","routers/SingedRouter.tsx","routers/AppRouter.tsx","MyLApp.tsx","index.tsx"],"names":["authLogin","authCheckingFinish","authLogout","initialState","checking","logged","change","changeOpponent","setMatchId","setOpponentId","resetMatchValues","setCardsOrigin","setCardsDestiny","setAmountCardsView","setTakeControlOpponentCard","setWeapon","matchId","match","emmitChange","opponentMatch","opponentId","viewCardsOrigin","viewCardsDestiny","amountCardsView","takeControlOpponentCardIndex","takeControlOpponentCardZone","selectedWeapon","typesCardLoad","frecuenciesCardLoad","racesCardLoad","editionsCardLoad","resetDescription","types","frecuencies","races","editions","cardAddNew","cardLoad","cardLoadUpdating","cardResetUpdating","cardUpdate","cardByEdition","selectMyCards","cardsResetMySelection","cards","cardUpdating","cardsByEdition","spinShow","spinHide","show","text","deckAddNew","deckLoad","deckLoadUpdating","deckResetUpdating","deckDelete","deckUpdate","deckSetDefault","decks","deckUpdating","deckDefault","uiOpenModalThrowXcards","uiCloseModalThrowXcards","uiOpenModalViewCastle","uiCloseModalViewCastle","uiOpenModalViewXCastle","uiCloseModalViewXCastle","uiOpenModalSelectXCastle","uiCloseModalSelectXCastle","uiOpenModalViewCastleOpponent","uiCloseModalViewCastleOpponent","uiOpenModalViewCementery","uiCloseModalViewCementery","uiOpenModalViewExile","uiCloseModalViewExile","uiOpenModalViewRemoval","uiCloseModalViewRemoval","uiOpenModalViewCementeryOpponent","uiCloseModalViewCementeryOpponent","uiOpenModalViewExileOpponent","uiCloseModalViewExileOpponent","uiOpenModalViewRemovalOpponent","uiCloseModalViewRemovalOpponent","uiOpenModalViewHandOpponent","uiCloseModalViewHandOpponent","uiOpenModalTakeControlOpponentCard","uiCloseModalTakeControlOpponentCard","uiOpenModalAssignModal","uiCloseModalAssignModal","modalOpenThrowXcards","modalOpenViewCastle","modalOpenViewXcards","modalOpenSelectXcards","modalOpenViewCastleToOpponent","modalOpenViewCementery","modalOpenViewExile","modalOpenViewRemoval","modalOpenViewCementeryOpponent","modalOpenViewExileOpponent","modalOpenViewRemovalOpponent","modalOpenViewHandOpponent","modalOpenTakeControlOpponentCard","modalOpenAssignWeapon","setActiveUsers","activeUsers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","state","action","type","payload","index","zone","play","auth","description","map","e","id","find","spin","byDefault","filter","uiModal","store","createStore","applyMiddleware","thunk","MenuContext","createContext","hiddenMenu","showMenu","hideMenu","selectedOption","setOptionMenu","MenuProvider","children","useState","setHiddenMenu","setSelectedOption","Provider","value","option","useSocket","serverPath","socket","setSocket","online","setOnline","conectarSocket","useCallback","token","localStorage","getItem","socketTemp","io","transports","autoConnect","forceNew","query","connect","desconectarSocket","disconnect","useEffect","connected","on","SocketContext","SocketProvider","process","useSelector","dispatch","useDispatch","users","newUsers","user","playSetActiveUsers","allowedMethods","runFetch","endpoint","data","method","includes","toUpperCase","Error","join","url","options","headers","FormData","body","JSON","stringify","fetch","login","logout","startAddNewCard","card","a","resp","json","respJson","status","addNewCard","message","success","name","console","log","error","startUpdateCard","updateCard","startLoadCard","loadCards","resetCardUpdating","loadCardUpdating","loadCardsByEdition","loadCardsMySelection","resetMySelection","loadTypeCard","typesCard","loadFrecuencyCard","frecuenciesCard","loadRaceCard","racesCard","loadEditionCard","editionsCard","Title","Typography","LoginPage","level","className","onFinish","values","email","password","setItem","Date","getTime","toString","lastname","username","role","playing","defeats","msg","startLogin","autoComplete","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","htmlType","block","to","RegisterPage","startRegister","Content","Layout","AuthRouter","style","height","padding","justify","align","xs","sm","md","lg","xl","exact","path","component","PrivateRouter","isAuthenticated","rest","Component","props","PublicRouter","useHideMenu","hide","menuOption","useContext","startLoadDeck","loadDecks","loadDeckUpdating","resetDeckUpdating","setDefaultDeck","deck","addNewDeck","updateDeck","deleteDeck","Play","useLocation","pathname","replace","searchText","setSearchText","searchedColumn","setSearchedColumn","ref0","useRef","length","timer","handleSearch","selectedKeys","confirm","dataIndex","countDown","key","secondsToGo","modal","Modal","info","title","content","okButtonProps","hidden","onCancel","clearInterval","emit","cancelInvitation","setInterval","update","setTimeout","destroy","destroyAll","ref","columns","width","filterDropdown","setSelectedKeys","clearFilters","onChange","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","onFilterDropdownVisibleChange","visible","current","select","render","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","sorter","b","sortDirections","victories","row","uuid","invite","ghost","showIcon","pagination","defaultPageSize","rowKey","dataSource","paddingTop","Cards","history","useHistory","ref1","ref2","ref3","ref4","getColumnSearchProps","num","edition","race","frecuency","onConfirm","push","shape","PlusOutlined","showSpin","hideSpin","TextArea","Input","NewCard","params","useParams","fields","setFields","checkIsMachinery","setCheckIsMachinery","checkIsUnique","setCheckIsUnique","disableMachinery","setDisableMachinery","fileList","setFileList","editionName","setEditionName","getFromAPI","ability","legend","cost","strength","isMachinery","isUnique","formData","armTypeId","append","img","ArrowLeftOutlined","labelCol","span","wrapperCol","layout","label","min","autoSize","minRows","maxRows","Option","valuePropName","disabled","checked","editionId","item","getEditionName","listType","multiple","beforeUpload","file","onRemove","src","Users","Decks","handleDelete","deckId","rowSelection","selectedRowKeys","startSetDefaultDeck","marginTop","NewDeckCardContainer","useDrop","accept","drop","collect","monitor","isOver","canDrop","NewDeckCard","moveCard","changeCardZone","zoneName","newCardsToMySelection","c","splice","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","useDrag","isDragging","end","dropResult","getDropResult","drag","opacity","NewDeck","typeId","setTypeId","dragCard","newList","$splice","returnItemsForZone","getNameType","isMobile","innerWidth","okText","placement","cancelText","gutter","startLoadCardByEdition","DndProvider","backend","TouchBackend","HTML5Backend","offset","warning","startUpdateDeck","changeMatch","changOpponenteMatch","setViewCardsOrigin","setViewCardsDestiny","setAmountCardsViewAction","amount","setWeaponAction","ZONE_NAMES","closeModalThrowXcards","closeModalSelectXcards","closeModalTakeControlOpponentCard","closeModalAssignWeapon","shuffle","source","randomIndex","newMatch","array","currentIndex","Math","floor","random","throwXcards","x","originZone","destinyZone","newX","toDestiny","slice","CASTLE_ZONE","DEFENSE_ZONE","ATTACK_ZONE","CEMETERY_ZONE","EXILE_ZONE","REMOVAL_ZONE","SUPPORT_ZONE","HAND_ZONE","GOLDS_PAID_ZONE","UNPAID_GOLD_ZONE","AUXILIARY_ZONE","CardComponent","isOpponent","myUserId","visiblePopover","setVisiblePopover","animated","setAnimated","cardToMove","index2","newCards","newCardsOpponent","armsId","armId","armCardInMyZone","idx","bearerId","bearerInMyDefenseZone","bearerInMyAttackZone","newMatchOpponent","getHand","ammunt","handleVisibleChangePopever","takeControlOpponentCard","setTakeControlOpponentCardAction","sendToCastle","cardToDelete","openViewCastleModal","openSelectXcardsCastleModal","throwOneCard","openThrowCardsModal","viewArms","warn","viewBearer","setVibrateCard","isMyMatch","vibrate","newOpponentMatch","setVibrateArmCard","trigger","onVisibleChange","borderRadius","onContextMenu","event","preventDefault","alt","ToolOutlined","Zone","split","sendToZone","origin","destiny","CaretDownOutlined","float","CaretUpOutlined","MoreOutlined","ThrowXcardsModal","amountThrowXcards","setAmountModalThrowXcards","centered","onOk","max","defaultValue","CardComponentContainer","isOrigin","onlyRead","newOrigin","newDestiny","ViewCardsModal","optionSelect","setOptionSelect","resetModal","zoneToOrder","returnItemsForZoneDestiny","SelectXcardsModal","TakeControlOpponentCardModal","AssingWeaponModal","optionZone","setOptionZone","optionCarrier","setOptionCarrier","updateBearerAndArm","i","Number","arms","armCard","onChangeCarrier","Group","paddingBottom","direction","MatchPage2","leaveMutualMatchModal","ExclamationCircleOutlined","location","finishMutualMatchModal","cancelButtonProps","youWinModal","CheckCircleOutlined","opponentCards","myCards","returnItemsForZoneOpponent","withPopover","textAlign","MenuOutlined","Sider","SingedRouter","handleLogout","removeItem","close","acceptInvitation","notification","openNotification","btn","open","onClose","duration","from","matchSetMatchId","collapsedWidth","breakpoint","overflow","position","left","theme","mode","PlayCircleOutlined","BlockOutlined","AppstoreOutlined","LogoutOutlined","marginLeft","margin","MatchPage","AppRouter","MyLApp","tip","spinning","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ff3006ac.chunk.js","sourcesContent":["export const authLogin = '[auth] Login';\nexport const authStartRegister = '[auth] Start Register';\nexport const authChecking = '[auth] Cheking login state';\nexport const authCheckingFinish = '[auth] Finish checking login state';\nexport const authLogout = '[auth] Logout';\nexport const authStartRenewToken = '[auth] Start renew token';\n\nexport type User = {\n    id: string;\n    name: string;\n    lastname: string;\n    email: string;\n    username: string;\n    role: string;\n    status: boolean;\n    online?: boolean;\n    playing?: boolean;\n    victories?: number;\n    defeats?: number;\n};\n\nexport type AuthState = Partial<User> & {\n    checking: boolean;\n    logged: boolean;\n}\n\n\n/*(User & {\n    checking: boolean;\n    logged: boolean;\n}) | {\n    checking: boolean;\n    logged: boolean;\n};*/\n\ntype AuthLogin = {    \n    type: typeof authLogin,\n    payload: User\n};\n\ntype AuthCheckingFinish = {    \n    type: typeof authCheckingFinish\n};\n\ntype AuthLogout = {    \n    type: typeof authLogout\n};\n\nexport type AuthActionTypes = AuthLogin | AuthCheckingFinish | AuthLogout;","\n  \nimport { AuthActionTypes, authCheckingFinish, authLogin, authLogout, AuthState } from \"./types\";\n\nconst initialState: AuthState = {\n    checking: true,\n    logged: false\n};\n\nexport const authReducer = (state: typeof initialState = initialState, action: AuthActionTypes): AuthState => {\n\n    switch (action.type) {\n        case authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n                logged: true           \n            };\n\n        case authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            };\n        \n        case authLogout:\n            return {\n                checking: false,\n                logged: false\n            };\n    \n        default:\n            return state;\n    }\n};","import { User } from '../auth/types';\nimport { Card } from '../card/types';\n\nexport const change = '[match] change';\nexport const changeOpponent = '[match] change opponent';\nexport const setMatchId = '[match] set matchId';\nexport const setOpponentId = '[match] set opponentId';\nexport const resetMatchValues = '[match] reset match';\nexport const setCardsOrigin = '[match] set view cards origin';\nexport const setCardsDestiny = '[match] set view cards destiny';\nexport const setAmountCardsView = '[match] set x cards view';\n\nexport const setTakeControlOpponentCard = '[match] set control opponent card';\n\nexport const setWeapon = '[match] set weapon';\n\nexport type MatchState = {\n    matchId: string | null;\n    match: Dictionary<Card[] | []>;\n    emmitChange: boolean;\n    opponentMatch: Dictionary<Card[] | []>;\n    opponentId: string | null;\n    viewCardsOrigin: Card[];\n    viewCardsDestiny: Card[];\n    amountCardsView: number;\n    takeControlOpponentCardIndex: number;\n    takeControlOpponentCardZone: string;\n    selectedWeapon: any;\n};\n\nexport type Dictionary<TValue> = {\n    [id: string]: TValue;\n};\n\nexport type DragCard = Partial<Card> & {\n    index: number;\n    zone: string;\n};\n\ntype ChangeAction = {\n    type: typeof change;\n    payload: any;\n};\n\ntype MatchChangeOpponentAction = {\n    type: typeof changeOpponent;\n    payload: Dictionary<Card[] | []>;\n};\n\ntype MatchSetId = {\n    type: typeof setMatchId,\n    payload: string\n};\n\ntype MatchSetOpponentId = {\n    type: typeof setOpponentId,\n    payload: string\n};\n\ntype MatchReset = {\n    type: typeof resetMatchValues\n};\n\ntype MatchViewCardsOrigin = {    \n    type: typeof setCardsOrigin,\n    payload: Card[]\n};\n\ntype MatchViewCardsDestiny = {    \n    type: typeof setCardsDestiny,\n    payload: Card[]\n};\n\ntype MatchAmountCardsView = {\n    type: typeof setAmountCardsView,\n    payload: number\n};\n\ntype MatchControlOpponentCard = {\n    type: typeof setTakeControlOpponentCard,\n    payload: any\n};\n\ntype MatchSetWeapon = {\n    type: typeof setWeapon,\n    payload: any\n};\n\nexport type MatchActionTypes = \nChangeAction | \nMatchSetId | \nMatchReset | \nMatchSetOpponentId | \nMatchChangeOpponentAction | \nMatchViewCardsOrigin | \nMatchViewCardsDestiny | \nMatchAmountCardsView |\nMatchControlOpponentCard |\nMatchSetWeapon;","import { MatchState, MatchActionTypes, change, setMatchId, resetMatchValues, setOpponentId, changeOpponent, setCardsOrigin, setCardsDestiny, setAmountCardsView, setTakeControlOpponentCard, setWeapon } from \"./types\";\n\nconst initialState: MatchState = {\n    matchId: null,\n    match: {},\n    emmitChange: true,\n    opponentMatch: {},\n    opponentId: null,\n    viewCardsOrigin: [],\n    viewCardsDestiny: [],\n    amountCardsView: 1,\n    takeControlOpponentCardIndex: -1,\n    takeControlOpponentCardZone: '',\n    selectedWeapon: null\n};\n\nexport const matchReducer = (state: typeof initialState = initialState, action: MatchActionTypes): MatchState => {\n\n    switch (action.type) {\n\n        case change:\n            return {\n                ...state,\n                match: action.payload.match,\n                emmitChange: action.payload.emmitChange\n\n            };\n\n        case changeOpponent:\n            return {\n                ...state,\n                opponentMatch: {...action.payload}\n\n            };\n\n        case setMatchId:\n            return {\n                ...state,\n                matchId: action.payload\n            };\n\n        case setOpponentId:\n            return {\n                ...state,\n                opponentId: action.payload\n            };\n\n        case setCardsOrigin:\n            return {\n                ...state,\n                viewCardsOrigin: [...action.payload]\n            };\n\n        case setCardsDestiny:\n            return {\n                ...state,\n                viewCardsDestiny: [...action.payload]\n            };\n\n        case setAmountCardsView:\n            return {\n                ...state,\n                amountCardsView: action.payload\n            };\n\n        case setTakeControlOpponentCard:\n            return {\n                ...state,\n                takeControlOpponentCardIndex: action.payload.index,\n                takeControlOpponentCardZone: action.payload.zone\n            };\n\n        case setWeapon:\n            return {\n                ...state,\n                selectedWeapon: action.payload\n            }\n\n        case resetMatchValues:\n            return initialState;\n    \n        default:\n            return state;\n    }\n\n};","export const typesCardLoad = '[typesCard] Load';\nexport const frecuenciesCardLoad = '[frecuenciesCard] Load';\nexport const racesCardLoad = '[racesCard] Load';\nexport const editionsCardLoad = '[editionsCard] Load';\nexport const resetDescription = '[description] Rest';\n\nexport type DescriptionState = {\n    types: TypeCard[];\n    frecuencies: FrecuencyCard[];\n    races: RaceCard[];\n    editions: EditionCard[];\n};\n\nexport type TypeCard = {\n    id: string;\n    name: string;\n};\n\nexport type FrecuencyCard = {\n    id: string;\n    name: string;\n};\n\nexport type RaceCard = {\n    id: string;\n    name: string;\n    edition: string;\n};\n\nexport type EditionCard = {\n    id: string;\n    name: string;\n};\n\ntype TypeLoadAction = {\n    type: typeof typesCardLoad,\n    payload: TypeCard[]\n};\n\ntype FrecuencyCardLoadAction = {\n    type: typeof frecuenciesCardLoad,\n    payload: FrecuencyCard[]\n};\n\ntype RaceCardLoadAction = {\n    type: typeof racesCardLoad,\n    payload: RaceCard[]\n};\n\ntype EditionCardLoadAction = {\n    type: typeof editionsCardLoad,\n    payload: EditionCard[]\n};\n\ntype ResetDescriptionAction = {\n    type: typeof resetDescription;\n}\n\nexport type DescriptionCardActionTypes = TypeLoadAction | FrecuencyCardLoadAction | RaceCardLoadAction | EditionCardLoadAction | ResetDescriptionAction;","import { DescriptionCardActionTypes, DescriptionState, editionsCardLoad, frecuenciesCardLoad, racesCardLoad, resetDescription, typesCardLoad } from \"./types\";\n\n\nconst initialState: DescriptionState = {\n    types: [],\n    frecuencies: [],\n    races: [],\n    editions: []\n};\n\nexport const descriptionReducer = (state: typeof initialState = initialState, action: DescriptionCardActionTypes): DescriptionState => {\n\n    switch (action.type) {\n\n        case typesCardLoad:\n            return {\n                ...state,\n                types: [...action.payload]\n            };\n\n        case frecuenciesCardLoad:\n            return {\n                ...state,\n                frecuencies: [...action.payload]\n            };\n\n        case racesCardLoad:\n            return {\n                ...state,\n                races: [...action.payload]\n            };\n\n        case editionsCardLoad:\n            return {\n                ...state,\n                editions: [...action.payload]\n            };\n\n        case resetDescription:\n            return initialState;\n    \n\n        default:\n            return state;\n\n    }\n};","export const cardAddNew = '[card] Add new';\nexport const cardLoad = '[card] Load';\nexport const cardLoadUpdating = '[card] Load updating';\nexport const cardResetUpdating = '[card] Reset updating';\nexport const cardUpdate = '[card] Update';\nexport const cardByEdition = '[card] By edition';\nexport const selectMyCards = '[card] My select';\nexport const cardsToMySelection = '[card] To my selection';\nexport const cardsToOrigin = '[card] To origin';\nexport const cardsResetMySelection = '[card] Reset my selection';\n\nexport type Card = {\n    id?: string;\n    idx?: string;\n    num: number;\n    name: string;\n    ability?: string;\n    legend: string;\n    type: string;\n    frecuency: string;\n    edition: string;\n    race?: string;\n    cost?: number;\n    strength?: number;\n    isMachinery: boolean;\n    img: string;\n    isUnique: boolean;\n    user: string;\n\n    isOpponent?: boolean;    \n    armsId?: string[];\n    bearerId?: string;\n    vibrate?: boolean;\n};\n\nexport type CardState = {\n    cards: Card[];\n    cardUpdating: Card | null;\n    cardsByEdition: Card[];\n    selectMyCards: Card[];\n};\n\ntype CardAddNewAction = {    \n    type: typeof cardAddNew,\n    payload: Card\n};\n\ntype CardUpdateAction = {    \n    type: typeof cardUpdate,\n    payload: Card\n};\n\ntype CardLoadAction = {    \n    type: typeof cardLoad,\n    payload: Card[]\n};\n\ntype CardLoadUpdatingAction = {    \n    type: typeof cardLoadUpdating,\n    payload: string\n};\n\ntype CardResetUpdatingAction = {    \n    type: typeof cardResetUpdating\n};\n\ntype CardByEditionAction = {    \n    type: typeof cardByEdition,\n    payload: Card[]\n};\n\ntype SelectMyCardsAction = {    \n    type: typeof selectMyCards,\n    payload: Card[]\n};\n\ntype CardsToMySelection = {    \n    type: typeof cardsToMySelection,\n    payload: Card[]\n};\n\ntype CardsToOrigin = {    \n    type: typeof cardsToOrigin,\n    payload: Card[]\n};\n\ntype CardResetMySelectionAction = {    \n    type: typeof cardsResetMySelection\n};\n\n\nexport type CardActionTypes = \n\nCardAddNewAction | \nCardLoadAction | \nCardLoadUpdatingAction | \nCardResetUpdatingAction | \nCardUpdateAction | \nCardByEditionAction | \nSelectMyCardsAction |\nCardsToMySelection |\nCardsToOrigin | \nCardResetMySelectionAction;","import { CardActionTypes, cardAddNew, cardLoad, CardState, cardLoadUpdating, cardResetUpdating, cardUpdate, Card, cardByEdition, selectMyCards, cardsResetMySelection } from \"./types\";\n\nconst initialState: CardState = {\n    cards: [],\n    cardUpdating: null,\n    cardsByEdition: [],\n    selectMyCards: []\n};\n\nexport const cardReducer = (state: typeof initialState = initialState, action: CardActionTypes): CardState => {\n\n    switch (action.type) {\n\n        case cardAddNew:\n            return {\n                ...state,\n                cards: [...state.cards,  action.payload],\n                cardUpdating: action.payload\n            };\n\n        case cardUpdate:\n            return {\n                ...state,\n                cards: state.cards.map(\n                    (e: Card) => (e.id === action.payload.id) ? action.payload : e\n                )\n            };\n\n\n        case cardLoad:\n            return {\n                ...state,\n                cards: [...action.payload]\n            };\n\n        case cardLoadUpdating:\n            return {\n                ...state,\n                cardUpdating: state.cards.find((e: Card) => e.id === action.payload) as Card\n            };\n\n        case cardResetUpdating:\n            return {\n                ...state,\n                cardUpdating: null\n            };\n\n        case cardByEdition:\n            return {\n                ...state,\n                cardsByEdition: [...action.payload]\n            };\n\n        case selectMyCards:\n            return {\n                ...state,\n                selectMyCards: [...action.payload]\n            };\n\n        case cardsResetMySelection:\n            return {\n                ...state,\n                cardsByEdition: [],\n                selectMyCards: []\n            }\n    \n\n        default:\n            return state;\n\n    }\n};","export const spinShow = '[spin] Show';\nexport const spinHide = '[spin] Hide';\n\nexport type SpinState = {\n    show: boolean;\n    text: string;\n};\n\ntype SpinShowAction = {\n    type: typeof spinShow,\n    payload: string\n};\n\ntype SpinHideAction = {\n    type: typeof spinHide\n};\n\nexport type SpinActionTypes = SpinShowAction | SpinHideAction;","import { SpinActionTypes, spinHide, spinShow, SpinState } from \"./types\";\n\n\nconst initialState: SpinState = {\n    show: false,\n    text: ''\n};\n\nexport const spinReducer = (state: typeof initialState = initialState, action: SpinActionTypes): SpinState => {\n\n    switch (action.type) {\n\n        case spinShow:\n            return {\n                ...state,\n                show: true,\n                text: action.payload\n            };\n\n        case spinHide:\n            return {\n                ...state,\n                ...initialState\n            };\n\n\n        default:\n            return state;\n\n    }\n};","import { Card } from \"../card/types\";\n\nexport const deckAddNew = '[deck] Add new';\nexport const deckLoad = '[deck] Load';\nexport const deckUpdating = '[deck] Load';\nexport const deckLoadUpdating = '[deck] Load updating';\nexport const deckResetUpdating = '[deck] Reset updating';\nexport const deckDelete = '[deck] Delete';\nexport const deckUpdate = '[deck] Update';\nexport const deckSetDefault = '[deck] Set default';\n\nexport type Deck = {\n    id?: string;\n    name: string;\n    cards: Card[];\n    byDefault: boolean;\n};\n\nexport type DeckState = {\n    decks: Deck[];\n    deckUpdating: Deck | null;\n    deckDefault: Deck | null;\n};\n\ntype DeckAddNewAction = {    \n    type: typeof deckAddNew,\n    payload: Deck\n};\n\ntype DeckLoadAction = {    \n    type: typeof deckLoad,\n    payload: Deck[]\n};\n\ntype DeckLoadUpdatingAction = {    \n    type: typeof deckLoadUpdating,\n    payload: string\n};\n\ntype DeckResetUpdatingAction = {    \n    type: typeof deckResetUpdating\n};\n\ntype DeckDeleteAction = {    \n    type: typeof deckDelete,\n    payload: string\n};\n\ntype DeckUpdateAction = {\n    type: typeof deckUpdate,\n    payload: Deck\n};\n\ntype DeckSetDefaultAction = {    \n    type: typeof deckSetDefault,\n    payload: string\n};\n\nexport type DeckActionTypes = \nDeckAddNewAction | \nDeckLoadAction |\nDeckLoadUpdatingAction |\nDeckResetUpdatingAction |\nDeckDeleteAction |\nDeckUpdateAction |\nDeckSetDefaultAction;","import { DeckState, DeckActionTypes, deckAddNew, deckLoad, Deck, deckLoadUpdating, deckResetUpdating, deckDelete, deckUpdate, deckSetDefault } from \"./types\";\n\nconst initialState: DeckState = {\n    decks: [],\n    deckUpdating: null,\n    deckDefault: null\n};\n\nexport const deckReducer = (state: typeof initialState = initialState, action: DeckActionTypes): DeckState => {\n\n    switch (action.type) {\n\n        case deckAddNew:\n            return {\n                ...state,\n                decks: [...state.decks,  action.payload]\n            };\n\n        case deckLoad:\n            return {\n                ...state,\n                decks: [...action.payload],\n                deckDefault: action.payload.find((e: Deck) => e.byDefault === true ) as Deck\n            };\n\n        case deckLoadUpdating:\n            return {\n                ...state,\n                deckUpdating: state.decks.find((e: Deck) => e.id === action.payload) as Deck\n            };\n\n        case deckResetUpdating:\n            return {\n                ...state,\n                deckUpdating: null\n            };\n\n        case deckDelete:\n            return {\n                ...state,\n                decks: state.decks.filter((e: Deck) => e.id !== action.payload)\n            };\n\n        case deckUpdate:\n            return {\n                ...state,\n                decks: state.decks.map(\n                    (e: Deck) => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        \n        case deckSetDefault:\n            return {\n                ...state,\n                decks: state.decks.map((e: Deck) => {\n                    if (e.id === action.payload) {\n                        return {\n                            ...e,\n                            byDefault: true\n                        }\n                    }\n\n                    return e;\n                }),\n                deckDefault: state.decks.find((e: Deck) => e.id === action.payload) as Deck\n            }\n    \n\n        default:\n            return state;\n\n    }\n};","export const uiOpenModalThrowXcards = '[ui-modal] Open modal ThrowXcards';\nexport const uiCloseModalThrowXcards = '[ui-modal] Close modal ThrowXcards';\n\nexport const uiOpenModalViewCastle = '[ui-modal] Open modal ViewCastle';\nexport const uiCloseModalViewCastle = '[ui-modal] Close modal ViewCastle';\n\nexport const uiOpenModalViewXCastle = '[ui-modal] Open modal ViewXCastle';\nexport const uiCloseModalViewXCastle = '[ui-modal] Close modal ViewXCastle';\n\nexport const uiOpenModalSelectXCastle = '[ui-modal] Open modal SelectXcards';\nexport const uiCloseModalSelectXCastle = '[ui-modal] Close modal SelectXcards';\n\nexport const uiOpenModalViewCastleOpponent = '[ui-modal] Open modal ViewCastle Opponent';\nexport const uiCloseModalViewCastleOpponent = '[ui-modal] Close modal ViewCastle Opponent';\n\nexport const uiOpenModalViewCementery = '[ui-modal] Open modal ViewCementery';\nexport const uiCloseModalViewCementery = '[ui-modal] Close modal ViewCementery';\nexport const uiOpenModalViewExile = '[ui-modal] Open modal ViewExile';\nexport const uiCloseModalViewExile = '[ui-modal] Close modal ViewExile';\nexport const uiOpenModalViewRemoval = '[ui-modal] Open modal ViewRemoval';\nexport const uiCloseModalViewRemoval = '[ui-modal] Close modal ViewRemoval';\n\nexport const uiOpenModalViewCementeryOpponent = '[ui-modal] Open modal ViewCementery Opponent';\nexport const uiCloseModalViewCementeryOpponent = '[ui-modal] Close modal ViewCementery Opponent';\nexport const uiOpenModalViewExileOpponent = '[ui-modal] Open modal ViewExile Opponent';\nexport const uiCloseModalViewExileOpponent = '[ui-modal] Close modal ViewExile Opponent';\nexport const uiOpenModalViewRemovalOpponent = '[ui-modal] Open modal ViewRemoval Opponent';\nexport const uiCloseModalViewRemovalOpponent = '[ui-modal] Close modal ViewRemoval Opponent';\n\nexport const uiOpenModalViewHandOpponent = '[ui-modal] Open modal ViewHand Opponent';\nexport const uiCloseModalViewHandOpponent = '[ui-modal] Close modal ViewHand Opponent';\n\nexport const uiOpenModalTakeControlOpponentCard = '[ui-modal] Open modal Take Control Opponent Card';\nexport const uiCloseModalTakeControlOpponentCard = '[ui-modal] Close modal Take Control Opponent Card';\n\nexport const uiOpenModalAssignModal = '[ui-modal] Open modal Assign Weapon';\nexport const uiCloseModalAssignModal = '[ui-modal] Close modal Assign Weapon';\n\nexport type UiModalState = {\n    modalOpenThrowXcards: boolean;\n    modalOpenViewCastle: boolean;\n    modalOpenViewXcards: boolean;\n    modalOpenSelectXcards: boolean;\n    modalOpenViewCastleToOpponent: boolean;\n\n    modalOpenViewCementery: boolean;\n    modalOpenViewExile: boolean;\n    modalOpenViewRemoval: boolean;\n\n    modalOpenViewCementeryOpponent: boolean;\n    modalOpenViewExileOpponent: boolean;\n    modalOpenViewRemovalOpponent: boolean;\n\n    modalOpenViewHandOpponent: boolean;\n\n    modalOpenTakeControlOpponentCard: boolean;\n\n    modalOpenAssignWeapon: boolean;\n};\n\ntype ModalThrowXcardsOpenAction = {\n    type: typeof uiOpenModalThrowXcards;\n};\n\ntype ModalThrowXcardsCloseAction = {\n    type: typeof uiCloseModalThrowXcards;\n};\n\ntype ModalViewCastleOpenAction = {\n    type: typeof uiOpenModalViewCastle;\n};\n\ntype ModalViewCastleCloseAction = {\n    type: typeof uiCloseModalViewCastle;\n};\n\ntype ModalViewXCastleOpenAction = {\n    type: typeof uiOpenModalViewXCastle;\n};\n\ntype ModalViewXCastleCloseAction = {\n    type: typeof uiCloseModalViewXCastle;\n};\n\ntype ModalSelectXCastleOpenAction = {\n    type: typeof uiOpenModalSelectXCastle;\n};\n\ntype ModalSelectXCastleCloseAction = {\n    type: typeof uiCloseModalSelectXCastle;\n};\n\ntype ModalViewCastleOpponentOpenAction = {\n    type: typeof uiOpenModalViewCastleOpponent;\n};\n\ntype ModalViewCastleOpponentCloseAction = {\n    type: typeof uiCloseModalViewCastleOpponent;\n};\n\n/** **/\ntype ModalViewCementeryOpenAction = {\n    type: typeof uiOpenModalViewCementery;\n};\n\ntype ModalViewCementeryCloseAction = {\n    type: typeof uiCloseModalViewCementery;\n};\n\ntype ModalViewExileOpenAction = {\n    type: typeof uiOpenModalViewExile;\n};\n\ntype ModalViewExileCloseAction = {\n    type: typeof uiCloseModalViewExile;\n};\n\ntype ModalViewRemovalOpenAction = {\n    type: typeof uiOpenModalViewRemoval;\n};\n\ntype ModalViewRemovalCloseAction = {\n    type: typeof uiCloseModalViewRemoval;\n};\n\n/** **/\ntype ModalViewCementeryOpponentOpenAction = {\n    type: typeof uiOpenModalViewCementeryOpponent;\n};\n\ntype ModalViewCementeryOpponentCloseAction = {\n    type: typeof uiCloseModalViewCementeryOpponent;\n};\n\ntype ModalViewExileOpponentOpenAction = {\n    type: typeof uiOpenModalViewExileOpponent;\n};\n\ntype ModalViewExileOpponentCloseAction = {\n    type: typeof uiCloseModalViewExileOpponent;\n};\n\ntype ModalViewRemovalOpponentOpenAction = {\n    type: typeof uiOpenModalViewRemovalOpponent;\n};\n\ntype ModalViewRemovalOpponentCloseAction = {\n    type: typeof uiCloseModalViewRemovalOpponent;\n};\n\n\ntype ModalViewHandOpponentOpenAction = {\n    type: typeof uiOpenModalViewHandOpponent;\n};\n\ntype ModalViewHandOpponentCloseAction = {\n    type: typeof uiCloseModalViewHandOpponent;\n};\n\ntype ModalTakeControlOpponentCardOpenAction = {\n    type: typeof uiOpenModalTakeControlOpponentCard\n};\n\ntype ModalTakeControlOpponentCardCloseAction = {\n    type: typeof uiCloseModalTakeControlOpponentCard\n};\n\ntype ModalAssignWeaponOpenAction = {\n    type: typeof uiOpenModalAssignModal\n};\n\ntype ModalAssignWeaponCloseAction = {\n    type: typeof uiCloseModalAssignModal\n};\n\nexport type ModalActionTypes = \nModalThrowXcardsOpenAction | \nModalThrowXcardsCloseAction | \nModalViewCastleOpenAction | \nModalViewCastleCloseAction | \nModalViewXCastleOpenAction |\nModalViewXCastleCloseAction | \nModalSelectXCastleOpenAction |\nModalSelectXCastleCloseAction |\nModalViewCastleOpponentOpenAction |\nModalViewCastleOpponentCloseAction |\nModalViewCementeryOpenAction |\nModalViewCementeryCloseAction |\nModalViewExileOpenAction |\nModalViewExileCloseAction |\nModalViewRemovalOpenAction |\nModalViewRemovalCloseAction |\nModalViewCementeryOpponentOpenAction |\nModalViewCementeryOpponentCloseAction |\nModalViewExileOpponentOpenAction |\nModalViewExileOpponentCloseAction |\nModalViewRemovalOpponentOpenAction |\nModalViewRemovalOpponentCloseAction |\nModalViewHandOpponentOpenAction |\nModalViewHandOpponentCloseAction |\nModalTakeControlOpponentCardOpenAction |\nModalTakeControlOpponentCardCloseAction |\nModalAssignWeaponOpenAction |\nModalAssignWeaponCloseAction;","import { \n    ModalActionTypes, \n    UiModalState, \n    uiCloseModalThrowXcards, \n    uiOpenModalThrowXcards, \n    uiOpenModalViewCastle, \n    uiCloseModalViewCastle, \n    uiOpenModalViewXCastle, \n    uiCloseModalViewXCastle, \n    uiOpenModalSelectXCastle, \n    uiCloseModalSelectXCastle, \n    uiCloseModalViewCastleOpponent, \n    uiOpenModalViewCastleOpponent, \n    uiOpenModalViewCementery, \n    uiCloseModalViewCementery, \n    uiOpenModalViewExile, \n    uiCloseModalViewExile, \n    uiOpenModalViewRemoval, \n    uiCloseModalViewRemoval, \n    uiCloseModalViewCementeryOpponent, \n    uiOpenModalViewExileOpponent, \n    uiOpenModalViewCementeryOpponent, \n    uiCloseModalViewExileOpponent, \n    uiOpenModalViewRemovalOpponent, \n    uiCloseModalViewRemovalOpponent,\n    uiOpenModalViewHandOpponent,\n    uiCloseModalViewHandOpponent,\n    uiOpenModalTakeControlOpponentCard,\n    uiCloseModalTakeControlOpponentCard,\n    uiOpenModalAssignModal,\n    uiCloseModalAssignModal\n} from \"./types\";\n\n\nconst initialState: UiModalState = {\n    modalOpenThrowXcards: false,\n    modalOpenViewCastle: false,\n    modalOpenViewXcards: false,\n    modalOpenSelectXcards: false,\n    modalOpenViewCastleToOpponent: false,\n\n    modalOpenViewCementery: false,\n    modalOpenViewExile: false,\n    modalOpenViewRemoval: false,\n\n    modalOpenViewCementeryOpponent: false,\n    modalOpenViewExileOpponent: false,\n    modalOpenViewRemovalOpponent: false,\n\n    modalOpenViewHandOpponent: false,\n\n    modalOpenTakeControlOpponentCard: false,\n\n    modalOpenAssignWeapon: false\n};\n\nexport const uiModalReducer = (state: typeof initialState = initialState, action: ModalActionTypes): UiModalState => {\n\n    switch (action.type) {\n        case uiOpenModalThrowXcards:            \n            return {\n                ...state,\n                modalOpenThrowXcards: true\n            };\n\n        case uiCloseModalThrowXcards:        \n            return {\n                ...state,\n                modalOpenThrowXcards: false\n            };\n\n        case uiOpenModalViewCastle:            \n            return {\n                ...state,\n                modalOpenViewCastle: true\n            };\n\n        case uiCloseModalViewCastle:        \n            return {\n                ...state,\n                modalOpenViewCastle: false\n            };\n\n        case uiOpenModalViewXCastle:            \n            return {\n                ...state,\n                modalOpenViewXcards: true\n            };\n\n        case uiCloseModalViewXCastle:        \n            return {\n                ...state,\n                modalOpenViewXcards: false\n            };\n\n        case uiOpenModalSelectXCastle:            \n            return {\n                ...state,\n                modalOpenSelectXcards: true\n            };\n\n        case uiCloseModalSelectXCastle:\n            return {\n                ...state,\n                modalOpenSelectXcards: false\n            };\n\n        \n        case uiOpenModalViewCastleOpponent:            \n            return {\n                ...state,\n                modalOpenViewCastleToOpponent: true\n            };\n\n        case uiCloseModalViewCastleOpponent:        \n            return {\n                ...state,\n                modalOpenViewCastleToOpponent: false\n            };\n\n        /** */\n        case uiOpenModalViewCementery:        \n            return {\n                ...state,\n                modalOpenViewCementery: true\n            };\n        \n        case uiCloseModalViewCementery:        \n            return {\n                ...state,\n                modalOpenViewCementery: false\n            };\n\n        case uiOpenModalViewExile:        \n            return {\n                ...state,\n                modalOpenViewExile: true\n            };\n        \n        case uiCloseModalViewExile:        \n            return {\n                ...state,\n                modalOpenViewExile: false\n            };\n\n        case uiOpenModalViewRemoval:        \n            return {\n                ...state,\n                modalOpenViewRemoval: true\n            };\n        \n        case uiCloseModalViewRemoval:        \n            return {\n                ...state,\n                modalOpenViewRemoval: false\n            };\n\n        /** */\n        case uiOpenModalViewCementeryOpponent:        \n            return {\n                ...state,\n                modalOpenViewCementeryOpponent: true\n            };\n\n        case uiCloseModalViewCementeryOpponent:        \n            return {\n                ...state,\n                modalOpenViewCementeryOpponent: false\n            };\n\n        case uiOpenModalViewExileOpponent:        \n            return {\n                ...state,\n                modalOpenViewExileOpponent: true\n            };\n        \n        case uiCloseModalViewExileOpponent:        \n            return {\n                ...state,\n                modalOpenViewExileOpponent: false\n            };\n\n        case uiOpenModalViewRemovalOpponent:        \n            return {\n                ...state,\n                modalOpenViewRemovalOpponent: true\n            };\n        \n        case uiCloseModalViewRemovalOpponent:        \n            return {\n                ...state,\n                modalOpenViewRemovalOpponent: false\n            };\n\n        case uiOpenModalViewHandOpponent:        \n            return {\n                ...state,\n                modalOpenViewHandOpponent: true\n            };\n        \n        case uiCloseModalViewHandOpponent:        \n            return {\n                ...state,\n                modalOpenViewHandOpponent: false\n            };\n\n\n        case uiOpenModalTakeControlOpponentCard:        \n            return {\n                ...state,\n                modalOpenTakeControlOpponentCard: true\n            };\n        \n        case uiCloseModalTakeControlOpponentCard:        \n            return {\n                ...state,\n                modalOpenTakeControlOpponentCard: false\n            };\n\n        case uiOpenModalAssignModal:\n            return {\n                ...state,\n                modalOpenAssignWeapon: true\n            };\n\n        case uiCloseModalAssignModal:\n            return {\n                ...state,\n                modalOpenAssignWeapon: false\n            };\n\n        default:\n            return state;\n    }\n};","import { User } from \"../auth/types\";\n\nexport const setActiveUsers = '[play] set active users';\n\nexport type PlayState = {\n    activeUsers: User[];\n};\n\ntype PlaySetActiveUsers = {\n    type: typeof setActiveUsers;\n    payload: User[]\n};\n\nexport type PlayActionTypes = PlaySetActiveUsers;","import { PlayActionTypes, PlayState, setActiveUsers } from \"./types\";\n\nconst initialState: PlayState = {\n    activeUsers: []\n};\n\nexport const playReducer = (state: typeof initialState = initialState, action: PlayActionTypes): PlayState => {\n\n    switch (action.type) {\n        case setActiveUsers:\n            return {\n                ...state,\n                activeUsers: [...action.payload]\n            };\n\n        default:\n            return state;\n    }\n    \n};","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from './auth/reducer';\nimport { matchReducer } from './match/reducer';\n//import { socketReducer } from './socket/reducer';\nimport { descriptionReducer } from './description/reducer';\n\nimport { MatchState } from './match/types';\n//import { SocketState } from './socket/types';\nimport { AuthState } from './auth/types';\nimport { DescriptionState } from './description/types';\nimport { cardReducer } from './card/reducer';\nimport { CardState } from './card/types';\nimport { SpinState } from './spinUI/types';\nimport { spinReducer } from './spinUI/reducer';\nimport { DeckState } from './deck/types';\nimport { deckReducer } from './deck/reducer';\nimport { uiModalReducer } from './ui-modal/reducer';\nimport { UiModalState } from './ui-modal/types';\nimport { PlayState } from './play/types';\nimport { playReducer } from './play/reducer';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n};\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport interface RootState {\n    match: MatchState;\n    play: PlayState\n    auth: AuthState;\n    description: DescriptionState,\n    cards: CardState,\n    spin: SpinState,\n    decks: DeckState,\n    uiModal: UiModalState,\n    \n}\n\nexport const rootReducer = combineReducers({\n    match: matchReducer,\n    play: playReducer,\n    auth: authReducer,\n    description: descriptionReducer,\n    cards: cardReducer,\n    spin: spinReducer,\n    decks: deckReducer,\n    uiModal: uiModalReducer    \n});\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);","\nimport React, { createContext, useState } from 'react';\n\ntype Props = {\n    children: React.ReactNode;\n};\n\ntype GlobalContentUI = {\n    hiddenMenu: boolean;\n    showMenu: Function;\n    hideMenu: Function;\n    selectedOption: string;\n    setOptionMenu: Function;\n};\n\nexport const MenuContext = createContext<GlobalContentUI>({\n    hiddenMenu: false,\n    showMenu: () => {},\n    hideMenu: () => {},\n    selectedOption: '',\n    setOptionMenu: () => {},\n});\n\nexport const MenuProvider = ({ children }: Props) => {\n\n    const [hiddenMenu, setHiddenMenu] = useState<boolean>(false);\n    const [selectedOption, setSelectedOption] = useState<string>('');\n\n    const showMenu = () => {\n        setHiddenMenu(false);\n    };\n\n    const hideMenu = () => {\n        setHiddenMenu(true);\n    };\n\n    const setOptionMenu = (option: string) => {\n        setSelectedOption(option)\n    }\n\n    return (\n        <MenuContext.Provider value={ { hiddenMenu, showMenu, hideMenu, selectedOption, setOptionMenu } }>\n            { children }\n        </MenuContext.Provider>\n    )\n};","import { useCallback, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst useSocket = (serverPath: string) => {\n\t\n    // const socket = useMemo(() => io(serverPath, {\n\t// \ttransports: ['websocket']\n\t// }).connect(), [serverPath]);    \n\n\n\tconst [ socket, setSocket ] = useState<any>(null);\n    const [ online, setOnline ] = useState(false);\n\n    const conectarSocket = useCallback( () => {\n\n        const token = localStorage.getItem('token') || '';\n\n        const socketTemp = io(serverPath, {\n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            query: {\n                'x-token': token\n            }\n        \n        }).connect();\n\n        setSocket( socketTemp );\n    },[ serverPath ]);\n\n    const desconectarSocket = useCallback( () => {\n        socket?.disconnect();\n    },[ socket ]);\n\n\n    useEffect(() => {\n        setOnline( socket?.connected );\n    }, [socket])\n\n    useEffect(() => {\n        socket?.on('connect', () => setOnline( true ));\n    }, [ socket ])\n\n    useEffect(() => {\n        socket?.on('disconnect', () => setOnline( false ));\n    }, [ socket ])\n\n    return {\n        socket,\n        online,\n        conectarSocket,\n        desconectarSocket\n    }\n};\n\nexport default useSocket;","import React, { createContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Socket } from 'socket.io-client';\nimport { DefaultEventsMap } from 'socket.io-client/build/typed-events';\nimport useSocket from '../hooks/useSocket';\nimport { RootState } from '../store';\nimport { User } from '../store/auth/types';\nimport { playSetActiveUsers } from '../store/play/action';\n\n// Todo lo que se defina aquí estará disponible en sus hijos\n\ntype Props = {\n    children: React.ReactNode;\n};\n\nexport type GlobalContentSocket = {\n    online: boolean;\n    socket?: Socket<DefaultEventsMap, DefaultEventsMap>\n};\n\nexport const SocketContext = createContext<GlobalContentSocket>({\n    online: false\n});\n\nexport const SocketProvider = ({ children }: Props) => {\n    \n    const { socket, online, conectarSocket, desconectarSocket } = useSocket(process.env.REACT_APP_HOST_BACKEND as string);\n\n    const { logged, id } = useSelector((state: RootState) => state.auth);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if ( logged ) {\n            conectarSocket();\n            \n        }\n    }, [ logged, conectarSocket ]);\n\n    useEffect(() => {\n        if ( !logged ) {\n            desconectarSocket();\n        }\n    }, [ logged, desconectarSocket ]);\n\n    useEffect(() => {\n        socket?.on('active-users-list', (users: User[]) => {\n\n            const newUsers = users.filter(user => user.id !== id)\n\n            dispatch(playSetActiveUsers(newUsers));\n        });\n    }, [socket, dispatch, id])\n\n    return (\n        <SocketContext.Provider value={ {socket, online} }>\n            { children }\n        </SocketContext.Provider>\n    )\n};","import { User } from \"../auth/types\";\nimport { setActiveUsers } from \"./types\";\n\nexport const playSetActiveUsers = (users: User[]) => {\n    return {\n        type: setActiveUsers,\n        payload: users\n    }\n};","const baseUrl = process.env.REACT_APP_HOST_BACKEND;\n\nconst allowedMethods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH']\n\nexport const runFetch = (endpoint: string, data: object, method: string, token?: string): Promise<Response> => {\n\n    if (!allowedMethods.includes(method.toUpperCase())) {\n        throw new Error(`Los métodos permitidos son ${allowedMethods.join(', ')}`);\n    }\n\n    const url: RequestInfo = `${baseUrl}/${endpoint}`;\n\n    let options: any = {\n        method,\n        headers: {}\n    };\n\n    if (!(data instanceof FormData)){\n        options.headers[\"Content-type\"] = \"application/json\";\n    } \n\n    if (token) options.headers[\"x-token\"] = token;\n\n    if (method.toUpperCase() !== 'GET') options.body = !(data instanceof FormData) ? JSON.stringify(data) : data;\n\n    return fetch(url, options);\n};","import { Dispatch } from \"react\";\nimport { runFetch } from \"../../helpers/fetch\";\nimport { AuthActionTypes,\n        authLogin, \n        authLogout, \n        User \n} from \"./types\";\n\nexport const startLogin = (email: string, password: string) => {\n    return async (dispatch: Dispatch<AuthActionTypes>) => {\n\n        try {\n            const resp = await runFetch('api/auth/login', { email, password }, 'POST');\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                localStorage.setItem('token', respJson.token);\n                localStorage.setItem('token-init-date', new Date().getTime().toString());\n\n                dispatch(login({\n                    id: respJson.user.id,\n                    name: respJson.user.name,\n                    lastname: respJson.user.lastname,\n                    email: respJson.user.email,\n                    username: respJson.user.username,\n                    role: respJson.user.role,\n                    status: respJson.user.status,\n                    online: respJson.user.online,\n                    playing: respJson.user.playing,\n                    defeats: respJson.user.defeats\n                }));\n\n            } else {\n                console.log(respJson.msg)\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n        \n    }\n};\n\nexport const startRegister = (name: string, lastname: string, email: string, username: string, password: string) => {\n    return async (dispatch: Dispatch<AuthActionTypes>) => {\n\n        try {\n            const resp = await runFetch('api/auth/register', { name, lastname, email, username, password }, 'POST');\n            const respJson = await resp.json();\n\n            if (resp.status === 201) {\n                localStorage.setItem('token', respJson.token);\n                localStorage.setItem('token-init-date', new Date().getTime().toString());\n\n                dispatch(login({\n                    id: respJson.user.id,\n                    name: respJson.user.name,\n                    lastname: respJson.user.lastname,\n                    email: respJson.user.email,\n                    username: respJson.user.username,\n                    role: respJson.user.role,\n                    status: respJson.user.status,\n                    online: respJson.user.online,\n                    playing: respJson.user.playing,\n                    defeats: respJson.user.defeats\n                }));\n\n            } else {\n                console.log(respJson.msg)\n            }\n        } catch (error) {\n            console.log(error);\n        }\n        \n    }\n};\n\nexport const startChecking = () => {\n    return async (dispatch: Dispatch<AuthActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n\n            if (!token) {\n                dispatch(logout());\n            }\n\n            const resp = await runFetch('api/auth/renew-token',  {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                localStorage.setItem('token', respJson.token);\n\n                dispatch(login({\n                    id: respJson.user.id,\n                    name: respJson.user.name,\n                    lastname: respJson.user.lastname,\n                    email: respJson.user.email,\n                    username: respJson.user.username,\n                    role: respJson.user.role,\n                    status: respJson.user.status,\n                    online: respJson.user.online,\n                    playing: respJson.user.playing,\n                    defeats: respJson.user.defeats\n                }));\n\n            } else {\n                dispatch(logout());\n            }\n        } catch (error) {\n            console.log(error);\n        }        \n\n    }   \n};\n\nexport const startLogout = () => {\n    return (dispatch: Dispatch<AuthActionTypes>) => {\n        localStorage.removeItem('token');\n        dispatch(logout());\n    }\n};\n\nconst login = (user: User): AuthActionTypes => {\n    return {\n        type: authLogin,\n        payload: user\n    }\n};\n\nconst logout = (): AuthActionTypes => {\n    return {\n        type: authLogout\n    }\n};","import { message } from \"antd\";\nimport { Dispatch } from \"react\";\nimport { runFetch } from \"../../helpers/fetch\";\nimport { SpinActionTypes } from \"../spinUI/types\";\nimport { Card, CardActionTypes, cardAddNew, cardByEdition, cardLoad, cardLoadUpdating, cardResetUpdating, cardsResetMySelection, cardUpdate, selectMyCards } from \"./types\";\n\nexport const startAddNewCard = (card: any) => {\n    return async (dispatch: Dispatch<CardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/card', card, 'POST', token);\n            let respJson = await resp.json();\n\n            if (resp.status === 201) {\n                dispatch(addNewCard(respJson));                \n                message.success(`Carta \"${respJson.name}\" creada correctamente`);\n            } else {\n                console.log(resp);\n                message.error('Error al crear carta');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al crear carta!');\n        }\n    }\n};\n\nexport const startUpdateCard = (id: string, card: any) => {\n\n    return async (dispatch: Dispatch<CardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/card/' + id, card, 'PUT', token);\n            let respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(updateCard(respJson));\n                message.success(`Carta \"${respJson.name}\" actualizada correctamente`);\n            } else {\n                console.log(resp);\n                message.error('Error al actualizar carta');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al actualizar carta!');\n\n        }\n    }\n\n};\n\nexport const startLoadCard = () => {\n    return async (dispatch: Dispatch<CardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/card', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadCards(respJson));\n            } else {\n                message.error('Error al obtener cartas');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al obtener cartas!');\n        }\n    }\n};\n\nexport const startLoadCardUpdating = (id: string) => {\n    return async (dispatch: Dispatch<CardActionTypes | SpinActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/card/' + id, {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadCardUpdating(respJson));\n            } else {\n                console.log(resp)\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const startLoadCardByEdition = (editionId: string) => {\n    return async (dispatch: Dispatch<CardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/card/' + editionId + '/edition', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadCardsByEdition(respJson));\n            } else {\n                message.error('Error al obtener cartas');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al obtener cartas!');\n        }\n    }\n};\n\nexport const resetCardUpdating = () => {\n    return {\n        type: cardResetUpdating\n    }\n}\n\n\nexport const loadCardUpdating = (id: string): CardActionTypes => {\n    return {\n        type: cardLoadUpdating,\n        payload: id\n    }\n};\n\nconst loadCards = (cards: Card[]): CardActionTypes => {\n    return {\n        type: cardLoad,\n        payload: cards\n    }\n};\n\nconst addNewCard = (card: Card): CardActionTypes => {\n    return {\n        type: cardAddNew,\n        payload: card\n    }\n};\n\nconst updateCard = (card: Card): CardActionTypes => {\n    return {\n        type: cardUpdate,\n        payload: card\n    }\n};\n\nexport const loadCardsByEdition = (cards: Card[]): CardActionTypes => {\n    return {\n        type: cardByEdition,\n        payload: cards\n    }\n};\n\nexport const loadCardsMySelection = (cards: Card[]): CardActionTypes => {\n    return {\n        type: selectMyCards,\n        payload: cards\n    }\n};\n\nexport const resetMySelection = () => {\n    return {\n        type: cardsResetMySelection\n    }\n};","import { Dispatch } from \"react\";\nimport { runFetch } from \"../../helpers/fetch\";\nimport { DescriptionCardActionTypes, RaceCard, TypeCard, typesCardLoad, racesCardLoad, FrecuencyCard, frecuenciesCardLoad, EditionCard, editionsCardLoad, resetDescription } from \"./types\";\n\nexport const startLoadTypeCard = () => {\n    return async (dispatch: Dispatch<DescriptionCardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/type', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadTypeCard(respJson));\n            } else {\n                console.log(resp)\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const startLoadFrecuencyCard = () => {\n    return async (dispatch: Dispatch<DescriptionCardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/frecuency', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadFrecuencyCard(respJson));\n            } else {\n                console.log(resp)\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const startLoadRaceCard = () => {\n    return async (dispatch: Dispatch<DescriptionCardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/race', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadRaceCard(respJson));\n            } else {\n                console.log(resp)\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const startLoadEditionCard = () => {\n    return async (dispatch: Dispatch<DescriptionCardActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/edition', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadEditionCard(respJson));\n            } else {\n                console.log(resp)\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const resetAllDescription = () => {\n    return {\n        type: resetDescription\n    }\n}\n\nconst loadTypeCard = (typesCard: TypeCard[]): DescriptionCardActionTypes => {\n    return {\n        type: typesCardLoad,\n        payload: typesCard\n    }\n};\n\nconst loadFrecuencyCard = (frecuenciesCard: FrecuencyCard[]): DescriptionCardActionTypes => {\n    return {\n        type: frecuenciesCardLoad,\n        payload: frecuenciesCard\n    }\n};\n\nconst loadRaceCard = (racesCard: RaceCard[]): DescriptionCardActionTypes => {\n    return {\n        type: racesCardLoad,\n        payload: racesCard\n    }\n};\n\nconst loadEditionCard = (editionsCard: EditionCard[]): DescriptionCardActionTypes => {\n    return {\n        type: editionsCardLoad,\n        payload: editionsCard\n    }\n};\n\n","import React, { FC } from 'react';\nimport { Form, Input, Button,  Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { startLogin } from '../store/auth/action';\nconst { Title } = Typography;\n\n\nconst LoginPage: FC = () => {\n\n    const dispatch = useDispatch();\n\n    const onFinish = (values: any) => {\n\n        const { email, password } = values;\n        dispatch(startLogin(email, password));\n\n    };\n\n\n    return (\n        <>\n            <Title level={ 1 }>Iniciar Sesión</Title>\n\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={ onFinish }\n                // initialValues={{ remember: true }}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    name=\"email\"\n                    rules={[{\n                            type: 'email',\n                            message: 'Correo inválido',\n                        },                        \n                        { \n                            required: true, \n                            message: 'Por favor ingresa tu correo' \n                        }\n                    ]}\n                >\n                    <Input \n                        type=\"text\" \n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \n                        placeholder=\"Correo\" \n                    />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"password\"\n                    rules={[{ \n                            required: true, \n                            message: 'Por favor ingresa tu contraseña' \n                        }\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Contraseña\"\n                    />\n                </Form.Item>\n                \n                {/* <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                </Form.Item> */}\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                        Ingresar\n                    </Button>\n                    O \n                    <Link to=\"/auth/register\" > registrate!</Link>\n                </Form.Item>\n            </Form>\n        </>\n       \n    )\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Form, Input, Button,  Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { startRegister } from '../store/auth/action';\nconst { Title } = Typography;\n\nconst RegisterPage = () => {\n\n    const dispatch = useDispatch();\n\n    const onFinish = (values: any) => {\n\n        console.log(values)\n        \n        const { email, password, name, lastname, username } = values;\n\n        \n        dispatch(startRegister(name, lastname, email, username, password));\n\n\n    };\n\n\n    return (\n        <>\n            <Title level={ 1 }>Registro</Title>\n\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={ onFinish }\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    name=\"name\"\n                    rules={[{\n                            required: true,\n                            message: 'Por favor ingrese su nombre'\n                        }\n                    ]}\n                >\n                    <Input \n                        type=\"text\" \n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \n                        placeholder=\"Nombre\" \n                    />\n                \n                </Form.Item>\n\n                <Form.Item\n                    name=\"lastname\"\n                    rules={[{\n                            required: true,\n                            message: 'Por favor ingrese su apellido'\n                        }\n                    ]}\n                >\n                    <Input \n                        type=\"text\" \n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \n                        placeholder=\"Apellido\" \n                    />\n                \n                </Form.Item>\n\n                <Form.Item\n\n                    name=\"email\"\n                    rules={[{\n                            type: 'email',\n                            message: 'Correo inválido',\n                        },\n                        { \n                            required: true, \n                            message: 'Por favor ingresa tu correo' \n                        }]}\n                >\n                    <Input \n                        type=\"text\" \n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \n                        placeholder=\"Correo\" \n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"username\"\n                    rules={[{\n                            required: true,\n                            message: 'Por favor ingrese su nombre de usuario'\n                        }\n                    ]}\n                >\n                    <Input \n                        type=\"text\" \n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \n                        placeholder=\"Nombre de usuario\" \n                    />\n                \n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Por favor ingresa tu contraseña' }]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Contraseña\"\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password2\"\n                    rules={[{ required: true, message: 'Por favor ingresa tu contraseña' }]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Repetir contraseña\"\n                    />\n                </Form.Item>\n                \n                {/* <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                </Form.Item> */}\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                        Aceptar\n                    </Button>\n                    O \n                    <Link to=\"/auth/login\" > inicia sesión!</Link>\n                </Form.Item>\n            </Form>\n        </>\n        \n    )\n}\n\nexport default RegisterPage\n","import { Col, Layout, Row } from 'antd';\nimport React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport LoginPage from '../pages/LoginPage';\n\nimport '../css/auth.css';\nimport RegisterPage from '../pages/RegisterPage';\n\nconst { Content } = Layout;\n\nexport const AuthRouter: FC = () => {\n    return (\n\n        <Layout className=\"site-layout\"  style={{ height: '100vh' }}>\n            <Content\n                className=\"site-layout-background\"\n                style={{\n                    padding: 24,\n                }}\n            >\n                <div style={{ padding: 24 }}>\n                    <Row justify=\"space-around\" align=\"middle\">\n                        <Col xs={ 24 } sm= { 12 } md={ 9 } lg={ 9 } xl={ 6 } >\n                            <Switch>\n\n                                <Route exact path=\"/auth/login\" component={ LoginPage } />\n\n                                <Route exact path=\"/auth/register\" component={ RegisterPage } />\n\n                                <Redirect to=\"/auth/login\" />\n\n                            </Switch>\n\n                        </Col>\n                    </Row>\n                </div>\n            </Content>\n        </Layout>\n            \n    )\n};","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\ntype ProtectedRouteProps = RouteProps & {\n    isAuthenticated: boolean;\n};\n\nexport const PrivateRouter: React.FC<ProtectedRouteProps> = ({isAuthenticated, component, ...rest}: ProtectedRouteProps) => {\n\n    const Component: React.ComponentType<any> = component as React.ComponentType<any>;\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props: RouteProps) => (\n\n                (isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/auth/login\" />)\n\n            )}\n        \n        />\n    )\n};\n\nPrivateRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n};","\n  \nimport React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\ntype ProtectedRouteProps = RouteProps & {\n    isAuthenticated: boolean;\n};\n\nexport const PublicRouter: React.FC<ProtectedRouteProps> = ({isAuthenticated, component, ...rest}: ProtectedRouteProps) => {\n\n    const Component: React.ComponentType<any> = component as React.ComponentType<any>;\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props: RouteProps) => (\n\n                (!isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/\" />)\n\n            )}\n        \n        />\n    )\n};\n\nPublicRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n};","import { useContext, useEffect } from 'react'\nimport { MenuContext } from '../context/MenuContext';\n\nconst useHideMenu = (hide: boolean, menuOption: string) => {\n\n    const { showMenu, hideMenu, setOptionMenu } = useContext(MenuContext);\n\n    useEffect(() => {\n\n        hide ? hideMenu(): showMenu();\n    \n    }, [hide, showMenu, hideMenu]);\n\n    useEffect(() => {\n\n        setOptionMenu(menuOption);\n    \n    }, [menuOption, setOptionMenu]);\n  \n}\n\nexport default useHideMenu;","import { message } from \"antd\";\nimport { Dispatch } from \"react\";\nimport { runFetch } from \"../../helpers/fetch\";\nimport { Deck, DeckActionTypes, deckAddNew, deckDelete, deckLoad, deckLoadUpdating, deckResetUpdating, deckUpdate, deckSetDefault } from \"./types\";\n\nexport const startAddNewDeck = (deck: any) => {\n    return async (dispatch: Dispatch<DeckActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/deck', deck, 'POST', token);\n            let respJson = await resp.json();\n\n            if (resp.status === 201) {\n                dispatch(addNewDeck(respJson));                \n                message.success(`Mazo \"${respJson.name}\" creado correctamente`);\n            } else {\n                console.log(resp);\n                message.error('Error al crear mazo');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al crear mazo!');\n        }\n    }\n};\n\nexport const startUpdateDeck = (id: string, deck: any) => {\n\n    return async (dispatch: Dispatch<DeckActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/deck/' + id, deck, 'PUT', token);\n            let respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(updateDeck(respJson));\n                message.success(`Mazo \"${respJson.name}\" actualizado correctamente`);\n            } else {\n                console.log(resp);\n                message.error('Error al actualizar mazo');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al actualizar mazo!');\n\n        }\n    }\n\n};\n\nexport const startLoadDeck = () => {\n    return async (dispatch: Dispatch<DeckActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/deck', {}, 'GET', token);\n            const respJson = await resp.json();\n\n            if (resp.status === 200) {\n                dispatch(loadDecks(respJson));\n            } else {\n                message.error('Error al obtener mazos');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al obtener mazos!');\n        }\n    }\n};\n\nexport const startDeleteDeck = (id: string) => {\n    return async (dispatch: Dispatch<DeckActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/deck/'+ id, {}, 'DELETE', token);\n\n            if (resp.status === 200) {\n                dispatch(deleteDeck(id));\n            } else {\n                message.error('Error al eliminar mazos');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al eliminar mazos!');\n        }\n    }\n};\n\nexport const loadDeckUpdating = (id: string): DeckActionTypes => {\n    return {\n        type: deckLoadUpdating,\n        payload: id\n    }\n};\n\nexport const resetDeckUpdating = () => {\n    return {\n        type: deckResetUpdating\n    }\n};\n\nexport const startSetDefaultDeck = (id: string) => {\n\n    console.log('object')\n    return async (dispatch: Dispatch<DeckActionTypes>) => {\n\n        try {\n            const token = localStorage.getItem('token') as string;\n            const resp = await runFetch('api/deck/'+ id, {}, 'PATCH', token);\n\n            if (resp.status === 200) {\n                dispatch(setDefaultDeck(id));\n            } else {\n                message.error('Error al actualizar mazo por defecto');\n            }\n\n        } catch (error) {\n            console.log(error);\n            message.error('Error al actualizar mazo por defecto!');\n        }\n    }\n};\n\nconst setDefaultDeck = (id: string): DeckActionTypes => {\n    return {\n        type: deckSetDefault,\n        payload: id\n    }\n};\n\nconst loadDecks = (deck: Deck[]): DeckActionTypes => {\n    return {\n        type: deckLoad,\n        payload: deck\n    }\n};\n\n\nconst addNewDeck = (deck: Deck): DeckActionTypes => {\n    return {\n        type: deckAddNew,\n        payload: deck\n    }\n};\n\nconst updateDeck = (deck: Deck): DeckActionTypes => {\n    return {\n        type: deckUpdate,\n        payload: deck\n    }\n}\n\nconst deleteDeck = (id: string): DeckActionTypes => {\n    return {\n        type: deckDelete,\n        payload: id\n    }\n};","import { Alert, Button, Input, Modal, Space, Table, Tag } from 'antd';\nimport React, { FC, useContext, useEffect, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highlighter from 'react-highlight-words';\nimport { useLocation } from 'react-router';\nimport { SearchOutlined } from '@ant-design/icons';\nimport useHideMenu from '../../../hooks/useHideMenu';\nimport { RootState } from '../../../store';\nimport { resetCardUpdating, resetMySelection } from '../../../store/card/action';\nimport { User } from '../../../store/auth/types';\nimport { ColumnsType } from 'antd/lib/table';\nimport { SocketContext } from '../../../context/SocketContext';\nimport { startLoadDeck } from '../../../store/deck/action';\n\nconst Play: FC = () => {\n    \n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    useHideMenu(false, path);\n\n    const dispatch = useDispatch();\n\n    const { activeUsers } = useSelector((state: RootState) => state.play);\n    const { decks } = useSelector((state: RootState) => state.decks);   \n\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n\n    const { socket } = useContext(SocketContext);\n\n    const ref0 = useRef();\n\n    useEffect(() => {\n        \n        dispatch(resetCardUpdating());\n        dispatch(resetMySelection());\n\n    }, [dispatch]);\n\n    useEffect(() => {\n\n        if (decks.length === 0) { \n            dispatch(startLoadDeck());\n        }\n\n    }, [dispatch, decks.length]);\n\n    const handleSearch = (selectedKeys: string, confirm: Function, dataIndex: string) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = (clearFilters: Function) => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const getColumnSearchProps = (dataIndex: string, ref: any) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={ ref }\n                    placeholder={`Buscar por ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({ closeDropdown: false });\n                            setSearchText(selectedKeys[0])\n                            setSearchedColumn(dataIndex);\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: (filtered: boolean) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value: any, record: any) =>\n            record[dataIndex]\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n                : '',\n        onFilterDropdownVisibleChange: (visible: boolean) => {\n            if (visible) {\n                setTimeout(() => ref.current.select(), 100);\n            }\n        },\n        render: (text: string) =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n        ) : (\n            text\n        ),\n    });\n\n    const cancelInvitation = (opponentId: string, key: string) => {\n        clearInterval(timer);\n\n        socket?.emit('cancele-invitation', {\n            opponentId,\n            key\n        });\n    };\n\n    let timer: any;\n    \n    const countDown = (username: string, opponentId: string, key: string) => {\n        let secondsToGo = 10;\n        const modal = Modal.info({\n            title: 'Esperando confirmación',\n            content: `El usuario \"${username}\" tiene ${secondsToGo} segundos para confirmar`,\n            okButtonProps: { hidden: true },\n            onCancel: () => cancelInvitation(opponentId, key),\n        });\n        \n        timer = setInterval(() => {\n            secondsToGo -= 1;\n            modal.update({\n                content: `El usuario \"${username}\" tiene ${secondsToGo} segundos para confirmar`,\n            });\n        }, 1000);\n\n        setTimeout( () => {\n            clearInterval(timer);\n        }, secondsToGo * 1000);\n\n        setTimeout(() => {\n            modal.destroy();\n        }, secondsToGo * 1050);\n    };\n\n    useEffect(() => {\n        socket?.on('go-match', (payload: any) => {\n            Modal.destroyAll();\n        });\n\n        return () => {\n            clearInterval(timer);\n        }\n\n    }, [socket, timer]);\n\n    const invite = (opponentId: string, username: string) => {\n        const key = uuid();\n\n        socket?.emit('invite', {\n            opponentId,\n            key\n        });\n        \n        countDown(username, opponentId, key);\n    };\n\n    const columns: ColumnsType<User> = [\n        {\n            title: 'Usuario',\n            dataIndex: 'username',\n            key: 'username',\n            width: '30%',\n            ...getColumnSearchProps('username', ref0),\n            sorter: (a: any, b: any) => { \n                if(a.username < b.username) { return -1; }\n                if(a.username > b.username) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n        },\n        {\n            title: 'Victorias',\n            dataIndex: 'victories',\n            key: 'victories',\n            width: '10%',\n            sorter: (a: any, b: any) => { \n                if(a.victories < b.victories) { return -1; }\n                if(a.victories > b.victories) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n        },\n        {\n            title: 'Derrotas',\n            dataIndex: 'defeats',\n            key: 'defeats',\n            width: '10%',\n            sorter: (a: any, b: any) => { \n                if(a.defeats < b.defeats) { return -1; }\n                if(a.defeats > b.defeats) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n        },\n        {\n            title: 'Estado',\n            dataIndex: 'online',\n            key: 'online',\n            width: '30%',\n            sorter: (a: any, b: any) => { \n                if(a.online < b.online) { return -1; }\n                if(a.online > b.online) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n            render: (text, row) => {\n                return (row.online ? <Tag color=\"lime\">Online</Tag> : <Tag color=\"magneta\">Desconectado</Tag>) \n            }\n        },\n        {\n            title: '¿Jugando?',\n            dataIndex: 'playing',\n            key: 'playing',\n            width: '30%',\n            sorter: (a: any, b: any) => { \n                if(a.playing < b.playing) { return -1; }\n                if(a.playing > b.playing) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n            render: (text, row) => {\n                return (row.playing ? <Tag color=\"volcano\">Jugando...</Tag> : 'No') \n            }\n        },\n        {\n            title: '',\n            dataIndex: '',\n            key: 'x',\n            render: (text, row) => {\n\n                if (!row.playing && row.online) {\n                    return <Button onClick={ () => invite(row.id, row.username) } ghost>Invitar a jugar</Button>\n                }\n            },\n        },\n    ];\n\n    return (\n        <>\n             <Alert style={{ width: \"100%\", marginBottom: 10 }} message=\"En esta sección podrás elegir contra quién jugar. Sólo aparecen los usuarios que al menos tiene un mazo creado\" type=\"info\" showIcon/>\n \n             <Table<User>\n                 pagination={{ defaultPageSize: 15 }}\n                 rowKey=\"id\" \n                 columns={ columns } \n                 dataSource={ activeUsers } \n                 style={{ paddingTop: 10 }}\n             />\n        </>\n    )\n\n    \n}\n\nexport default Play;","import React, { FC, useEffect, useRef, useState } from 'react'\nimport { Button, Input, Popconfirm, Space, Tooltip, Table } from 'antd';\n\nimport { SearchOutlined, PlusOutlined } from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport { ColumnsType } from 'antd/es/table';\n\nimport { useHistory, useLocation } from 'react-router';\nimport useHideMenu from '../../../hooks/useHideMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card } from '../../../store/card/types';\nimport { RootState } from '../../../store';\nimport { resetCardUpdating, resetMySelection } from '../../../store/card/action';\nimport { Link } from 'react-router-dom';\n\nconst Cards: FC = () => {\n\n    const history = useHistory();\n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    useHideMenu(false, path);\n\n    const dispatch = useDispatch();\n\n    const { cards } = useSelector((state: RootState) => state.cards);\n\n    useEffect(() => {\n        \n        dispatch(resetCardUpdating());\n        dispatch(resetMySelection());\n\n    }, [dispatch]);\n\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n\n    const handleSearch = (selectedKeys: string, confirm: Function, dataIndex: string) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = (clearFilters: Function) => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const handleDelete = (id?: string) => {\n\n    };\n\n    const ref0 = useRef();\n    const ref1 = useRef();\n    const ref2 = useRef();\n    const ref3 = useRef();\n    const ref4 = useRef();\n    //const ref5 = useRef();\n\n    const getColumnSearchProps = (dataIndex: string, ref: any) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={ ref }\n                    placeholder={`Buscar por ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({ closeDropdown: false });\n                            setSearchText(selectedKeys[0])\n                            setSearchedColumn(dataIndex);\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: (filtered: boolean) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value: any, record: any) =>\n            record[dataIndex]\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n                : '',\n        onFilterDropdownVisibleChange: (visible: boolean) => {\n            if (visible) {\n                setTimeout(() => ref.current.select(), 100);\n            }\n        },\n        render: (text: string) =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n        ) : (\n            text\n        ),\n    });\n\n    const columns: ColumnsType<Card> = [\n        {\n            title: 'Número',\n            dataIndex: 'num',\n            key: 'num',\n            width: '5%',\n            ...getColumnSearchProps('num', ref0),\n            sorter: (a: any, b: any) => a.num - b.num,\n            sortDirections: ['descend', 'ascend'],\n        },\n        {\n            title: 'Nombre',\n            dataIndex: 'name',\n            key: 'name',\n            width: '30%',\n            ...getColumnSearchProps('name', ref1),\n            sorter: (a: any, b: any) => { \n                if(a.name < b.name) { return -1; }\n                if(a.name > b.name) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n            render: (text, row) => <Link to={`/cards/${row.id}/edit`}>{ text }</Link>           \n            \n        },\n        {\n            title: 'Edición',\n            dataIndex: 'edition',\n            key: 'edition',\n            width: '20%',\n            ...getColumnSearchProps('edition', ref2),\n            sortDirections: ['descend', 'ascend'],\n            sorter: (a: any, b: any) => { \n                if(a.edition < b.edition) { return -1; }\n                if(a.edition > b.edition) { return 1; }\n                return 0;\n            },\n        },\n        {\n            title: 'Tipo',\n            dataIndex: 'type',\n            key: 'type',\n            width: '20%',\n            ...getColumnSearchProps('type', ref3),\n            sortDirections: ['descend', 'ascend'],\n            sorter: (a: any, b: any) => { \n                if(a.type < b.type) { return -1; }\n                if(a.type > b.type) { return 1; }\n                return 0;\n            },\n        },\n        {\n            title: 'Raza',\n            dataIndex: 'race',\n            key: 'race',\n            width: '20%',\n            ...getColumnSearchProps('race', ref3),\n            sortDirections: ['descend', 'ascend'],\n            sorter: (a: any, b: any) => { \n                if(a.race < b.race) { return -1; }\n                if(a.race > b.race) { return 1; }\n                return 0;\n            },\n        },\n        {\n            title: 'Frecuencia',\n            dataIndex: 'frecuency',\n            key: 'frecuency',\n            ...getColumnSearchProps('frecuency', ref4),\n            sortDirections: ['descend', 'ascend'],\n            sorter: (a: any, b: any) => { \n                if(a.frecuency < b.frecuency) { return -1; }\n                if(a.frecuency > b.frecuency) { return 1; }\n                return 0;\n            },\n            \n        },\n        {\n            title: '',\n            dataIndex: '',\n            key: 'x',\n            render: (text, row) => (\n                <Popconfirm title=\"¿Está seguro?\" onConfirm={() => handleDelete(row.id)}>\n                    <Link to=\"\">Eliminar</Link>     \n                </Popconfirm>\n            ),\n        },\n    ];\n\n    const addNewCard = () => {\n        history.push(`/cards/new`);\n    };\n\n    return (\n        <>\n            <Tooltip title=\"Agregar carta\">\n                <Button onClick={ addNewCard } type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\n            </Tooltip>\n\n            <Table<Card>\n                pagination={{ defaultPageSize: 15 }}\n                rowKey=\"id\" \n                columns={ columns } \n                dataSource={ cards } \n                style={{ paddingTop: 10 }}\n            />\n        </>\n    )\n}\n\nexport default Cards;","import { SpinActionTypes, spinHide, spinShow} from \"./types\";\n\nexport const showSpin = (text: string): SpinActionTypes => {\n    return {\n        type: spinShow,\n        payload: text\n    }\n};\n\nexport const hideSpin = (): SpinActionTypes => {\n    return {\n        type: spinHide\n    }\n};","import React, { useEffect, useState } from 'react';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Typography,\n    Switch,\n    InputNumber,\n    Tooltip,\n    Upload,\n    Image,\n    message,\n    Divider\n} from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useHideMenu from '../../../hooks/useHideMenu';\nimport { RootState } from '../../../store';\nimport { startAddNewCard, loadCardUpdating, startUpdateCard, startLoadCard } from '../../../store/card/action';\nimport { useHistory, useParams } from 'react-router';\nimport { hideSpin, showSpin } from '../../../store/spinUI/action';\n\nimport '../../../css/new-card.css'\n\nconst { Title } = Typography;\nconst { TextArea } = Input;\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n};\n\nconst NewCard = () => {\n\n    useHideMenu(false, 'cards');\n\n    const params: any = useParams();\n\n    const dispatch = useDispatch();\n\n    const { cardUpdating, cards } = useSelector((state: RootState) => state.cards);\n\n    const [fields, setFields] = useState<FieldData[]>([]);\n\n    const [checkIsMachinery, setCheckIsMachinery] = useState<boolean>(false);\n    const [checkIsUnique, setCheckIsUnique] = useState<boolean>(false);\n    const [disableMachinery, setDisableMachinery] = useState<boolean>(true);\n    const [fileList, setFileList] = useState<any>();\n    const [editionName, setEditionName] = useState<string>('');\n\n    const { types, frecuencies, editions, races } = useSelector((state: RootState) => state.description);    \n\n    const history = useHistory();\n\n    useEffect(() => {\n        async function getFromAPI() {\n            await dispatch(startLoadCard());\n            await dispatch(loadCardUpdating(params.id));\n        }\n\n        if (params.id && params.id !== 'undefined') {\n            if (cards.length === 0) {\n                getFromAPI();\n            } else {\n                dispatch(loadCardUpdating(params.id));   \n            }\n        }\n\n    }, [params.id, dispatch, cards.length]);\n\n    useEffect(() => {\n        \n        if (cardUpdating) {\n            let fields = [{\n                name: 'num',\n                value: cardUpdating.num\n            },{\n                name: 'name',\n                value: cardUpdating.name\n            },{\n                name: 'ability',\n                value: cardUpdating.ability\n            },{\n                name: 'legend',\n                value: cardUpdating.legend\n            },{\n                name: 'type',\n                value: cardUpdating.type\n            },{\n                name: 'frecuency',\n                value: cardUpdating.frecuency\n            },{\n                name: 'edition',\n                value: cardUpdating.edition\n            },{\n                name: 'race',\n                value: cardUpdating.race\n            },{\n                name: 'cost',\n                value: cardUpdating.cost\n            },{\n                name: 'strength',\n                value: cardUpdating.strength\n            }];\n\n            setFields(fields);\n            if (cardUpdating.isMachinery) setDisableMachinery(false);\n            setCheckIsMachinery(cardUpdating.isMachinery);\n            setCheckIsUnique(cardUpdating.isUnique);\n            setEditionName(cardUpdating.edition);\n        }\n\n    }, [cardUpdating]);\n\n    const onFinish = async (values: any) => {\n        let formData = new FormData();\n\n        let armTypeId;\n\n        for (const type of types) {\n            if (type.name === 'Arma') {\n                armTypeId = type.id;\n                break;\n            }\n        }        \n\n        for (let key in values) {\n            if (values[key] || values['strength'] === 0 ) formData.append(key, values[key]);                  \n        }     \n        \n        if (values.type !== armTypeId){\n            formData.append('isMachinery', 'false');\n        } else if (checkIsMachinery) {\n            formData.append('isMachinery', 'true');\n        }\n\n        if (checkIsUnique) {\n            formData.append('isUnique', 'true');\n        } else {\n            formData.append('isUnique', 'false');\n        }\n\n        if (!cardUpdating) {      \n            \n            if (!fileList) {\n                message.error('Debe adjuntar una imagen');\n                return;\n            }\n\n            formData.append('files[]', fileList);\n            dispatch(showSpin('Guardando carta...'));\n            await dispatch(startAddNewCard(formData));\n            dispatch(hideSpin());\n            history.replace(`/cards`);\n\n        } else {\n\n            if (fileList){\n\n                const isJPG = fileList.type === 'image/jpeg' || fileList.type === 'image/png';\n    \n                if (!isJPG) {\n                    message.error('Solo se pueden subir imágenes');\n                    return;\n                }\n    \n                formData.append('files[]', fileList);\n    \n            }\n\n            dispatch(showSpin('Guardando carta...'));\n            await dispatch(startUpdateCard(cardUpdating?.id as string, formData));          \n            dispatch(hideSpin());\n              \n        }\n\n    };\n\n    const handleChangeType = (id: string) => {\n        for (const type of types) {\n            if (id === type.id && type.name === 'Arma') {\n                setDisableMachinery(false);\n            } else {\n                setDisableMachinery(true);\n                setCheckIsMachinery(false)\n            }\n        }\n    };\n\n    const handleSwitchMaquinery = (checked: boolean) => {\n        setCheckIsMachinery(checked);\n    };\n\n    const handleSwitchUnique = (checked: boolean) => {\n        setCheckIsUnique(checked);\n    };\n\n    const handleEdition = (editionId: string) => {\n        \n        for (const edition of editions) {\n            if (edition.id === editionId) {\n                setEditionName(edition.name);\n                break;\n            }\n        }\n\n        if (cardUpdating) {\n            setFields((fields) => {\n                return fields.map(item => {\n                    if (item.name === 'race') {\n                        return {\n                            ...item,\n                            value: ''\n                        }\n                    } else {\n                        return item;\n                    }\n                })\n            });\n        } else {\n            setFields([{name: 'race', value: ''}])\n        }\n    };\n\n    const getEditionName = (editionId: string) => {\n\n        for (const edition of editions) {\n            if (edition.id === editionId) {\n                return edition.name;\n            }\n        }\n    }\n\n    const back = () => {\n        if (cardUpdating?.id && !cardUpdating?.img) {\n\n        }\n        history.push('/cards');\n    };\n\n    return (\n        <>\n            <Tooltip className=\"actions\" title=\"Volver al listado\">\n                <Button onClick={ back } type=\"primary\" shape=\"circle\" icon={<ArrowLeftOutlined />} />\n            </Tooltip>\n\n            <Divider />\n\n            <Title level={ 1 }>{!cardUpdating ?  'Crear Carta' : 'Modificar Carta'}</Title>\n            \n            <Form\n                labelCol={{ span: 7}}\n                wrapperCol={{ span: 9 }}\n                layout=\"horizontal\"\n                autoComplete=\"off\"\n                onFinish={ onFinish }\n                fields={ fields }\n            >\n        \n                <Form.Item \n                    label=\"Número\" \n                    name=\"num\"                    \n                >\n                    <InputNumber style={{width: '100%'}} min={ 1 } />\n                </Form.Item>\n\n                <Form.Item \n                    label=\"Nombre\" \n                    name=\"name\"\n                    rules={[{\n                        required: true,\n                        message: 'Por favor ingrese el nombre de la carta'\n                    }\n                ]}  \n                \n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item label=\"Habilidad\" name=\"ability\">\n                    <TextArea\n                        autoSize={{ minRows: 3, maxRows: 5 }}\n                    />\n                </Form.Item>\n\n                <Form.Item label=\"Leyenda\" name=\"legend\">\n                    <TextArea\n                        autoSize={{ minRows: 3, maxRows: 5 }}\n                    />\n                </Form.Item>\n\n                <Form.Item \n                    label=\"Tipo\" \n                    name=\"type\"\n                    rules={[{\n                        required: true,\n                        message: 'Por favor seleccione el tipo de carta'\n                        }\n                    ]}  \n                >\n                    <Select\n                        placeholder=\"Seleccione una opción\"\n                        onChange={ handleChangeType }\n                        style={{ width: \"100%\" }}\n                    \n                    >\n                    {\n                        types.length > 0 && types.map(type => (\n                            <Select.Option key={ type.id } value={ type.id }>{ type.name }</Select.Option>\n                        ))\n                    }                    \n                        \n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"¿Es maquinaria?\" valuePropName=\"isMachinery\">\n                    <Switch disabled={ disableMachinery } onChange={ handleSwitchMaquinery } checked={ checkIsMachinery }/>\n                </Form.Item>  \n\n                <Form.Item \n                    label=\"Frecuencia\" \n                    name=\"frecuency\"\n                    rules={[{\n                        required: true,\n                        message: 'Por favor seleccione la frecuencia de la carta'\n                        }\n                    ]}\n                    >\n                    <Select\n                        placeholder=\"Seleccione una opción\"\n                        style={{ width: \"100%\" }}\n                    \n                    >\n                    {\n                        frecuencies.length > 0 && frecuencies.map(frecuency => (\n                            <Select.Option key={ frecuency.id } value={ frecuency.id }>{ frecuency.name }</Select.Option>\n                        ))\n                    }                    \n                    \n                    </Select>\n                </Form.Item>\n\n                <Form.Item \n                    label=\"Edición\" \n                    name=\"edition\"\n                    rules={[{\n                        required: true,\n                        message: 'Por favor seleccione la edición de la carta'\n                        }\n                    ]}\n                    \n                    \n                    >\n                    <Select\n                            placeholder=\"Seleccione una opción\"\n                            style={{ width: \"100%\" }}\n                            onChange={ handleEdition }\n                        \n                        >\n                        {\n                            editions.length > 0 && editions.map(edition => (\n                                <Select.Option key={ edition.id } value={ edition.id }>{ edition.name }</Select.Option>\n                            ))\n                        }                    \n                        \n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Raza\" name=\"race\">\n                    <Select\n                            placeholder=\"Seleccione una opción\"\n                            style={{ width: \"100%\" }}                        \n                        >\n                        {\n\n                            races.length > 0 && races.filter(race => getEditionName(race.edition) === editionName).map(race => (\n                                <Select.Option key={ race.id } value={ race.id }>{ race.name }</Select.Option>\n                            ))\n                        }                    \n                        \n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Coste\" name=\"cost\">\n                    <InputNumber style={{width: '100%'}} min={ 0 } />\n                </Form.Item>\n\n                <Form.Item label=\"Fuerza\" name=\"strength\">\n                    <InputNumber style={{width: '100%'}} min={ 0 } />\n                </Form.Item>\n\n                <Form.Item label=\"¿Es única?\" valuePropName=\"isUnique\">\n                    <Switch checked={ checkIsUnique } onChange={ handleSwitchUnique }/>\n                </Form.Item>   \n\n                <Form.Item label=\"Imagen\">\n                    <Upload\n                        listType=\"picture\"\n                        multiple={ false } \n                        beforeUpload = { (file: any) => {\n                                \n                                setFileList(file);\n                                return false;\n                            }                      \n                        }\n                        onRemove = { (file: any) => {\n                                setFileList(null);\n                            }                      \n                        }\n                        \n                    >\n                        <Button type=\"dashed\" disabled={ fileList } > {!cardUpdating?.img ? 'Selecciona una imagen' : 'Imagen de la BD'}</Button>\n                    </Upload> \n                    \n                </Form.Item>   \n\n                <Form.Item className=\"label-custom\" label=\"preview\">\n                    { cardUpdating && !fileList && (<Image   \n                                            width={200}\n                                            src={ cardUpdating.img }\n                                        />)\n                    }\n                </Form.Item>\n            \n                <Form.Item className=\"label-custom\" label=\".\" >\n                    <Button type=\"primary\"  htmlType=\"submit\" className=\"login-form-button\" block>\n                        {!cardUpdating ? 'Crear' : 'Modificar' }\n                    </Button>\n                </Form.Item>\n            </Form>            \n        </>\n    )\n}\n\nexport default NewCard;","import React, { FC, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport useHideMenu from '../../../hooks/useHideMenu';\nimport { resetCardUpdating, resetMySelection } from '../../../store/card/action';\n\nconst Users: FC = () => {\n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    useHideMenu(false, path);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        dispatch(resetCardUpdating());\n        dispatch(resetMySelection());\n\n    }, [dispatch]);\n\n\n    return (\n        <div>\n            Users\n        </div>\n    )\n}\n\nexport default Users;","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { Button, Input, Popconfirm, Space, Tooltip, Table, Alert } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { ColumnsType } from 'antd/es/table';\nimport { SearchOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useHistory, useLocation } from 'react-router';\nimport useHideMenu from '../../../hooks/useHideMenu';\nimport { Link } from 'react-router-dom';\nimport { Deck } from '../../../store/deck/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { resetDeckUpdating, startDeleteDeck, startLoadDeck, startSetDefaultDeck } from '../../../store/deck/action';\nimport { resetCardUpdating } from '../../../store/card/action';\n\nconst Decks: FC = () => {\n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    useHideMenu(false, path);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const { decks, deckDefault } = useSelector((state: RootState) => state.decks);\n\n    const handleNewDesk = () => {\n        history.push(`/decks/new`);\n    };\n\n    useEffect(() => {\n        dispatch(startLoadDeck());\n        dispatch(resetDeckUpdating());\n        dispatch(resetCardUpdating());\n    }, [dispatch]);\n\n    const [searchText, setSearchText] = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n\n    const handleSearch = (selectedKeys: string, confirm: Function, dataIndex: string) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = (clearFilters: Function) => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const getColumnSearchProps = (dataIndex: string, ref: any) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: any) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={ ref }\n                    placeholder={`Buscar por ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({ closeDropdown: false });\n                            setSearchText(selectedKeys[0])\n                            setSearchedColumn(dataIndex);\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: (filtered: boolean) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value: any, record: any) =>\n            record[dataIndex]\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n                : '',\n        onFilterDropdownVisibleChange: (visible: boolean) => {\n            if (visible) {\n                setTimeout(() => ref.current.select(), 100);\n            }\n        },\n        render: (text: string) =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n        ) : (\n            text\n        ),\n    });\n\n    const handleDelete = (deckId?: string) => {\n        dispatch(startDeleteDeck(deckId as string));\n    };\n\n    const ref0 = useRef();\n\n    const columns: ColumnsType<Deck> = [\n        \n        {\n            title: 'Nombre',\n            dataIndex: 'name',\n            key: 'name',\n            width: '90%',\n            ...getColumnSearchProps('name', ref0),\n            sorter: (a: any, b: any) => { \n                if(a.name < b.name) { return -1; }\n                if(a.name > b.name) { return 1; }\n                return 0;\n            },\n            sortDirections: ['descend', 'ascend'],\n            render: (text, row) => <Link to={`/decks/${row.id}/edit`}>{ text }</Link>  \n        },\n        {\n            title: '',\n            dataIndex: '',\n            key: 'x',\n            render: (text, row) => (\n                <Popconfirm title=\"¿Está seguro?\" onConfirm={() => handleDelete(row.id)}>\n                    <Link to=\"\">Eliminar</Link>     \n                </Popconfirm>\n            ),\n        },\n    ];\n\n    const rowSelection = {\n        onChange: (selectedRowKeys: React.Key[]) => {\n            console.log(`selectedRowKeys1: ${selectedRowKeys}`);\n            const id = selectedRowKeys.toString();\n            dispatch(startSetDefaultDeck(id));\n        }\n    };\n\n    return (\n        <>\n            <Tooltip title=\"Crear nuevo Mazo\">\n                <Button onClick={ handleNewDesk } type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\n            </Tooltip>\n\n            <Alert style={{marginTop: 10}} message=\"En esta sección podrás crear tus mazos. Si no tiene al menos un mazo creado no podrás jugar\" type=\"info\" showIcon/>\n\n            <Table<Deck>\n                rowSelection={{\n                    type: 'radio',\n                    ...rowSelection,\n                    selectedRowKeys: [deckDefault?.id as string]\n                }}\n                pagination={{ defaultPageSize: 15 }}\n                rowKey=\"id\" \n                columns={ columns } \n                dataSource={ decks } \n                style={{ paddingTop: 10 }}\n            />\n            \n        </>\n    )\n}\n\nexport default Decks;","import React, { FC, ReactNode } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\n\ninterface CardContainerProps {\n    children: ReactNode;\n    title: string;\n};\n\nconst NewDeckCardContainer: FC<CardContainerProps> = ({ children, title }) => {\n\n    const { selectMyCards } = useSelector((state: RootState) => state.cards);\n\n    const [, drop] = useDrop({\n        accept: 'card',\n        drop: () => ({ name: title }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n        canDrop: (item: any) => {\n\n            if (selectMyCards.length >= 50 && title === 'my-cards') {\n                return false;\n            }\n\n            return true;                \n        }\n        \n    });\n\n    return (\n        <div ref={ drop } style={{ height: '100vh'}}>\n            \n            { children }\n\n        </div>\n    )\n}\n\nexport default NewDeckCardContainer;","import { Image } from 'antd';\nimport React, { FC, useRef } from 'react';\nimport { useDrag, useDrop, DropTargetMonitor, DropTargetOptions } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { XYCoord } from 'dnd-core';\nimport { RootState } from '../../../store';\nimport { loadCardsByEdition, loadCardsMySelection } from '../../../store/card/action';\nimport { Card } from '../../../store/card/types';\n\nexport interface NewDeckCardProps {\n    id?: string;\n    index: number;\n    moveCard?: (dragIndex: number, hoverIndex: number, zoneName: string) => void;\n    zone: string;\n    card: Card\n};\n\ninterface DragCard extends Card {\n    index: number;\n    zone: string;\n};\n\n\nconst NewDeckCard: FC<NewDeckCardProps> = ({ id, index, moveCard, zone, card }) => {   \n\n    const dispatch = useDispatch();\n    const ref = useRef<HTMLInputElement>(null); \n\n    const { cardsByEdition, selectMyCards } = useSelector((state: RootState) => state.cards);\n    \n    const changeCardZone = (item: DragCard, zoneName: string) => {\n        // zoneName es el destino\n        \n        if (item.zone === zoneName) {\n            return;\n        }\n\n        if (zoneName === 'my-cards') {\n            //mover hacia \"my-cards\"\n            const card = cardsByEdition.find((card: Card) => card.id === item.id) as Card;\n\n            const newCardsToMySelection = [...selectMyCards, card];   \n            \n            dispatch(loadCardsMySelection(newCardsToMySelection));\n\n        } else { // cards\n\n            const editionId = cardsByEdition[0]?.edition;\n            const card = selectMyCards[index];\n\n            if (card.edition === editionId) {\n                const existCardInCards = cardsByEdition.find(c => c.id === card.id);\n\n                if (!existCardInCards) {\n                    dispatch(loadCardsByEdition([...cardsByEdition, card]));\n                }\n            }\n\n            selectMyCards.splice(index, 1);\n\n            dispatch(loadCardsMySelection(selectMyCards));\n\n        }\n    }\n\n    const [{ handlerId }, drop] = useDrop({\n        accept: 'card',\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item: DragCard, monitor: DropTargetMonitor) {\n            \n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n    \n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n    \n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n    \n            // Get vertical middle\n            const hoverMiddleY =\n            (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    \n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n    \n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n    \n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n        \n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n    \n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n        \n            // Time to actually perform the action\n            moveCard && moveCard(dragIndex, hoverIndex, item.zone);\n        \n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        type: 'card',\n        item: () => {\n            return { id, index, zone, ...card }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n        end: (item: DragCard, monitor: DropTargetOptions) => {\n\n            const dropResult = monitor.getDropResult();\n            \n            if (dropResult) {\n                const { name } = dropResult;\n                \n                switch (name) {\n                    case 'cards':\n                        changeCardZone(item, 'cards');\n                        break;\n                    case 'my-cards':\n                        changeCardZone(item, 'my-cards');                        \n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n    });\n\n    const opacity = isDragging ? 0.4 : 1;\n\n    if (zone === 'my-cards') {\n        drag(drop(ref));\n    } else {\n        drag(ref);\n    }    \n\n    return (\n        <span ref={ ref } style={{ opacity, padding: 3 }} data-handler-id={ handlerId } >\n            \n            <Image\n                width={ 45 }\n                src={ card.img }\n            />\n\n        </span>\n    )\n}\n\nexport default NewDeckCard;","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Tooltip, Select, Divider, Row, Col, Alert, Tag, message, Input, Form, Popconfirm } from 'antd';\nimport { useHistory, useParams } from 'react-router';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport update from 'immutability-helper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport NewDeckCardContainer from './NewDeckCardContainer';\nimport {  loadCardsMySelection, resetMySelection, startLoadCardByEdition } from '../../../store/card/action';\nimport NewDeckCard from './NewDeckCard';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\n\nimport '../../../css/new-deck.css';\nimport { loadDeckUpdating, startAddNewDeck, startLoadDeck, startUpdateDeck } from '../../../store/deck/action';\nimport { Card } from '../../../store/card/types';\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n};\n\nconst NewDeck: FC = () => {\n\n    const history = useHistory();\n\n    const params: any = useParams();\n\n    const { cardsByEdition, selectMyCards } = useSelector((state: RootState) => state.cards);\n    const { types, editions } = useSelector((state: RootState) => state.description); \n    const { deckUpdating, decks } = useSelector((state: RootState) => state.decks); \n\n    const [typeId, setTypeId] = useState<string>('all');\n    const [fields, setFields] = useState<FieldData[]>([]);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        async function getFromAPI() {\n            await dispatch(startLoadDeck());\n            await dispatch(loadDeckUpdating(params.id));\n        }\n\n        if (params.id && params.id !== 'undefined') {\n            if (decks.length === 0) {\n                getFromAPI();\n            } else {\n                dispatch(loadDeckUpdating(params.id));\n            }\n        }\n\n    }, [params.id, dispatch, decks.length]);\n\n    useEffect(() => {\n        \n        if (deckUpdating) {\n            let fields = [{\n                name: 'name',\n                value: deckUpdating.name\n            }];\n\n            setFields(fields);\n        }\n\n    }, [deckUpdating]);\n\n    const handleSelectEdition = (editionId: string) => {\n        dispatch(startLoadCardByEdition(editionId));\n    };\n\n    const handleSelectType = (typeId: string) => {\n        setTypeId(typeId);\n    };\n\n    useEffect(() => {\n        if (deckUpdating?.cards) {\n            dispatch(loadCardsMySelection(deckUpdating?.cards as Card[]));\n        }\n\n    }, [dispatch, deckUpdating?.cards])\n\n    const moveCard = useCallback(\n        (dragIndex: number, hoverIndex: number, zoneName: string) => {\n\n            if (zoneName === 'cards') {\n                return;\n            }\n\n            const dragCard = selectMyCards[dragIndex];\n    \n            const newList = update(selectMyCards, {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, dragCard],\n                ],\n            });\n            \n            dispatch(loadCardsMySelection(newList));\n            \n        },\n        [selectMyCards, dispatch],\n    );\n\n    const returnItemsForZone = (zoneName: string) => {\n\n        if (zoneName === 'cards') {\n            \n            if (typeId !== 'all') {\n                return cardsByEdition\n                    .filter(card => card.type === typeId)\n                    .map((card, index) => {\n                        return (\n                            <NewDeckCard \n                                key={ index }\n                                id={ card.id }\n                                index={ index }\n                                moveCard={(dragIndex, hoverIndex, zoneName) => moveCard(dragIndex, hoverIndex, zoneName)}\n                                zone={ zoneName }\n                                card={ card }\n                            />\n                        )                        \n                    });\n            }\n\n        } else {\n            return selectMyCards\n                .map((card, index) => (\n                    <NewDeckCard \n                        key={ index }\n                        id={ card.id }\n                        index={ index }\n                        moveCard={(dragIndex, hoverIndex, zoneName) => moveCard(dragIndex, hoverIndex, zoneName)}\n                        zone={ zoneName }\n                        card={ card }\n                    />\n                ));\n        }        \n    };\n\n    const getNameType = (id: string) => {\n        const type = types.find(card => card.id === id);\n        return type?.name;\n    };\n\n    const isMobile = window.innerWidth < 600;\n\n    const handleOnFinish = (values: any) => {\n\n        if (selectMyCards.length < 50) {\n            message.warning('El mazo debe tener 50 cartas')\n            return;\n        }\n\n        const body = {\n            name: values.name,\n            cards: selectMyCards.map(card => card.id)\n        };\n\n        if (!deckUpdating) {\n            dispatch(startAddNewDeck(body));\n        } else {\n            dispatch(startUpdateDeck(deckUpdating.id as string, body));\n        }   \n\n    }\n\n    const confirm = (e: any) => {\n        dispatch(resetMySelection());\n        history.push('/decks');\n    };\n      \n    const cancel = (e: any) => {};      \n\n    return (\n        <>\n            <Row>\n                <Col span={ 24 } >\n\n                    { selectMyCards.length > 0 ? (\n                        <Popconfirm\n                            title=\"Si vuelve al listado perderá todos los datos no guardados. ¿Volver al listado?\"\n                            okText=\"Sí\"\n                            placement=\"right\"\n                            onConfirm={confirm}\n                            onCancel={cancel}\n                            cancelText=\"No\"\n                        >\n                            <Tooltip className=\"actions\" title=\"Volver al listado\">\n                                <Button type=\"primary\" shape=\"circle\" icon={<ArrowLeftOutlined />} />\n                            </Tooltip>\n                        </Popconfirm>\n                    ) : (\n                        <Tooltip className=\"actions\" title=\"Volver al listado\">\n                            <Button onClick={ confirm } type=\"primary\" shape=\"circle\" icon={<ArrowLeftOutlined />} />\n                        </Tooltip>\n                    )}\n                    \n                </Col>\n            </Row>            \n\n            <Row gutter={[16, 16]} style={{ paddingTop: 10 }}>\n                <Col span={ 24 } >\n                    <Select\n                        placeholder=\"Seleccione una edición\"\n                        style={{ width: \"100%\" }}\n                        onChange={ handleSelectEdition }                    \n                    >\n                        {\n                            editions.length > 0 && editions.map(edition => (\n                                <Select.Option key={ edition.id } value={ edition.id }>{ edition.name }</Select.Option>\n                            ))\n                        }\n                    </Select>\n                </Col>\n            </Row>\n\n            <Row gutter={[16, 16]} style={{ paddingTop: 10 }}>\n                <Col span={ 24 } >\n                    <Select\n                        placeholder=\"Seleccione un tipo\"\n                        style={{ width: \"100%\" }}\n                        onChange={ handleSelectType }                    \n                    >\n                        <Select.Option key=\"0\" value=\"all\">Todos</Select.Option>\n                        {\n                            types.length > 0 && types.map(type => (\n                                <Select.Option key={ type.id } value={ type.id }>{ type.name }</Select.Option>\n                            ))\n                        }\n                    </Select>\n                </Col>\n            </Row>\n\n            <Row gutter={[16, 16]} style={{ paddingTop: 10 }}>\n                <Col span={ 24 } >\n                    <Alert message=\"Arrastra las cartas de izquierda a derecha para agregarlas a tu mazo\" type=\"info\" showIcon/>\n                </Col>\n            </Row>\n\n                       \n            <Row style={{ paddingTop: 10 }}>\n                <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\n                    <Col className=\"container-deck\" span={ 14 } >\n                    <Tag color=\"gold\">{`Total: ${cardsByEdition.length}`}</Tag>\n                        <Tag color=\"green\">{`Aliados: ${(cardsByEdition.filter(card => getNameType(card.type) === 'Aliado')).length}`}</Tag>\n                        <Tag color=\"green\">{`Armas: ${(cardsByEdition.filter(card => getNameType(card.type) === 'Arma')).length}`}</Tag>\n                        <Tag color=\"green\">{`Oros: ${(cardsByEdition.filter(card => getNameType(card.type) === 'Oro')).length}`}</Tag>\n                        <Tag color=\"green\">{`Talismanes: ${(cardsByEdition.filter(card => getNameType(card.type) === 'Talismán')).length}`}</Tag>                        \n                        <Tag color=\"green\">{`Tótems: ${(cardsByEdition.filter(card => getNameType(card.type) === 'Tótem')).length}`}</Tag>\n                        <Divider />\n                        \n                            <NewDeckCardContainer title=\"cards\" >\n                                { cardsByEdition && returnItemsForZone('cards')}\n                            </NewDeckCardContainer>\n                        \n                    </Col>\n\n                    <Col className=\"container-deck\" offset={ 1 } span={ 9 }>\n                        <Row style={{ paddingTop: 10 }}>\n                            <Col span={ 24 }>\n                                <Form\n                                    layout=\"inline\"\n                                    autoComplete=\"off\"\n                                    onFinish={ handleOnFinish }\n                                    fields={ fields }\n                                >\n                                    <Form.Item\n                                        name=\"name\" \n                                        rules={[{\n                                            required: true,\n                                            message: 'Por favor ingrese el nombre del mazo'\n                                        }\n                                    ]} >\n                                        <Input placeholder=\"Ingrese nombre del Mazo\" />\n                                    </Form.Item>\n\n                                    <Form.Item >\n                                        <Button htmlType=\"submit\" type=\"primary\">{params.id ? 'Actualizar' : 'Guardar'}</Button>\n                                    </Form.Item>\n\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row style={{ paddingTop: 10 }}>\n                            <Col span={ 24 }>\n                                <Tag color=\"gold\">{`Total: ${selectMyCards.length}`}</Tag>\n                                <Tag color=\"green\">{`Aliados: ${(selectMyCards.filter(card => getNameType(card.type) === 'Aliado')).length}`}</Tag>\n                                <Tag color=\"green\">{`Armas: ${(selectMyCards.filter(card => getNameType(card.type) === 'Arma')).length}`}</Tag>\n                                <Tag color=\"green\">{`Oros: ${(selectMyCards.filter(card => getNameType(card.type) === 'Oro')).length}`}</Tag>\n                                <Tag color=\"green\">{`Talismanes: ${(selectMyCards.filter(card => getNameType(card.type) === 'Talismán')).length}`}</Tag>\n                                <Tag color=\"green\">{`Tótems: ${(selectMyCards.filter(card => getNameType(card.type) === 'Tótem')).length}`}</Tag>\n                                <Divider />\n                                <NewDeckCardContainer title=\"my-cards\" >\n                                    { selectMyCards && returnItemsForZone('my-cards')}\n                                </NewDeckCardContainer> \n                            </Col>\n                        </Row>\n                        \n                    </Col>\n                </DndProvider>   \n            </Row>\n        </>\n    )\n}\n\nexport default NewDeck;","import { User } from \"../auth/types\";\nimport { Card } from \"../card/types\";\nimport { change, MatchActionTypes, setMatchId, resetMatchValues, Dictionary, setOpponentId, changeOpponent, setCardsOrigin, setCardsDestiny, setAmountCardsView, setTakeControlOpponentCard, setWeapon } from \"./types\";\n\nexport const changeMatch = (match: Dictionary<Card[] | []>, emmitChange: boolean = true): MatchActionTypes => {\n    return {\n        type: change,\n        payload: {\n            match,\n            emmitChange\n        }\n    }\n};\n\nexport const changOpponenteMatch = (match: Dictionary<Card[] | []>): MatchActionTypes => {\n    return {\n        type: changeOpponent,\n        payload: match\n    }\n};\n\nexport const matchSetMatchId = (id: string) => {\n    return {\n        type: setMatchId,\n        payload: id\n    }\n};\n\nexport const matchSetOpponentId = (id: string) => {\n    return {\n        type: setOpponentId,\n        payload: id\n    }\n};\n\nexport const resetMatch = () => {\n    return {\n        type: resetMatchValues\n    }\n};\n\nexport const setViewCardsOrigin = (cards: Card[]) => {\n    return {\n        type: setCardsOrigin,\n        payload: cards\n    }\n};\n\nexport const setViewCardsDestiny = (cards: Card[]) => {\n    return {\n        type: setCardsDestiny,\n        payload: cards\n    }\n};\n\nexport const setAmountCardsViewAction = (amount: number) => {\n    return {\n        type: setAmountCardsView,\n        payload: amount\n    }\n};\n\nexport const setTakeControlOpponentCardAction = (index: number, zone: string) => {\n    return {\n        type: setTakeControlOpponentCard,\n        payload: {\n            index,\n            zone\n        }\n    }\n};\n\nexport const setWeaponAction = (data: any) => {\n    return {\n        type: setWeapon,\n        payload: data\n    }\n};","export const ZONE_NAMES = {\n    DEFENSE_ZONE: 'Defensa',\n    ATTACK_ZONE: 'Ataque',\n    CEMETERY_ZONE: 'Cementerio',\n    EXILE_ZONE: 'Destierro',\n    REMOVAL_ZONE: 'Remoción',\n    SUPPORT_ZONE: 'Apoyo',\n    HAND_ZONE: 'Mano',\n    CASTLE_ZONE: 'Castillo',\n    GOLDS_PAID_ZONE: 'Oros pagados',\n    UNPAID_GOLD_ZONE: 'Oros sin pagar',\n    AUXILIARY_ZONE: 'Auxiliar'\n};","import { ModalActionTypes, uiOpenModalThrowXcards, uiCloseModalThrowXcards, uiOpenModalViewCastle, uiCloseModalViewCastle, uiCloseModalViewXCastle, uiOpenModalViewXCastle, uiOpenModalSelectXCastle, uiCloseModalSelectXCastle, uiOpenModalViewCastleOpponent, uiCloseModalViewCastleOpponent, uiOpenModalViewCementery, uiCloseModalViewCementery, uiOpenModalViewExile, uiCloseModalViewExile, uiOpenModalViewRemoval, uiCloseModalViewRemoval, uiOpenModalViewCementeryOpponent, uiCloseModalViewCementeryOpponent, uiOpenModalViewExileOpponent, uiCloseModalViewExileOpponent, uiOpenModalViewRemovalOpponent, uiCloseModalViewRemovalOpponent, uiOpenModalViewHandOpponent, uiCloseModalViewHandOpponent, uiOpenModalTakeControlOpponentCard, uiCloseModalTakeControlOpponentCard, uiOpenModalAssignModal, uiCloseModalAssignModal } from './types';\n\nexport const openModalThrowXcards = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalThrowXcards\n    }\n};\n\nexport const closeModalThrowXcards = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalThrowXcards\n    }\n};\n\nexport const openModalViewCastle = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewCastle\n    }\n};\n\nexport const closeModalViewCastle = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewCastle\n    }\n};\n\nexport const openModalViewXCastle = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewXCastle\n    }\n};\n\nexport const closeModalViewXCastle = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewXCastle\n    }\n};\n\nexport const openModalSelectXcards = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalSelectXCastle\n    }\n};\n\nexport const closeModalSelectXcards = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalSelectXCastle\n    }\n};\n\nexport const openModalViewCastleOpponent = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewCastleOpponent\n    }\n};\n\nexport const closeModalViewCastleOpponent = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewCastleOpponent\n    }\n};\n\nexport const openModalViewCementery = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewCementery\n    }\n};\n\nexport const closeModalViewCementery = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewCementery\n    }\n};\n\nexport const openModalViewExile = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewExile\n    }\n};\n\nexport const closeModalViewExile = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewExile\n    }\n};\n\nexport const openModalViewRemoval = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewRemoval\n    }\n};\n\nexport const closeModalViewRemoval = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewRemoval\n    }\n};\n\nexport const openModalViewCementeryOpponent = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewCementeryOpponent\n    }\n};\n\nexport const closeModalViewCementeryOpponent = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewCementeryOpponent\n    }\n};\n\nexport const openModalViewExileOpponent = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewExileOpponent\n    }\n};\n\nexport const closeModalViewExileOpponent = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewExileOpponent\n    }\n};\n\nexport const openModalViewRemovalOpponent = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewRemovalOpponent\n    }\n};\n\nexport const closeModalViewRemovalOpponent = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewRemovalOpponent\n    }\n};\n\nexport const openModalViewHandOpponent = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalViewHandOpponent\n    }\n};\n\nexport const closeModalViewHandOpponent = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalViewHandOpponent\n    }\n};\n\n\nexport const openModalTakeControlOpponentCard = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalTakeControlOpponentCard\n    }\n};\n\nexport const closeModalTakeControlOpponentCard = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalTakeControlOpponentCard\n    }\n};\n\n\nexport const openModalAssignWeapon = (): ModalActionTypes => {\n    return {\n        type: uiOpenModalAssignModal\n    }\n};\n\nexport const closeModalAssignWeapon = (): ModalActionTypes => {\n    return {\n        type: uiCloseModalAssignModal\n    }\n};","export const shuffle = (source: any, zone: string) => {\n\n    const newMatch = {...source}\n    const array = source[zone];\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    newMatch[zone] = array;\n\n    return newMatch;\n};","import { Card } from \"../store/card/types\";\n\nexport const throwXcards = (x: number, source: any, originZone: string, destinyZone: string) => {\n    const newMatch = { ...source };\n    const newX = newMatch[originZone].length < x ? newMatch[originZone].length : x;\n    const toDestiny = newMatch[originZone].slice(-newX);\n    newMatch[originZone] = newMatch[originZone].filter((card: Card, index: number) => index < newMatch[originZone].length - newX);\n    newMatch[destinyZone] = [...newMatch[destinyZone], ...toDestiny];\n\n    return newMatch;\n    \n};","import { FC, useContext, useRef, useState } from 'react';\nimport { useDrag, useDrop, DropTargetMonitor, DropTargetOptions } from 'react-dnd';\nimport { XYCoord } from 'dnd-core';\n\nimport { Card } from '../../store/card/types';\nimport { DragCard  } from '../../store/match/types';\n\nimport { ToolOutlined, UserOutlined } from '@ant-design/icons';\n\nimport { ZONE_NAMES } from \"../../constants\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { changeMatch, changOpponenteMatch, setTakeControlOpponentCardAction, setWeaponAction } from '../../store/match/action';\nimport { Button, Image, message, Popover } from 'antd';\nimport { openModalAssignWeapon, openModalSelectXcards, openModalTakeControlOpponentCard, openModalThrowXcards, openModalViewCastle, openModalViewCementery, openModalViewCementeryOpponent, openModalViewExile, openModalViewExileOpponent, openModalViewRemoval, openModalViewRemovalOpponent } from '../../store/ui-modal/action';\nimport { shuffle } from '../../helpers/shuffle';\nimport { throwXcards } from '../../helpers/throwsCards';\nimport { SocketContext } from '../../context/SocketContext';\n\nconst { CASTLE_ZONE, DEFENSE_ZONE, ATTACK_ZONE, CEMETERY_ZONE, EXILE_ZONE, REMOVAL_ZONE, SUPPORT_ZONE, HAND_ZONE, GOLDS_PAID_ZONE, UNPAID_GOLD_ZONE, AUXILIARY_ZONE } = ZONE_NAMES;\n\nexport interface CardProps {\n    id?: string;\n    index: number;\n    moveCard?: (dragIndex: number, hoverIndex: number, zoneName: string) => void;\n    zone: string;\n    isOpponent?: boolean;\n    card: Card;\n};\n\nconst CardComponent: FC<CardProps> = ({ id, index, moveCard, zone, card, isOpponent }) => {\n\n    const ref = useRef<HTMLInputElement>(null); \n\n    const dispatch = useDispatch();\n\n    const { socket } = useContext(SocketContext);\n\n    const { match,matchId, opponentId, opponentMatch } = useSelector((state: RootState) => state.match);\n    const { id: myUserId} = useSelector((state: RootState) => state.auth);\n\n    const [visiblePopover, setVisiblePopover] = useState(false);\n    const [animated, setAnimated] = useState(false);\n\n    const changeCardZone = (item: DragCard, zoneName: string) => {\n        \n        if (item.zone === zoneName || isOpponent) {\n            return;\n        }        \n\n        const cardToMove = match[item.zone].find((card: Card, index2: number) => index2 === index) as Card;\n\n        const newCards = { ...match };\n        const newCardsOpponent = { ...opponentMatch };\n\n        if (card.user === myUserId) { // Moviendo mis propias cartas\n\n            console.log('Action:', `Moviendo \"${item.name}\" de \"${item.zone}\" a \"${zoneName}\"`);\n\n            if (cardToMove.armsId && (zoneName === CASTLE_ZONE || zoneName === CEMETERY_ZONE || zoneName === EXILE_ZONE || zoneName === REMOVAL_ZONE)) {                \n\n                for (const armId of cardToMove.armsId as string[]) {\n\n                    const armCardInMyZone = newCards[SUPPORT_ZONE].find((card: Card) => card.idx === armId);\n\n                    if (armCardInMyZone) {\n\n                        newCards[SUPPORT_ZONE] = newCards[SUPPORT_ZONE].filter((card: Card) => card.idx !== armId);\n\n                        delete armCardInMyZone.bearerId;\n\n                        if (armCardInMyZone.user === myUserId) {\n                            \n                            newCards[zoneName] = [...newCards[zoneName], armCardInMyZone];\n\n                        } else {\n\n                            newCardsOpponent[zoneName] = [...newCardsOpponent[zoneName], armCardInMyZone];\n\n                        }\n\n                    }\n\n                }\n\n                delete cardToMove.armsId;\n            }\n\n            if (cardToMove.bearerId && (zoneName === CASTLE_ZONE || zoneName === CEMETERY_ZONE || zoneName === EXILE_ZONE || zoneName === REMOVAL_ZONE)) {\n                // Al portador se le debe quitar esta arma\n                const bearerInMyDefenseZone = newCards[DEFENSE_ZONE].find((card: Card) => card.idx === cardToMove.bearerId);\n\n                if (bearerInMyDefenseZone) {\n                    newCards[DEFENSE_ZONE] = newCards[DEFENSE_ZONE].map((card: Card) => {\n                        if (card.idx === bearerInMyDefenseZone.idx) {\n                            return {\n                                ...card,\n                                armsId: card.armsId?.filter((armId: string) => armId !== cardToMove.idx)\n                            }\n                        }\n\n                        return card;\n                    });\n                } else {\n\n                    const bearerInMyAttackZone = newCards[ATTACK_ZONE].find((card: Card) => card.idx === cardToMove.bearerId);\n\n                    if (bearerInMyAttackZone) {\n                        newCards[ATTACK_ZONE] = newCards[ATTACK_ZONE].map((card: Card) => {\n                            if (card.idx === bearerInMyAttackZone.idx) {\n                                return {\n                                    ...card,\n                                    armsId: card.armsId?.filter((armId: string) => armId !== cardToMove.idx)\n                                }\n                            }\n    \n                            return card;\n                        });\n                    }\n                }\n\n                delete cardToMove.bearerId;\n            }\n\n            newCards[item.zone] = newCards[item.zone].filter((card: Card, index2: number) => index2 !== index);\n            newCards[zoneName] = [...newCards[zoneName], cardToMove];\n\n            if (zoneName === CASTLE_ZONE) { // Se baraja previamente si el destino es el Castillo\n\n                const newMatch = shuffle({ ...newCards }, CASTLE_ZONE);\n                dispatch(changeMatch(newMatch));\n                const newMatchOpponent = shuffle({ ...newCardsOpponent }, CASTLE_ZONE);\n                dispatch(changOpponenteMatch(newMatchOpponent));\n                socket?.emit('update-match-opponent', {\n                    match: newMatchOpponent,\n                    matchId\n                });\n\n            } else {\n\n                dispatch(changeMatch(newCards));\n                dispatch(changOpponenteMatch(newCardsOpponent));\n                socket?.emit('update-match-opponent', {\n                    match: newCardsOpponent,\n                    matchId\n                });\n\n            }\n\n        } else { // ------------------- Enviando cartas robadas -------------------------------------\n            \n            if (cardToMove.armsId && (zoneName === CASTLE_ZONE || zoneName === CEMETERY_ZONE || zoneName === EXILE_ZONE || zoneName === REMOVAL_ZONE)) {\n\n                for (const armId of cardToMove.armsId as string[]) {\n\n                    const armCardInMyZone = newCards[SUPPORT_ZONE].find((card: Card) => card.idx === armId);\n                    \n                    if (armCardInMyZone) {\n\n                        newCards[SUPPORT_ZONE] = newCards[SUPPORT_ZONE].filter((card: Card) => card.idx !== armId);\n\n                        delete armCardInMyZone.bearerId;\n\n                        if (armCardInMyZone.user === myUserId) {\n                            \n                            newCards[zoneName] = [...newCards[zoneName], armCardInMyZone];\n\n                        } else {\n\n                            newCardsOpponent[zoneName] = [...newCardsOpponent[zoneName], armCardInMyZone];\n\n                        }\n\n                    }\n\n                }\n\n                delete cardToMove.armsId;\n\n            }\n\n            if (cardToMove.bearerId && (zoneName === CASTLE_ZONE || zoneName === CEMETERY_ZONE || zoneName === EXILE_ZONE || zoneName === REMOVAL_ZONE)) {\n                // Al portador se le debe quitar esta arma\n                const bearerInMyDefenseZone = newCards[DEFENSE_ZONE].find((card: Card) => card.idx === cardToMove.bearerId);\n\n                if (bearerInMyDefenseZone) {\n                    newCards[DEFENSE_ZONE] = newCards[DEFENSE_ZONE].map((card: Card) => {\n                        if (card.idx === bearerInMyDefenseZone.idx) {\n                            return {\n                                ...card,\n                                armsId: card.armsId?.filter((armId: string) => armId !== cardToMove.idx)\n                            }\n                        }\n\n                        return card;\n                    })\n                } else {\n\n                    const bearerInMyAttackZone = newCards[ATTACK_ZONE].find((card: Card) => card.idx === cardToMove.bearerId);\n\n                    if (bearerInMyAttackZone) {\n                        newCards[ATTACK_ZONE] = newCards[ATTACK_ZONE].map((card: Card) => {\n                            if (card.idx === bearerInMyAttackZone.idx) {\n                                return {\n                                    ...card,\n                                    armsId: card.armsId?.filter((armId: string) => armId !== cardToMove.idx)\n                                }\n                            }\n    \n                            return card;\n                        })\n                    }\n\n                }\n\n                delete cardToMove.bearerId;\n            }\n\n            newCards[item.zone] = newCards[item.zone].filter((card: Card, index2: number) => index2 !== index);\n\n            if (zoneName === CASTLE_ZONE || zoneName === CEMETERY_ZONE || zoneName === EXILE_ZONE || zoneName === REMOVAL_ZONE) {\n                console.log('Action:', `Moviendo \"${item.name}\" de \"${item.zone}\" a \"${zoneName}\" oponente`);\n                newCardsOpponent[zoneName] = [...newCardsOpponent[zoneName], cardToMove];\n            } else {\n                console.log('Action:', `Moviendo \"${item.name}\" de \"${item.zone}\" a \"${zoneName}\"`);\n                newCards[zoneName] = [...newCards[zoneName], cardToMove];\n            }            \n\n            if (zoneName === CASTLE_ZONE) { // Se baraja previamente si el destino es el Castillo\n\n                const newMatch = shuffle({ ...newCards }, CASTLE_ZONE);\n                dispatch(changeMatch(newMatch));\n                const newMatchOpponent = shuffle({ ...newCardsOpponent }, CASTLE_ZONE);\n                dispatch(changOpponenteMatch(newMatchOpponent));\n\n                socket?.emit('update-match-opponent', {\n                    match: newMatchOpponent,\n                    matchId\n                });\n\n            } else {\n                \n                dispatch(changeMatch(newCards));\n                dispatch(changOpponenteMatch(newCardsOpponent));\n\n                socket?.emit('update-match-opponent', {\n                    match: newCardsOpponent,\n                    matchId\n                });\n\n            }\n            \n        }\n\n    };\n\n    const [{ handlerId }, drop] = useDrop({\n        accept: 'card',\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item: DragCard, monitor: DropTargetMonitor) {\n            \n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n    \n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n    \n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n    \n            // Get vertical middle\n            const hoverMiddleY =\n            (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    \n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n    \n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n    \n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n        \n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n    \n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n        \n            // Time to actually perform the action\n            moveCard && moveCard(dragIndex, hoverIndex, item.zone);\n        \n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        type: 'card',\n        item: () => {\n            return { id, index, zone, ...card }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n        end: (item: DragCard, monitor: DropTargetOptions) => {\n\n            const dropResult = monitor.getDropResult();\n            \n            if (dropResult) {\n                const { name } = dropResult;\n\n                /*if(isOpponent){\n                    return;\n                }*/            \n                \n                switch (name) {\n                    case DEFENSE_ZONE:\n                        changeCardZone(item, DEFENSE_ZONE);\n                        break;\n                    case ATTACK_ZONE:\n                        changeCardZone(item, ATTACK_ZONE);                        \n                        break;\n                    case CEMETERY_ZONE:\n                        changeCardZone(item, CEMETERY_ZONE);\n                        break;\n                    case EXILE_ZONE:\n                        changeCardZone(item, EXILE_ZONE);\n                        break;\n                    case HAND_ZONE:\n                        changeCardZone(item, HAND_ZONE);\n                        break;\n                    case REMOVAL_ZONE:\n                        changeCardZone(item, REMOVAL_ZONE);\n                        break;\n                    case SUPPORT_ZONE:\n                        changeCardZone(item, SUPPORT_ZONE);\n                        break;\n                    case CASTLE_ZONE:\n                        changeCardZone(item, CASTLE_ZONE);\n                        break;\n                    case GOLDS_PAID_ZONE:\n                        changeCardZone(item, GOLDS_PAID_ZONE);\n                        break;\n                    case UNPAID_GOLD_ZONE:\n                        changeCardZone(item, UNPAID_GOLD_ZONE);\n                        break;\n                    case AUXILIARY_ZONE:\n                        changeCardZone(item, AUXILIARY_ZONE);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n    });\n\n    const opacity = isDragging ? 0.4 : 1;\n    drag(drop(ref));\n\n    const shuffleCaslte = () => {\n\n        console.log('Action:', `Barajando Castillo`);\n\n        setAnimated(true);\n\n        const newMatch = shuffle(match, CASTLE_ZONE); \n\n        dispatch(changeMatch(newMatch));\n        handleVisibleChangePopever(false);\n\n        setTimeout(() => {\n            setAnimated(false);\n        }, 500);\n    };\n\n    const getHand = (ammunt: number) => {\n        if (!match[CASTLE_ZONE].length) {\n            message.warning(`No hay cartas en ${CASTLE_ZONE}`);\n            handleVisibleChangePopever(false);\n            return;\n        }\n\n        console.log('Action:', `Obteniendo mano`);\n\n        const newMatch = throwXcards(ammunt, match, CASTLE_ZONE, HAND_ZONE);\n\n        dispatch(changeMatch(newMatch));\n        handleVisibleChangePopever(false);        \n    };\n\n    const showToOpponent = () => {\n        console.log('Action:', `Mostrando Castillo al oponente`);\n\n        socket?.emit('show-clastle-to-opponent', {\n            matchId\n        });\n        handleVisibleChangePopever(false);   \n    };\n\n    const viewMyCementery = () => {\n        dispatch(openModalViewCementery());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewMyExile = () => {\n        dispatch(openModalViewExile());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewMyRemoval = () => {\n        dispatch(openModalViewRemoval());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewCementeryOpponent = () => {\n        dispatch(openModalViewCementeryOpponent());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewExileOpponent = () => {\n        dispatch(openModalViewExileOpponent());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewRemovalOpponent = () => {\n        dispatch(openModalViewRemovalOpponent());\n        handleVisibleChangePopever(false);\n    };\n\n    const viewModalAssignWeapon = () => {\n\n        if ((match && (!match[DEFENSE_ZONE].length && !match[ATTACK_ZONE].length)) && (opponentMatch && (!opponentMatch[DEFENSE_ZONE].length && !opponentMatch[ATTACK_ZONE].length)) ) {\n            message.warn(`Deben existir aliados en la línea de ${DEFENSE_ZONE} o ${ATTACK_ZONE} para asignarle una Arma`);\n        } else {            \n            dispatch(setWeaponAction({\n                index, \n                idx: card.idx as string\n            }));\n            dispatch(openModalAssignWeapon());\n        }\n        \n        handleVisibleChangePopever(false);\n    };\n\n    const takeControlOpponentCard = (zone: string) => {\n        dispatch(setTakeControlOpponentCardAction(index, zone));\n        dispatch(openModalTakeControlOpponentCard());\n        handleVisibleChangePopever(false);\n    };\n\n    const sendToCastle = (zoneName: string) => {\n        \n        console.log('Action:', `Enviando y barajando \"${card.name}\" de \"${zoneName}\" a \"${CASTLE_ZONE}\"`);\n\n        const dragCard: DragCard =  {\n            ...card,\n            zone: zoneName, \n            index: index\n        };     \n\n        const cardToDelete = match[dragCard.zone].find((card: Card, index2: number) => index2 === index) as Card;\n\n        const newCards = { ...match };\n        const newCardsOpponent = { ...opponentMatch };        \n\n        if (cardToDelete.user === myUserId) { // Enviando mis propias cartas            \n            \n            if (cardToDelete.armsId) {\n\n                for (const armId of cardToDelete.armsId as string[]) {\n\n                    const armCardInMyZone = newCards[SUPPORT_ZONE].find((card: Card) => card.idx === armId);\n\n                    if (armCardInMyZone) {\n\n                        newCards[SUPPORT_ZONE] = newCards[SUPPORT_ZONE].filter((card: Card) => card.idx !== armId);\n\n                        delete armCardInMyZone.bearerId;\n\n                        if (armCardInMyZone.user === myUserId) {\n                            \n                            newCards[CASTLE_ZONE] = [...newCards[CASTLE_ZONE], armCardInMyZone];\n\n                        } else {\n\n                            newCardsOpponent[CASTLE_ZONE] = [...newCardsOpponent[CASTLE_ZONE], armCardInMyZone];\n\n                        }\n\n                    }\n\n                }\n\n                delete cardToDelete.armsId;\n            }\n\n            if (cardToDelete.bearerId) {\n                // Al portador se le debe quitar esta arma\n                const bearerInMyDefenseZone = newCards[DEFENSE_ZONE].find((card: Card) => card.idx === cardToDelete.bearerId);\n\n                if (bearerInMyDefenseZone) {\n                    newCards[DEFENSE_ZONE] = newCards[DEFENSE_ZONE].map((card: Card) => {\n                        if (card.idx === bearerInMyDefenseZone.idx) {\n                            return {\n                                ...card,\n                                armsId: card.armsId?.filter((armId: string) => armId !== cardToDelete.idx)\n                            }\n                        }\n\n                        return card;\n                    });\n                } else {\n\n                    const bearerInMyAttackZone = newCards[ATTACK_ZONE].find((card: Card) => card.idx === cardToDelete.bearerId);\n\n                    if (bearerInMyAttackZone) {\n                        newCards[ATTACK_ZONE] = newCards[ATTACK_ZONE].map((card: Card) => {\n                            if (card.idx === bearerInMyAttackZone.idx) {\n                                return {\n                                    ...card,\n                                    armsId: card.armsId?.filter((armId: string) => armId !== cardToDelete.idx)\n                                }\n                            }\n    \n                            return card;\n                        });\n                    }\n                }\n\n                delete cardToDelete.bearerId;\n            }\n\n            newCards[dragCard.zone] = newCards[dragCard.zone].filter((card: Card, index2: number) => index2 !== index);\n            newCards[CASTLE_ZONE] = [...newCards[CASTLE_ZONE], cardToDelete];\n\n            const newMatch = shuffle({ ...newCards }, CASTLE_ZONE);\n            dispatch(changeMatch(newMatch));\n            const newMatchOpponent = shuffle({ ...newCardsOpponent }, CASTLE_ZONE);\n            dispatch(changOpponenteMatch(newMatchOpponent));\n            socket?.emit('update-match-opponent', {\n                match: newMatchOpponent,\n                matchId\n            });\n\n        } else { // ------------------- Enviando cartas robadas -------------------------------------\n\n            if (cardToDelete.armsId) {\n\n                for (const armId of cardToDelete.armsId as string[]) {\n\n                    const armCardInMyZone = newCards[SUPPORT_ZONE].find((card: Card) => card.idx === armId);\n                    \n                    if (armCardInMyZone) {\n\n                        newCards[SUPPORT_ZONE] = newCards[SUPPORT_ZONE].filter((card: Card) => card.idx !== armId);\n\n                        delete armCardInMyZone.bearerId;\n\n                        if (armCardInMyZone.user === myUserId) {\n                            \n                            newCards[CASTLE_ZONE] = [...newCards[CASTLE_ZONE], armCardInMyZone];\n\n                        } else {\n\n                            newCardsOpponent[CASTLE_ZONE] = [...newCardsOpponent[CASTLE_ZONE], armCardInMyZone];\n\n                        }\n\n                    }\n\n                }\n\n                delete cardToDelete.armsId;\n            }\n\n            if (cardToDelete.bearerId) {\n                // Al portador se le debe quitar esta arma\n                const bearerInMyDefenseZone = newCards[DEFENSE_ZONE].find((card: Card) => card.idx === cardToDelete.bearerId);\n\n                if (bearerInMyDefenseZone) {\n                    newCards[DEFENSE_ZONE] = newCards[DEFENSE_ZONE].map((card: Card) => {\n                        if (card.idx === bearerInMyDefenseZone.idx) {\n                            return {\n                                ...card,\n                                armsId: card.armsId?.filter((armId: string) => armId !== cardToDelete.idx)\n                            }\n                        }\n\n                        return card;\n                    })\n                } else {\n\n                    const bearerInMyAttackZone = newCards[ATTACK_ZONE].find((card: Card) => card.idx === cardToDelete.bearerId);\n\n                    if (bearerInMyAttackZone) {\n                        newCards[ATTACK_ZONE] = newCards[ATTACK_ZONE].map((card: Card) => {\n                            if (card.idx === bearerInMyAttackZone.idx) {\n                                return {\n                                    ...card,\n                                    armsId: card.armsId?.filter((armId: string) => armId !== cardToDelete.idx)\n                                }\n                            }\n    \n                            return card;\n                        })\n                    }\n\n                }\n\n                delete cardToDelete.bearerId;\n            }\n\n            newCards[dragCard.zone] = newCards[dragCard.zone].filter((card: Card, index2: number) => index2 !== index);\n            newCardsOpponent[CASTLE_ZONE] = [...newCardsOpponent[CASTLE_ZONE], cardToDelete];\n\n            const newMatch = shuffle({ ...newCards }, CASTLE_ZONE);\n            dispatch(changeMatch(newMatch));\n            const newMatchOpponent = shuffle({ ...newCardsOpponent }, CASTLE_ZONE);\n            dispatch(changOpponenteMatch(newMatchOpponent));\n\n            socket?.emit('update-match-opponent', {\n                match: newMatchOpponent,\n                matchId\n            });\n        }\n\n        handleVisibleChangePopever(false);\n    };\n\n    const content = (\n        <div>            \n            \n            {/* ACCIONES EN MI ZONA */}\n\n            {/* Castillo */}\n            {(zone === CASTLE_ZONE && !isOpponent) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => getHand(1) }>Robar carta</Button><br/>\n                    <Button type=\"link\" onClick={ () => getHand(8) }>Robar mano</Button><br/>\n                    <Button type=\"link\" onClick={ () => openViewCastleModal() }>Ver {zone}</Button><br/>\n                    <Button type=\"link\" onClick={ () => openSelectXcardsCastleModal() }>Ver X</Button><br/>\n                    <Button type=\"link\" onClick={ () => throwOneCard() }>Botar carta</Button> <br/>\n                    <Button type=\"link\" onClick={ () => openThrowCardsModal() }>Botar X</Button> <br/>\n                    <Button type=\"link\" onClick={ shuffleCaslte }>Barajar</Button> <br/>\n                    <Button type=\"link\" onClick={ showToOpponent }>Mostrar al oponente</Button>\n                </div>\n            )}\n\n            {/* Cementerio, destierro y remoción */}\n            {(zone === CEMETERY_ZONE && !isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewMyCementery }>Ver Cementerio</Button> <br/></div>\n            )}  \n\n            {(zone === EXILE_ZONE && !isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewMyExile }>Ver Destierro</Button> <br/></div>\n            )}  \n\n            {(zone === REMOVAL_ZONE && !isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewMyRemoval }>Ver Remoción</Button> <br/></div>\n            )}\n\n            {/* Oros, aliados, armas y totems */}\n            {(zone === DEFENSE_ZONE && (!isOpponent || match[zone].find(c => c.user === opponentId))) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => sendToCastle(DEFENSE_ZONE) }>Barajar en el Castillo</Button> <br/>\n                    { card.armsId && <Button type=\"link\" onClick={ () => viewArms(true) }>Conocer Armas</Button> }\n                </div>\n            )}\n\n            {(zone === ATTACK_ZONE && (!isOpponent || match[zone].find(c => c.user === opponentId))) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => sendToCastle(ATTACK_ZONE) }>Barajar en el Castillo</Button> <br/>\n                    { card.armsId && <Button type=\"link\" onClick={ () => viewArms(true) }>Conocer armas</Button> }             \n                </div>\n            )}\n\n            {(zone === SUPPORT_ZONE && (!isOpponent || match[zone].find(c => c.user === opponentId))) && (\n                <div>\n                    <Button type=\"link\" onClick={ viewModalAssignWeapon }>Asignar Portador</Button> <br/>\n                    { card.bearerId && <div><Button type=\"link\" onClick={ () => viewBearer(true) }>Conocer Portador</Button> <br/></div> }\n                    <Button type=\"link\" onClick={ () => sendToCastle(SUPPORT_ZONE) }>Barajar el Castillo</Button>\n                </div>\n            )}\n\n            {(zone === GOLDS_PAID_ZONE && (!isOpponent || match[zone].find(c => c.user === opponentId))) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => sendToCastle(SUPPORT_ZONE) }>Barajar el Castillo</Button>\n                </div>\n            )}\n\n            {(zone === UNPAID_GOLD_ZONE && (!isOpponent || match[zone].find(c => c.user === opponentId))) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => sendToCastle(UNPAID_GOLD_ZONE) }>Barajar el Castillo</Button>\n                </div>\n            )}\n\n\n            {/* ACCIONES EN ZONA OPONENTE*/}\n\n            {/* Oros, aliados, armas y totems */}\n            {(zone === DEFENSE_ZONE && (\n                (\n                    opponentMatch[DEFENSE_ZONE].find((c, index2) => (c.user === myUserId)) ||\n                    opponentMatch[DEFENSE_ZONE].find((c, index2) => (c.user === opponentId)) \n                ) &&\n                opponentMatch[DEFENSE_ZONE].find((c, index2) => (index2 === index && c.id === card.id))\n            )) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => takeControlOpponentCard(DEFENSE_ZONE) }>Tomar control de Aliado</Button><br/>\n                    { card.armsId && <Button type=\"link\" onClick={ () => viewArms(false) }>Conocer armas</Button> }  \n                </div>\n            )}\n\n            {(zone === ATTACK_ZONE && (\n                (\n                    opponentMatch[ATTACK_ZONE].find((c, index2) => (c.user === myUserId)) ||\n                    opponentMatch[ATTACK_ZONE].find((c, index2) => (c.user === opponentId)) \n                ) &&\n                opponentMatch[ATTACK_ZONE].find((c, index2) => (index2 === index && c.id === card.id))\n            )) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => takeControlOpponentCard(ATTACK_ZONE) }>Tomar control de Aliado</Button><br/>\n                    { card.armsId && <Button type=\"link\" onClick={ () => viewArms(false) }>Conocer armas</Button> }    \n                </div>\n            )}\n\n            {(zone === SUPPORT_ZONE && (\n                (\n                    opponentMatch[SUPPORT_ZONE].find((c, index2) => (c.user === myUserId)) ||\n                    opponentMatch[SUPPORT_ZONE].find((c, index2) => (c.user === opponentId)) \n                ) &&\n                opponentMatch[SUPPORT_ZONE].find((c, index2) => (index2 === index && c.id === card.id))\n            )) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => takeControlOpponentCard(SUPPORT_ZONE) }>Tomar control de Arma</Button><br/>\n                    { card.bearerId && <Button type=\"link\" onClick={ () => viewBearer(false) }>Conocer Portador</Button> }\n                </div>\n            )}\n\n            {(zone === GOLDS_PAID_ZONE && (\n                (\n                    opponentMatch[GOLDS_PAID_ZONE].find((c, index2) => (c.user === myUserId)) ||\n                    opponentMatch[GOLDS_PAID_ZONE].find((c, index2) => (c.user === opponentId)) \n                ) &&\n                opponentMatch[GOLDS_PAID_ZONE].find((c, index2) => (index2 === index && c.id === card.id))\n            )) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => takeControlOpponentCard(GOLDS_PAID_ZONE) }>Tomar control de Oro</Button>\n                </div>\n            )}\n\n            {(zone === UNPAID_GOLD_ZONE && (\n                (\n                    opponentMatch[UNPAID_GOLD_ZONE].find((c, index2) => (c.user === myUserId)) ||\n                    opponentMatch[UNPAID_GOLD_ZONE].find((c, index2) => (c.user === opponentId)) \n                ) &&\n                opponentMatch[UNPAID_GOLD_ZONE].find((c, index2) => (index2 === index && c.id === card.id))\n            )) && (\n                <div>\n                    <Button type=\"link\" onClick={ () => takeControlOpponentCard(UNPAID_GOLD_ZONE) }>Tomar control de Oro</Button>\n                </div>\n            )}\n\n            {/* Cementerio, destierro y remoción oponentes */}\n\n            {(zone === CEMETERY_ZONE && isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewCementeryOpponent }>Ver Cementerio</Button> <br/></div>\n            )}  \n\n            {(zone === EXILE_ZONE && isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewExileOpponent }>Ver Destierro</Button> <br/></div>\n            )}  \n\n            {(zone === REMOVAL_ZONE && isOpponent) && (\n                <div><Button type=\"link\" onClick={ viewRemovalOpponent }>Ver Remoción</Button> <br/></div>\n            )}    \n\n        </div>\n    );\n\n    const openThrowCardsModal = () => {\n        handleVisibleChangePopever(false);\n        dispatch(openModalThrowXcards());\n    }; \n\n    const openViewCastleModal = () => {\n        handleVisibleChangePopever(false);\n        dispatch(openModalViewCastle());\n    };\n\n    const throwOneCard = () => {\n        console.log('Action:', `Botando carta del ${CASTLE_ZONE} al ${CEMETERY_ZONE}`);\n        const newMatch = throwXcards(1, match, CASTLE_ZONE, CEMETERY_ZONE);\n        dispatch(changeMatch(newMatch));\n    };\n\n    const openSelectXcardsCastleModal = () => {\n        handleVisibleChangePopever(false);\n        dispatch(openModalSelectXcards());\n    };\n\n    const handleVisibleChangePopever = (visible: boolean) => {\n        if (!visible) setVisiblePopover(visible);        \n    };\n\n    const detail = (event: any) => {\n        event.preventDefault();\n        setVisiblePopover(true);\n    };\n\n    const setVibrateCard = (isMyMatch: boolean, vibrate: boolean) => {\n        if (isMyMatch) {\n            const newMatch = { ...match };\n            newMatch[DEFENSE_ZONE] = newMatch[DEFENSE_ZONE].map((c: Card, index: number) => {\n                if (card.bearerId === c.idx) {\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                }\n\n                return c;\n            });\n\n            newMatch[ATTACK_ZONE] = newMatch[ATTACK_ZONE].map((c: Card, index: number) => {\n                if (card.bearerId === c.idx) {\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                }\n\n                return c;\n            });\n\n            dispatch(changeMatch(newMatch, false));\n\n        } else {\n\n            const newOpponentMatch = { ...opponentMatch };\n            newOpponentMatch[DEFENSE_ZONE] = newOpponentMatch[DEFENSE_ZONE].map((c: Card, index: number) => {\n                if (card.bearerId === c.idx) {\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                }\n\n                return c;\n            });\n\n            newOpponentMatch[ATTACK_ZONE] = newOpponentMatch[ATTACK_ZONE].map((c: Card, index: number) => {\n                if (card.bearerId === c.idx) {\n\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                    \n                }\n\n                return c;\n            });\n\n            dispatch(changOpponenteMatch(newOpponentMatch));\n        }\n    }\n\n    const viewBearer = (isMyMatch: boolean) => {\n        \n        setVibrateCard(isMyMatch, true);\n\n        setTimeout(() => {\n            setVibrateCard(isMyMatch, false);\n        }, 500);\n\n        handleVisibleChangePopever(false);\n\n    };\n\n    const setVibrateArmCard = (isMyMatch: boolean, vibrate: boolean) => {\n\n        if (isMyMatch) {\n            const newMatch = { ...match };\n            newMatch[SUPPORT_ZONE] = newMatch[SUPPORT_ZONE].map((c: Card, index: number) => {\n                if (card.armsId?.includes(c.idx as string)) {\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                }\n\n                return c;\n            });\n\n            dispatch(changeMatch(newMatch, false));\n\n        } else {\n            const newOpponentMatch = { ...opponentMatch };\n            newOpponentMatch[SUPPORT_ZONE] = newOpponentMatch[SUPPORT_ZONE].map((c: Card, index: number) => {\n                if (card.armsId?.includes(c.idx as string)) {\n                    if (vibrate) {\n                        return {\n                            ...c,\n                            vibrate\n                        }\n                    }\n\n                    delete c.vibrate;\n                    return c;\n                }\n\n                return c;\n            });\n\n            dispatch(changOpponenteMatch(newOpponentMatch));\n        }\n    };\n\n    const viewArms = (isMyMatch: boolean) => {\n\n        setVibrateArmCard(isMyMatch, true);\n\n        setTimeout(() => {\n            setVibrateArmCard(isMyMatch, false);\n        }, 500);\n\n        handleVisibleChangePopever(false);\n\n    };\n\n    const getClassName = () => {\n        if (animated) {\n            return 'animate__animated animate__shakeY';\n        }\n\n        if (card.vibrate) {\n            return 'animate__animated animate__flash';\n        }\n    }\n\n    return (\n        <>\n\n            {\n                (   (zone === CASTLE_ZONE && !isOpponent)|| \n                    zone === CEMETERY_ZONE || \n                    zone === EXILE_ZONE || \n                    zone === REMOVAL_ZONE || \n                    (zone === DEFENSE_ZONE) || \n                    (zone === ATTACK_ZONE) ||\n                    (zone === SUPPORT_ZONE) ||\n                    (zone === GOLDS_PAID_ZONE) ||\n                    (zone === UNPAID_GOLD_ZONE) ||\n                    (zone === AUXILIARY_ZONE)\n                ) ? (\n                    <Popover \n                        placement=\"right\" \n                        trigger=\"click\"\n                        content={ content }\n                        visible={ visiblePopover }\n                        onVisibleChange={ handleVisibleChangePopever }\n                    >\n                        {/* animate__flash */}\n                        <div ref={ ref }  style={{ opacity, borderRadius: 2 }} className={`${getClassName()} movable-item`} data-handler-id={ handlerId } onContextMenu={ detail } >\n                            { (zone === CASTLE_ZONE || (zone === HAND_ZONE && isOpponent)) ?\n                                <img\n                                    width={ 33 }\n                                    height={ 50 }\n                                    alt={ card.name }\n                                    src={ \"https://res.cloudinary.com/dfcm5wuuf/image/upload/v1635185102/reverso-carta_avpq6q.png\" }\n                                    className={isOpponent ? 'img-180-deg' : ''}\n                                />\n                                : \n\n                                <>\n                                    {card.armsId && card.armsId.length > 0 && <ToolOutlined className=\"icon-arm\" height={ 10 } width={ 10 } />}\n                                    {card.bearerId && <UserOutlined className=\"icon-arm\" height={ 10 } width={ 10 } />}\n                                    \n                                    <Image\n                                        width={ 33 }\n                                        height={ 50 }\n                                        src={ card.img }\n                                        className={isOpponent ? 'img-180-deg' : ''}\n                                    />   \n                                </>                     \n                            }\n                            \n                        </div>\n                    </Popover>\n                ) : (\n                    <div ref={ ref }  style={{ opacity, borderRadius: 2 }} className={animated ? 'animate__animated animate__shakeY movable-item' : 'movable-item'} data-handler-id={ handlerId } >\n                        { (zone === CASTLE_ZONE || (zone === HAND_ZONE && isOpponent)) ?\n                            <img\n                                width={ 33 }\n                                height={ 50 }\n                                alt={ card.name }\n                                src={ \"https://res.cloudinary.com/dfcm5wuuf/image/upload/v1635185102/reverso-carta_avpq6q.png\" }\n                                className={isOpponent ? 'img-180-deg' : ''}\n                            />\n                            : \n                            <Image\n                                width={ 33 }\n                                height={ 50 }\n                                src={ card.img }\n                                className={isOpponent ? 'img-180-deg' : ''}\n                            />\n                                                    \n                        }\n                        \n                    </div>\n                ) \n            }\n\n        </>\n\n            \n        \n    )\n}\n\nexport default CardComponent;","import { Button, message, Popover } from 'antd';\nimport React, { FC, ReactNode, useContext, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CaretDownOutlined, CaretUpOutlined, MoreOutlined } from '@ant-design/icons';\n\n\nimport { ZONE_NAMES } from '../../constants';\nimport { SocketContext } from '../../context/SocketContext';\nimport { RootState } from '../../store';\nimport { changeMatch } from '../../store/match/action';\nimport { DragCard  } from '../../store/match/types';\n\ninterface ZoneProps {\n    children: ReactNode;\n    className: string;\n    title: string;\n    isOpponent?: boolean;\n    withPopover?: boolean\n};\n\nconst { CASTLE_ZONE, DEFENSE_ZONE, ATTACK_ZONE, HAND_ZONE, GOLDS_PAID_ZONE, UNPAID_GOLD_ZONE } = ZONE_NAMES;\n\n\nconst Zone: FC<ZoneProps> = ({ children, className, title, isOpponent }) => {\n\n    const [visiblePopover, setVisiblePopover] = useState(false);\n\n    const { match, matchId } = useSelector((state: RootState) => state.match);\n\n    const { socket } = useContext(SocketContext);\n\n    const dispatch = useDispatch();\n\n    const [{isOver, canDrop}, drop] = useDrop({\n        accept: 'card',\n        drop: () => ({ name: title.split(\":\")[0] }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n        // Override monitor.canDrop() function\n        canDrop: (item: DragCard) => {\n            //const { zone: currentZone } = item;\n            \n            if (isOpponent) {\n                return false;\n            }\n\n            return true;\n            \n                /*(currentZone === title) ||\n\n                (currentZone === ATTACK_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === ATTACK_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === ATTACK_ZONE && title === EXILE_ZONE) ||\n                (currentZone === ATTACK_ZONE && title === HAND_ZONE) ||\n                (currentZone === ATTACK_ZONE && title === REMOVAL_ZONE) ||\n                (currentZone === ATTACK_ZONE && title === SUPPORT_ZONE) ||\n\n                (currentZone === DEFENSE_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === DEFENSE_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === DEFENSE_ZONE && title === EXILE_ZONE) ||\n                (currentZone === DEFENSE_ZONE && title === HAND_ZONE) ||\n                (currentZone === DEFENSE_ZONE && title === REMOVAL_ZONE) ||     \n                (currentZone === DEFENSE_ZONE && title === SUPPORT_ZONE) ||             \n\n                (currentZone === CEMETERY_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === CEMETERY_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === CEMETERY_ZONE && title === EXILE_ZONE) ||\n                (currentZone === CEMETERY_ZONE && title === HAND_ZONE) ||\n                (currentZone === CEMETERY_ZONE && title === REMOVAL_ZONE) ||\n                (currentZone === CEMETERY_ZONE && title === SUPPORT_ZONE) ||\n\n                (currentZone === EXILE_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === EXILE_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === EXILE_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === EXILE_ZONE && title === HAND_ZONE) ||\n                (currentZone === EXILE_ZONE && title === REMOVAL_ZONE) || \n                (currentZone === EXILE_ZONE && title === SUPPORT_ZONE) || \n\n                (currentZone === REMOVAL_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === REMOVAL_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === REMOVAL_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === REMOVAL_ZONE && title === EXILE_ZONE) ||\n                (currentZone === REMOVAL_ZONE && title === HAND_ZONE) ||\n                (currentZone === REMOVAL_ZONE && title === SUPPORT_ZONE) ||\n\n                (currentZone === SUPPORT_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === SUPPORT_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === SUPPORT_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === SUPPORT_ZONE && title === EXILE_ZONE) ||\n                (currentZone === SUPPORT_ZONE && title === HAND_ZONE) ||\n                (currentZone === SUPPORT_ZONE && title === REMOVAL_ZONE) ||\n\n                (currentZone === HAND_ZONE && title === ATTACK_ZONE) ||\n                (currentZone === HAND_ZONE && title === CEMETERY_ZONE) ||\n                (currentZone === HAND_ZONE && title === DEFENSE_ZONE) ||\n                (currentZone === HAND_ZONE && title === EXILE_ZONE) ||\n                (currentZone === HAND_ZONE && title === REMOVAL_ZONE) ||\n                (currentZone === HAND_ZONE && title === SUPPORT_ZONE)*/\n                \n        }\n    });\n\n    const getBackgroundColor = () => {\n\n        if (!isOver) {\n            return '';\n        }\n\n        if (!canDrop) {\n            return 'rgb(255, 0, 0)';\n        }\n\n        return 'rgb(51, 0, 0)';\n        \n    };\n\n    const getClassAnimated = () => {\n        \n        if (!isOver) {\n            return '';\n        }\n\n        if (!canDrop) {\n            return '';\n        }\n\n        return 'animate__animated animate__pulse';\n    }\n\n    const handleVisibleChangePopever = (visible: boolean) => {\n        setVisiblePopover(visible); \n    };\n\n    const sendToZone = (origin: string, destiny: string) => {\n        const newMatch = { ...match };        \n        if (!newMatch[origin].length) {\n            message.warn(`No hay cartas en la zona de ${origin}` );\n            setVisiblePopover(false);\n            return;\n        }\n\n        newMatch[destiny] = [...newMatch[destiny], ...newMatch[origin]];\n        newMatch[origin] = [];\n        dispatch(changeMatch(newMatch));\n        setVisiblePopover(false);\n    };\n\n    const showHandToOpponent = () => {\n        if (!match[HAND_ZONE].length) {\n            message.warn(`No hay cartas en la ${HAND_ZONE}` );\n            setVisiblePopover(false);\n            return;\n        }\n\n        socket?.emit('show-hand-to-opponent', {\n            matchId\n        });\n        setVisiblePopover(false);\n    };\n\n    const content = (\n        <div>\n            <Button type=\"link\" onClick={ showHandToOpponent }>Mostrar mano</Button><br/>\n            <Button type=\"link\" onClick={ () => sendToZone(HAND_ZONE, CASTLE_ZONE) }>Devolver mano</Button>\n        </div>        \n    );\n\n    return (\n        <>\n            <div ref={ drop } className={ `zone ${getClassAnimated()}`} style={ { backgroundColor: getBackgroundColor() } } >\n                        \n                    <div className={isOpponent ? \"title-zone-opponent\" : \"title-zone\"}>\n                        <span>{ title }</span>\n\n                        {\n                            (!isOpponent && title.split(\":\")[0] === UNPAID_GOLD_ZONE) && (\n                                <Button type=\"link\" onClick={ () => sendToZone(UNPAID_GOLD_ZONE, GOLDS_PAID_ZONE)} icon={<CaretDownOutlined />} size=\"small\" style={{ color: 'white', height: 15, width: 15, float: 'right' }} />\n                            )\n                        }\n\n                        {\n                            (!isOpponent && title.split(\":\")[0] === GOLDS_PAID_ZONE) && (\n                                <Button type=\"link\" onClick={ () => sendToZone(GOLDS_PAID_ZONE, UNPAID_GOLD_ZONE)} icon={<CaretUpOutlined />} size=\"small\" style={{ color: 'white',height: 15, width: 15, float: 'right' }} />\n                            )\n                        }\n\n                        {\n                            (!isOpponent && title === ATTACK_ZONE) && (\n                                <Button type=\"link\" onClick={ () => sendToZone(ATTACK_ZONE, DEFENSE_ZONE)} icon={<CaretDownOutlined />} size=\"small\" style={{ color: 'white', height: 15, width: 15, float: 'right' }} />\n                            )\n                        }\n\n                        {\n                            (!isOpponent && title === DEFENSE_ZONE) && (\n                                <Button type=\"link\" onClick={ () => sendToZone(DEFENSE_ZONE, ATTACK_ZONE)} icon={<CaretUpOutlined />} size=\"small\" style={{ color: 'white', height: 15, width: 15, float: 'right' }} />\n                            )\n                        }\n\n                        {\n                            (!isOpponent && title === HAND_ZONE) && (\n                                <Popover \n                                    placement=\"right\" \n                                    trigger=\"click\"\n                                    content={ content }\n                                    visible={ visiblePopover }\n                                    onVisibleChange={ handleVisibleChangePopever }\n                                >\n                                    <Button type=\"link\" icon={<MoreOutlined />} size=\"small\" style={{ color: 'white', height: 15, width: 15, float: 'right' }} />\n                                </Popover>\n                                \n                            )\n                        }\n                        \n                    </div>\n\n                    <div className={className}>\n                        { children }\n                    </div>\n                    \n            </div>      \n            \n        </>\n    )\n}\n\nexport default Zone;","import { InputNumber, Modal } from 'antd';\nimport React, { FC, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { ZONE_NAMES } from \"../../constants\";\nimport { throwXcards } from '../../helpers/throwsCards';\nimport { changeMatch } from '../../store/match/action';\nimport { closeModalThrowXcards } from '../../store/ui-modal/action';\n\nconst { CASTLE_ZONE, CEMETERY_ZONE } = ZONE_NAMES;\n\nconst ThrowXcardsModal: FC = () => {\n\n    const { match } = useSelector((state: RootState) => state.match);\n\n    const { modalOpenThrowXcards } = useSelector((state: RootState) => state.uiModal);\n\n    const [amountThrowXcards, setAmountModalThrowXcards] = useState(1);\n\n    const dispatch = useDispatch();\n\n    const handleOkModal = () => {\n        console.log('Action:', `Botando ${amountThrowXcards} carta(s) del ${CASTLE_ZONE} a ${CEMETERY_ZONE}`);\n        const newMatch = throwXcards(amountThrowXcards, match, CASTLE_ZONE, CEMETERY_ZONE);\n        dispatch(changeMatch(newMatch));\n        dispatch(closeModalThrowXcards());\n    };\n\n    const onChangeInputAmount = (value: number) => {\n        setAmountModalThrowXcards(value);\n    };    \n\n    const handleCancelModal = () => {\n        dispatch(closeModalThrowXcards());\n    };\n\n    return (\n        <Modal centered title=\"Botar Cartas\" visible={ modalOpenThrowXcards } onOk={ handleOkModal } onCancel={ handleCancelModal }>\n            <p>Indique la cantidad de cartas que desea botar desde el {CASTLE_ZONE} al {CEMETERY_ZONE}</p>                \n            <InputNumber min={ 1 } max={ match[CASTLE_ZONE].length } defaultValue={ 1 } onChange={ onChangeInputAmount }/>\n        </Modal>\n    )\n}\n\nexport default ThrowXcardsModal;","import React, { FC, ReactNode } from 'react';\nimport { useDrop } from 'react-dnd';\n\ninterface CardContainerProps {\n    children: ReactNode;\n    title: string;\n};\n\nconst CardComponentContainer: FC<CardContainerProps> = ({ children, title }) => {\n\n    const [{isOver, canDrop}, drop] = useDrop({\n        accept: 'card',\n        drop: () => ({ name: title }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n        canDrop: (item: any) => {\n\n           return true;                \n        }\n        \n    });\n\n    const getBackgroundColor = () => {\n\n        if (!isOver) {\n            return '';\n        }\n\n        if (!canDrop) {\n            return 'rgb(0,0,0)';\n        }\n\n        return 'rgb(46,44,44)';\n        \n    };\n\n    const getClassAnimated = () => {\n        \n        if (!isOver) {\n            return '';\n        }\n\n        if (!canDrop) {\n            return '';\n        }\n\n        return 'animate__animated animate__pulse';\n    }\n\n    return (\n        <div ref={ drop } style={ { backgroundColor: getBackgroundColor() } } className={`view-moda-origin ${ getClassAnimated() }`} >\n            \n            { children }\n\n        </div>\n    )\n}\n\nexport default CardComponentContainer;","import { Image } from 'antd';\nimport React, { FC, useRef } from 'react';\nimport { useDrag, useDrop, DropTargetMonitor, DropTargetOptions } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { XYCoord } from 'dnd-core';\nimport { ZONE_NAMES } from \"../../../constants\";\n\nimport { RootState } from '../../../store';\nimport { Card } from '../../../store/card/types';\nimport { setViewCardsDestiny, setViewCardsOrigin } from '../../../store/match/action';\n\nexport interface NewDeckCardProps {\n    id?: string;\n    index: number;\n    moveCard?: (dragIndex: number, hoverIndex: number, zoneName: string, isOrigin: boolean) => void;\n    zone: string;\n    card: Card;\n    isOrigin: boolean;\n    onlyRead?: boolean;\n};\n\ninterface DragCard extends Card {\n    index: number;\n    zone: string;\n};\n\nconst { CASTLE_ZONE, DEFENSE_ZONE, ATTACK_ZONE, HAND_ZONE, UNPAID_GOLD_ZONE, GOLDS_PAID_ZONE, AUXILIARY_ZONE } = ZONE_NAMES;\n\nconst CardComponent: FC<NewDeckCardProps> = ({ id, index, moveCard, zone, card, isOrigin, onlyRead }) => {   \n\n    const dispatch = useDispatch();\n    const ref = useRef<HTMLInputElement>(null); \n\n    const { viewCardsOrigin, viewCardsDestiny } = useSelector((state: RootState) => state.match);\n    \n    const changeCardZone = (item: DragCard, zoneName: string) => {\n        // isOrigin true -> hacia destino\n        // isOrigin false -> hacia origen \n        \n        if (item.zone === zoneName) {\n            return;\n        }\n        \n        if (isOrigin) {\n\n            const card = viewCardsOrigin.find((card: Card, index2: number) => index2 === index) as Card;\n            card.isOpponent = true;\n            const newOrigin = viewCardsOrigin.filter((card: Card, index2: number) => index2 !== index);\n            const newDestiny = [...viewCardsDestiny, card];\n\n            dispatch(setViewCardsOrigin(newOrigin));\n            dispatch(setViewCardsDestiny(newDestiny));\n\n        } else {\n            const card = viewCardsDestiny.find((card: Card, index2: number) => index2 === index) as Card;\n            const newDestiny = viewCardsDestiny.filter((card: Card, index2: number) => index2 !== index);\n            const newOrigin = [...viewCardsOrigin, card];\n\n            dispatch(setViewCardsOrigin(newOrigin));\n            dispatch(setViewCardsDestiny(newDestiny));\n        }\n\n    };\n\n    const [{ handlerId }, drop] = useDrop({\n        accept: 'card',\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item: DragCard, monitor: DropTargetMonitor) {\n            \n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n    \n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n    \n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n    \n            // Get vertical middle\n            const hoverMiddleY =\n            (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    \n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n    \n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n    \n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n        \n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n    \n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n        \n            // Time to actually perform the action\n            moveCard && moveCard(dragIndex, hoverIndex, item.zone, isOrigin);\n        \n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        type: 'card',\n        item: () => {\n            return { id, index, zone, ...card }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n        end: (item: DragCard, monitor: DropTargetOptions) => {\n\n            const dropResult = monitor.getDropResult();\n            \n            if (dropResult) {\n                const { name } = dropResult;\n                \n                switch (name) {\n                    case CASTLE_ZONE:\n                        changeCardZone(item, CASTLE_ZONE);\n                        break;\n                    case HAND_ZONE:\n                        changeCardZone(item, HAND_ZONE);                        \n                        break;\n                    case DEFENSE_ZONE:\n                        changeCardZone(item, DEFENSE_ZONE);                        \n                        break;\n                    case ATTACK_ZONE:\n                        changeCardZone(item, ATTACK_ZONE);                        \n                        break;\n                    case GOLDS_PAID_ZONE:\n                        changeCardZone(item, GOLDS_PAID_ZONE);                        \n                        break;\n                    case UNPAID_GOLD_ZONE:\n                        changeCardZone(item, UNPAID_GOLD_ZONE);                        \n                        break;\n                    case AUXILIARY_ZONE:\n                        changeCardZone(item, AUXILIARY_ZONE);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n    });\n\n    const opacity = isDragging ? 0.4 : 1;\n\n    if (!onlyRead) drag(drop(ref));\n\n    return (\n        <span ref={ ref } style={{ opacity, padding: 3 }} data-handler-id={ handlerId } >\n            \n            <Image\n                width={ 45 }\n                src={ card.img }\n            />\n\n        </span>\n    )\n}\n\nexport default CardComponent;","import React, { FC, useCallback, useEffect, useState } from 'react'\nimport { Alert, Modal, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport update from 'immutability-helper';\n\nimport { ZONE_NAMES } from \"../../constants\";\nimport { RootState } from '../../store';\nimport { Card } from '../../store/card/types';\nimport { closeModalViewCastle, closeModalViewCastleOpponent, closeModalViewCementery, closeModalViewCementeryOpponent, closeModalViewExile, closeModalViewExileOpponent, closeModalViewHandOpponent, closeModalViewRemoval, closeModalViewRemovalOpponent, closeModalViewXCastle } from '../../store/ui-modal/action';\nimport CardComponentContainer from './drag/CardComponentContainer';\nimport CardComponent from './drag/CardComponent';\nimport { changeMatch, setAmountCardsViewAction, setViewCardsDestiny, setViewCardsOrigin } from '../../store/match/action';\nimport { Dictionary } from '../../store/match/types';\n\nconst { DEFENSE_ZONE, ATTACK_ZONE, HAND_ZONE, UNPAID_GOLD_ZONE, GOLDS_PAID_ZONE, AUXILIARY_ZONE } = ZONE_NAMES;\n\ninterface ViewCastleModalProps {\n    origin: Dictionary<Card[] | []>;\n    zone: string;\n    amount?: number;\n    onlyRead?: boolean;\n    isOpponent?: boolean;\n};\n\nconst ViewCardsModal: FC<ViewCastleModalProps> = ({ origin, zone, amount, onlyRead, isOpponent }) => {\n\n    const { viewCardsOrigin, viewCardsDestiny } = useSelector((state: RootState) => state.match);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        if (amount) {\n            dispatch(setViewCardsOrigin(origin[zone].slice(-amount)));\n        } else {\n            dispatch(setViewCardsOrigin(origin[zone]));\n        }\n\n        dispatch(setViewCardsDestiny([]));\n        \n        \n    }, [dispatch, origin, zone, amount]);\n\n    const { \n            modalOpenViewCastle, \n            modalOpenViewXcards, \n            modalOpenViewCastleToOpponent, \n            modalOpenViewCementery, \n            modalOpenViewExile, \n            modalOpenViewRemoval,\n            modalOpenViewCementeryOpponent, \n            modalOpenViewExileOpponent, \n            modalOpenViewRemovalOpponent,\n            modalOpenViewHandOpponent\n    } = useSelector((state: RootState) => state.uiModal);\n\n    const [optionSelect, setOptionSelect] = useState('');\n\n    const resetModal = () => {\n        dispatch(closeModalViewCastle());\n        dispatch(closeModalViewXCastle());\n        dispatch(closeModalViewCastleOpponent());\n        dispatch(closeModalViewCementery());\n        dispatch(closeModalViewExile());\n        dispatch(closeModalViewRemoval());\n        dispatch(closeModalViewCementeryOpponent());\n        dispatch(closeModalViewExileOpponent());\n        dispatch(closeModalViewRemovalOpponent());\n        dispatch(closeModalViewHandOpponent());\n        dispatch(setAmountCardsViewAction(1));\n    };\n\n    const handleCancelModal = () => {\n        resetModal();\n    };\n\n    const handleOkModal = () => {\n\n        if (onlyRead) {\n            resetModal();            \n            return;\n        }\n\n\n        // si isOpponent en true, entonces al opponentMatch se le quita \n\n        const newMatch = { ...origin };\n\n        newMatch[zone] = !amount ? viewCardsOrigin : [...origin[zone].filter((card: Card, index: number) => index < origin[zone].length - amount), ...viewCardsOrigin];\n        \n        if (optionSelect && viewCardsDestiny.length) {\n            newMatch[optionSelect] = [...newMatch[optionSelect], ...viewCardsDestiny];\n        } \n\n        dispatch(changeMatch(newMatch));\n        resetModal();\n    };\n\n    const moveCard = useCallback(\n        (dragIndex: number, hoverIndex: number, zoneName: string, isOrigin: boolean) => {\n\n            if (isOrigin && !viewCardsOrigin[dragIndex]) {\n                return;\n            }\n\n            if (!isOrigin && !viewCardsDestiny[dragIndex]) {\n                return;\n            }\n\n            const dragCard = isOrigin ? viewCardsOrigin[dragIndex] : viewCardsDestiny[dragIndex];\n\n            let zoneToOrder = isOrigin ? viewCardsOrigin : viewCardsDestiny;\n\n            zoneToOrder = update(zoneToOrder, {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, dragCard],\n                ],\n            });\n\n            isOrigin ? dispatch(setViewCardsOrigin(zoneToOrder)) : dispatch(setViewCardsDestiny(zoneToOrder));\n\n        },\n        [viewCardsOrigin, viewCardsDestiny, dispatch],\n    );\n\n    const isMobile = window.innerWidth < 600;\n\n    const returnItemsForZoneOrigin = (zoneName: string, isOrigin: boolean) => {\n        return viewCardsOrigin\n                .map((card, index) => (\n                    <CardComponent \n                        key={ index }\n                        id={ card.id }\n                        index={ index }\n                        moveCard={(dragIndex, hoverIndex, zoneName, isOrigin) => moveCard(dragIndex, hoverIndex, zoneName, isOrigin)}\n                        zone={ zoneName }\n                        card={ card }\n                        isOrigin={ isOrigin }\n                        onlyRead={ onlyRead as boolean}\n                    />\n                ));\n    };\n\n    const returnItemsForZoneDestiny = (zoneName: string, isOrigin: boolean) => {\n        return viewCardsDestiny\n                .map((card, index) => (\n                    <CardComponent \n                        key={ index }\n                        id={ card.id }\n                        index={ index }\n                        moveCard={(dragIndex, hoverIndex, zoneName, isOrigin) => moveCard(dragIndex, hoverIndex, zoneName, isOrigin)}\n                        zone={ zoneName }\n                        card={ card }\n                        isOrigin={ isOrigin }\n                    />\n                ));\n    };\n\n    const handleSelect = (value: string) => {\n        setOptionSelect(value);\n    };\n\n    return (\n        <Modal \n            width={ 1000 } \n            centered \n            title={`Viendo ${zone}...`} \n            visible={ \n                modalOpenViewCastle ||\n                modalOpenViewXcards || \n                modalOpenViewCastleToOpponent || \n                modalOpenViewCementery ||\n                modalOpenViewExile ||\n                modalOpenViewRemoval ||\n                modalOpenViewCementeryOpponent ||\n                modalOpenViewExileOpponent ||\n                modalOpenViewRemovalOpponent ||\n                modalOpenViewHandOpponent\n            } \n            onCancel={ handleCancelModal } \n            onOk={ handleOkModal }\n        >\n            <Alert style={{marginBottom: 20}} message={`Las cartas que están a la derecha son las primeras en el ${zone}`} type=\"info\" showIcon/>\n\n            <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\n                <CardComponentContainer title={ zone } >\n                    { viewCardsOrigin && returnItemsForZoneOrigin(zone, true)}\n                </CardComponentContainer>\n\n                {\n                    !onlyRead && (\n                        <Select\n                            placeholder=\"Mover a\"\n                            style={{ width: \"100%\", marginTop: 20, marginBottom: 20 }}\n                            onChange={ handleSelect }                      \n                        >\n                            <Select.Option key={ HAND_ZONE } value={ HAND_ZONE }>{ HAND_ZONE }</Select.Option>\n                            <Select.Option key={ DEFENSE_ZONE } value={ DEFENSE_ZONE }>{ DEFENSE_ZONE }</Select.Option>\n                            <Select.Option key={ ATTACK_ZONE } value={ ATTACK_ZONE }>{ ATTACK_ZONE }</Select.Option>\n                            <Select.Option key={ GOLDS_PAID_ZONE } value={ GOLDS_PAID_ZONE }>{ GOLDS_PAID_ZONE }</Select.Option>  \n                            <Select.Option key={ UNPAID_GOLD_ZONE } value={ UNPAID_GOLD_ZONE }>{ UNPAID_GOLD_ZONE }</Select.Option>  \n                            <Select.Option key={ AUXILIARY_ZONE } value={ AUXILIARY_ZONE }>{ AUXILIARY_ZONE }</Select.Option>  \n                                \n                        </Select>\n                    )\n                }\n                { !onlyRead && optionSelect !== '' && (\n                    <CardComponentContainer title={ optionSelect } >\n                        { viewCardsDestiny && returnItemsForZoneDestiny(optionSelect, false)}\n                    </CardComponentContainer>\n                )}\n\n            </DndProvider>\n            \n        </Modal>\n    )\n}\n\nexport default ViewCardsModal;","import { InputNumber, Modal } from 'antd';\nimport React, { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { ZONE_NAMES } from \"../../constants\";\nimport { closeModalSelectXcards, openModalViewXCastle } from '../../store/ui-modal/action';\nimport { setAmountCardsViewAction } from '../../store/match/action';\n\nconst { CASTLE_ZONE } = ZONE_NAMES;\n\nconst SelectXcardsModal: FC = () => {\n\n    const { match } = useSelector((state: RootState) => state.match);\n\n    const { modalOpenSelectXcards } = useSelector((state: RootState) => state.uiModal);\n\n    const dispatch = useDispatch();\n\n    const handleOkModal = () => {\n        dispatch(closeModalSelectXcards());\n        dispatch(openModalViewXCastle());\n    };\n\n    const onChangeInputAmount = (value: number) => {\n        dispatch(setAmountCardsViewAction(value))\n    };    \n\n    const handleCancelModal = () => {\n        dispatch(closeModalSelectXcards());\n        dispatch(setAmountCardsViewAction(1))\n    };\n\n    return (\n        <Modal centered title=\"Ver Cartas\" visible={ modalOpenSelectXcards } onOk={ handleOkModal } onCancel={ handleCancelModal } >\n            <p>Indique la cantidad de cartas que desea ver</p>                \n            <InputNumber min={ 1 } max={ match[CASTLE_ZONE].length } defaultValue={ 1 } onChange={ onChangeInputAmount }/>\n        </Modal>\n    )\n}\n\nexport default SelectXcardsModal;","import { message, Modal, Select } from 'antd';\nimport React, { FC, useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { closeModalTakeControlOpponentCard } from '../../store/ui-modal/action';\nimport { ZONE_NAMES } from \"../../constants\";\nimport { Card } from '../../store/card/types';\nimport { changeMatch, changOpponenteMatch } from '../../store/match/action';\nimport { SocketContext } from '../../context/SocketContext';\n\ninterface TakeControlOpponentCardModalProps {\n    zone: string;\n    index: number;\n};\n\nconst { DEFENSE_ZONE, ATTACK_ZONE, SUPPORT_ZONE, HAND_ZONE, UNPAID_GOLD_ZONE, GOLDS_PAID_ZONE, EXILE_ZONE } = ZONE_NAMES;\n\nconst TakeControlOpponentCardModal: FC<TakeControlOpponentCardModalProps> = ({zone, index}) => {\n\n    const { match, opponentMatch, opponentId, matchId } = useSelector((state: RootState) => state.match);\n    const { modalOpenTakeControlOpponentCard } = useSelector((state: RootState) => state.uiModal);\n    const [optionSelect, setOptionSelect] = useState('');\n    const dispatch = useDispatch();\n\n    const { socket } = useContext(SocketContext);\n\n    const handleOkModal = () => {\n\n        if (optionSelect === '') {\n            message.warn('Ninguna zona de destino seleccionada')\n            return;\n        }\n\n        const newOpponentMatch = { ...opponentMatch };\n        const newMatch = { ...match };\n\n        const card = newOpponentMatch[zone].find((card: Card, index2: number) => index2 === index) as Card;        \n\n        newOpponentMatch[zone] = newOpponentMatch[zone].filter((card: Card, index2: number) => index2 !== index);\n        newMatch[optionSelect] = [...newMatch[optionSelect], card];\n\n        if (card.armsId?.length) {\n\n            for (const armId of card.armsId as string[]) {\n                const armCardInMyZone = newOpponentMatch[SUPPORT_ZONE].find((card: Card) => card.idx === armId) as Card;\n                newOpponentMatch[SUPPORT_ZONE] = newOpponentMatch[SUPPORT_ZONE].filter((card: Card) =>  card.idx !== armId);\n                newMatch[SUPPORT_ZONE] = [...newMatch[SUPPORT_ZONE], armCardInMyZone];\n            }\n        }\n\n        dispatch(changeMatch(newMatch));\n        dispatch(changOpponenteMatch(newOpponentMatch));\n        dispatch(closeModalTakeControlOpponentCard());\n\n        socket?.emit('update-match-opponent', {\n            match: newOpponentMatch,\n            matchId\n        });\n\n    };\n\n    const handleCancelModal = () => {\n        dispatch(closeModalTakeControlOpponentCard());\n    };\n\n    const handleSelect = (value: string) => {\n        setOptionSelect(value);\n    };\n\n    return (\n        <Modal centered title=\"Destino de Carta\" visible={ modalOpenTakeControlOpponentCard } onOk={ handleOkModal } onCancel={ handleCancelModal }>\n            <p>Seleccione tu zona donde quieres que se envíe la carta seleccionada</p>\n\n            <Select\n                placeholder=\"Mover a\"\n                style={{ width: \"100%\", marginTop: 20, marginBottom: 20 }}\n                onChange={ handleSelect }                      \n            >\n                <Select.Option key={ HAND_ZONE } value={ HAND_ZONE }>{ HAND_ZONE }</Select.Option>\n                <Select.Option key={ SUPPORT_ZONE } value={ SUPPORT_ZONE }>{ SUPPORT_ZONE }</Select.Option> \n                <Select.Option key={ DEFENSE_ZONE } value={ DEFENSE_ZONE }>{ DEFENSE_ZONE }</Select.Option>\n                <Select.Option key={ ATTACK_ZONE } value={ ATTACK_ZONE }>{ ATTACK_ZONE }</Select.Option>\n                <Select.Option key={ GOLDS_PAID_ZONE } value={ GOLDS_PAID_ZONE }>{ GOLDS_PAID_ZONE }</Select.Option>  \n                <Select.Option key={ UNPAID_GOLD_ZONE } value={ UNPAID_GOLD_ZONE }>{ UNPAID_GOLD_ZONE }</Select.Option>\n                <Select.Option key={ EXILE_ZONE } value={ EXILE_ZONE }>{ EXILE_ZONE }</Select.Option> \n                    \n            </Select>\n        </Modal>\n    )\n}\n\nexport default TakeControlOpponentCardModal;","import { Image, Modal, Radio, Space, Typography } from 'antd';\nimport React, { FC, useContext, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { closeModalAssignWeapon } from '../../store/ui-modal/action';\nimport { ZONE_NAMES } from \"../../constants\";\nimport { Card } from '../../store/card/types';\nimport { changeMatch, changOpponenteMatch, setWeaponAction } from '../../store/match/action';\nimport { SocketContext } from '../../context/SocketContext';\n\nconst { DEFENSE_ZONE, ATTACK_ZONE, SUPPORT_ZONE } = ZONE_NAMES;\n\nconst { Title } = Typography;\n\nconst AssingWeaponModal: FC = () => {\n\n\n    const dispatch = useDispatch();\n\n    const { modalOpenAssignWeapon } = useSelector((state: RootState) => state.uiModal);\n    const { match, matchId, opponentMatch, opponentId, selectedWeapon } = useSelector((state: RootState) => state.match);\n    const { id } = useSelector((state: RootState) => state.auth);\n    const { socket } = useContext(SocketContext);\n\n    const [optionZone, setOptionZone] = useState(id);\n    const [optionCarrier, setOptionCarrier] = useState('');\n\n\n    useEffect(() => {\n\n        match[DEFENSE_ZONE].map((card: Card, index: number) => {\n\n            if (card.armsId?.includes(selectedWeapon.idx)) {\n                setOptionCarrier(`${DEFENSE_ZONE}_${index}_${card.idx}`);\n                setOptionZone(id);\n            }\n\n            return card;\n        });\n\n        match[ATTACK_ZONE].map((card: Card, index: number) => {\n\n            if (card.armsId?.includes(selectedWeapon.idx)) {\n                setOptionCarrier(`${ATTACK_ZONE}_${index}_${card.idx}`);\n                setOptionZone(id);\n            }\n\n            return card;\n        });\n\n        opponentMatch[DEFENSE_ZONE].map((card: Card, index: number) => {\n\n            if (card.armsId?.includes(selectedWeapon.idx)) {\n                setOptionCarrier(`${DEFENSE_ZONE}_${index}_${card.idx}`);\n                setOptionZone(opponentId as string);\n            }\n\n            return card;\n        });\n\n        opponentMatch[ATTACK_ZONE].map((card: Card, index: number) => {\n\n            if (card.armsId?.includes(selectedWeapon.idx)) {\n                setOptionCarrier(`${ATTACK_ZONE}_${index}_${card.idx}`);\n                setOptionZone(opponentId as string);\n            }\n\n            return card;\n        });\n\n    }, [match, selectedWeapon, opponentId, id, opponentMatch]);\n\n\n    const handleCancelModal = () => {\n        dispatch(setWeaponAction(null));\n        dispatch(closeModalAssignWeapon());\n    };\n\n    const updateBearerAndArm = (isMyMatch: boolean, zone: string, i: string, idx: string) => {\n\n        const newMatch = { ...match };\n        const newOpponentMatch = { ...opponentMatch };\n\n        newMatch[ATTACK_ZONE] = newMatch[ATTACK_ZONE].map((card: Card) => {\n\n            if (card.idx !== idx && card.armsId?.includes(selectedWeapon.idx)) {\n                return {\n                    ...card,\n                    armsId: card.armsId.filter((armId: string) => armId !== selectedWeapon.idx)\n                }\n            }\n\n            return card;\n        });\n\n        newMatch[DEFENSE_ZONE] = newMatch[DEFENSE_ZONE].map((card: Card) => {\n\n            if (card.idx !== idx && card.armsId?.includes(selectedWeapon.idx)) {\n                return {\n                    ...card,\n                    armsId: card.armsId.filter((armId: string) => armId !== selectedWeapon.idx)\n                }\n            }\n\n            return card;\n        });\n        \n        newOpponentMatch[ATTACK_ZONE] = newOpponentMatch[ATTACK_ZONE].map((card: Card) => {\n\n            if (card.idx !== idx && card.armsId?.includes(selectedWeapon.idx)) {\n                return {\n                    ...card,\n                    armsId: card.armsId.filter((armId: string) => armId !== selectedWeapon.idx)\n                }\n            }\n\n            return card;\n        });\n\n        newOpponentMatch[DEFENSE_ZONE] = newOpponentMatch[DEFENSE_ZONE].map((card: Card) => {\n\n            if (card.idx !== idx && card.armsId?.includes(selectedWeapon.idx)) {\n                return {\n                    ...card,\n                    armsId: card.armsId.filter((armId: string) => armId !== selectedWeapon.idx)\n                }\n            }\n\n            return card;\n        });\n\n        if (isMyMatch) {\n\n            newMatch[zone] = newMatch[zone].map((card: Card, index: number) => {\n\n                if (Number(i) === index) {\n                    const arms = card.armsId ? card.armsId : [];\n                    return {\n                        ...card,\n                        armsId: [...arms, selectedWeapon.idx]\n                    }\n                }\n    \n                return card;\n            });\n    \n            newMatch[SUPPORT_ZONE] = newMatch[SUPPORT_ZONE].map((card: Card) => {\n    \n                if (selectedWeapon.idx === card.idx) {\n                    return {\n                        ...card,\n                        bearerId: idx\n                    }\n                }\n    \n                return card;\n            });\n\n        } else {\n\n            newOpponentMatch[zone] = newOpponentMatch[zone].map((card: Card, index: number) => {\n\n                if (Number(i) === index) {\n                    const arms = card.armsId ? card.armsId : [];\n                    return {\n                        ...card,\n                        armsId: [...arms, selectedWeapon.idx]\n                    }\n                }\n    \n                return card;\n            });\n\n            const armCard = newMatch[SUPPORT_ZONE].find((card: Card) => card.idx === selectedWeapon.idx) as Card;\n            armCard.bearerId = idx\n            newMatch[SUPPORT_ZONE] = newMatch[SUPPORT_ZONE].filter((card: Card) => card.idx !== selectedWeapon.idx);\n            newOpponentMatch[SUPPORT_ZONE] = [...newOpponentMatch[SUPPORT_ZONE], armCard];\n\n        }\n\n        dispatch(changeMatch(newMatch));\n        dispatch(changOpponenteMatch(newOpponentMatch));\n\n        socket?.emit('update-match-opponent', {\n            match: newOpponentMatch,\n            matchId\n        });\n    };\n\n    const handleOkModal = () => {\n\n        if (optionCarrier === '') {\n            return;\n        }\n\n        const [zone, i, idx] = optionCarrier.split('_'); // del portador\n        console.log(zone, i, idx)\n\n        if (optionZone === id) {\n\n            updateBearerAndArm(true, zone, i, idx);\n\n        } else {\n\n            updateBearerAndArm(false, zone, i, idx);\n        }\n        \n        dispatch(setWeaponAction(null));\n        dispatch(closeModalAssignWeapon());\n\n    };\n\n    const onChangeZone = (e: any) => {\n        setOptionZone(e.target.value)\n    };\n\n    const onChangeCarrier = (e: any) => {\n        console.log(e.target.value)\n        setOptionCarrier(e.target.value)\n    };\n\n\n    return (\n        <Modal centered title=\"Seleccionando portador...\" visible={ modalOpenAssignWeapon } onOk={ handleOkModal } onCancel={ handleCancelModal } width={ 1000 } >\n            <p>Seleccione la arena en donde quiere jugar esta Arma</p>\n            <Radio.Group value={ optionZone } onChange={ onChangeZone } style={{paddingBottom: 20}} >\n\n                <Space direction=\"vertical\">\n                    <Radio value={ id }>Mi Zona</Radio>\n                    <Radio value={ opponentId }>Zona Oponente</Radio>\n                </Space>\n            </Radio.Group>                \n\n                {\n                    optionZone === id && (\n                        <div style={{paddingTop: 20}} >\n                                                        \n                            {\n                                match[ATTACK_ZONE].length > 0 && (\n                                    <div className=\"zone-flex\"  style={{display: 'block'}} >\n                                        <Title level={4}>{ATTACK_ZONE}</Title>\n                                        <Radio.Group value={ optionCarrier } onChange={ onChangeCarrier }>\n                                            <Space direction=\"horizontal\">\n                                                {\n                                                    match[ATTACK_ZONE].map((card: Card, index: number) => (\n                                                        <Radio value={ ATTACK_ZONE + '_' + index + '_' + card.idx} key={ index }>\n                                                            <Image\n                                                                width={ 33 }\n                                                                height={ 50 }\n                                                                src={ card.img }\n                                                            />\n                                                        </Radio> \n                                                    ))\n                                                }\n                                            </Space>\n                                        </Radio.Group>\n                                    </div>\n                                )\n                            }\n\n                            {\n                                match[DEFENSE_ZONE].length > 0 && (\n                                    <div className=\"zone-flex\"  style={{display: 'block'}} >\n                                        <Title level={4}>{DEFENSE_ZONE}</Title>\n                                        <Radio.Group value={ optionCarrier } onChange={ onChangeCarrier }>\n                                            <Space direction=\"horizontal\">\n                                                {\n                                                    match[DEFENSE_ZONE].map((card: Card, index: number) => (\n                                                        <Radio value={ DEFENSE_ZONE + '_' + index + '_' + card.idx } key={ index }>\n                                                            <Image\n                                                                width={ 33 }\n                                                                height={ 50 }\n                                                                src={ card.img }\n                                                            />\n                                                        </Radio> \n                                                    ))\n                                                }\n                                            </Space>\n                                        </Radio.Group>\n                                    </div>\n                                )\n                            }\n\n                        </div>\n                        \n                    )\n                }\n\n                {\n                    optionZone === opponentId && (\n                        <div style={{paddingTop: 20}} >                            \n                            {\n                                opponentMatch[ATTACK_ZONE].length > 0 && (\n                                    <div className=\"zone-flex\"  style={{display: 'block'}} >\n                                        <Title level={4}>{ATTACK_ZONE}</Title>\n                                        <Radio.Group value={ optionCarrier } onChange={ onChangeCarrier }>\n                                            <Space direction=\"horizontal\">\n                                                {\n                                                    opponentMatch[ATTACK_ZONE].map((card: Card, index: number) => (\n                                                        <Radio value={ ATTACK_ZONE + '_' + index + '_' + card.idx} key={ index }>\n                                                            <Image\n                                                                width={ 33 }\n                                                                height={ 50 }\n                                                                src={ card.img }\n                                                            />\n                                                        </Radio> \n                                                    ))\n                                                }\n                                            </Space>\n                                        </Radio.Group>\n                                    </div>\n                                )\n                            }\n\n                            {\n                                opponentMatch[DEFENSE_ZONE].length > 0 && (\n                                    <div className=\"zone-flex\"  style={{display: 'block'}} >\n                                        <Title level={4}>{DEFENSE_ZONE}</Title>\n                                        <Radio.Group value={ optionCarrier } onChange={ onChangeCarrier }>\n                                            <Space direction=\"horizontal\">\n                                                {\n                                                    opponentMatch[DEFENSE_ZONE].map((card: Card, index: number) => (\n                                                        <Radio value={ DEFENSE_ZONE + '_' + index + '_' + card.idx} key={ index }>\n                                                            <Image\n                                                                width={ 33 }\n                                                                height={ 50 }\n                                                                src={ card.img }\n                                                            />\n                                                        </Radio> \n                                                    ))\n                                                }\n                                            </Space>\n                                        </Radio.Group>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    )\n                }\n\n            \n        </Modal>\n    )\n}\n\nexport default AssingWeaponModal;","import React, { FC, useCallback, useContext, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport update from 'immutability-helper';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport { Col, Popover, Modal, Row, Button } from 'antd';\n\nimport { MenuOutlined } from '@ant-design/icons';\n\n\nimport CardComponent from '../components/match/CardComponent';\nimport { ZONE_NAMES } from \"../constants\";\nimport { SocketContext } from '../context/SocketContext';\nimport useHideMenu from '../hooks/useHideMenu';\nimport { RootState } from '../store';\nimport { Card } from '../store/card/types';\nimport { changeMatch, changOpponenteMatch } from '../store/match/action';\nimport Zone from '../components/match/Zone';\nimport { Dictionary } from '../store/match/types';\n\nimport '../css/match.css';\nimport ThrowXcardsModal from '../components/modals/ThrowXcardsModal';\nimport ViewCardsModal from '../components/modals/ViewCardsModal';\nimport SelectXcardsModal from '../components/modals/SelectXcardsModal';\nimport { openModalViewCastleOpponent, openModalViewHandOpponent } from '../store/ui-modal/action';\nimport TakeControlOpponentCardModal from '../components/modals/TakeControlOpponentCardModal';\nimport AssingWeaponModal from '../components/modals/AssingWeaponModal';\n\nimport { ExclamationCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\nconst { CASTLE_ZONE, DEFENSE_ZONE, ATTACK_ZONE, CEMETERY_ZONE, EXILE_ZONE, REMOVAL_ZONE, SUPPORT_ZONE, HAND_ZONE, GOLDS_PAID_ZONE, UNPAID_GOLD_ZONE, AUXILIARY_ZONE } = ZONE_NAMES;\n\nconst MatchPage2: FC = () => {\n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    useHideMenu(true, path);\n\n    const dispatch = useDispatch();\n\n    const { match, emmitChange, matchId, opponentMatch, opponentId, amountCardsView, takeControlOpponentCardIndex, takeControlOpponentCardZone } = useSelector((state: RootState) => state.match);\n    const { id: myUserId } = useSelector((state: RootState) => state.auth);\n    const { deckDefault } = useSelector((state: RootState) => state.decks);\n    const history = useHistory();\n   \n    const [visiblePopover, setVisiblePopover] = useState(false);\n    \n    useEffect(() => {\n\n        if (!matchId) {\n            history.replace('/play');\n        }\n\n    }, [matchId, history]);\n\n    const { \n            modalOpenThrowXcards, \n            modalOpenViewCastle, \n            modalOpenViewXcards, \n            modalOpenSelectXcards, \n            modalOpenViewCastleToOpponent, \n            modalOpenViewCementery, \n            modalOpenViewExile, \n            modalOpenViewRemoval,\n            modalOpenViewCementeryOpponent, \n            modalOpenViewExileOpponent, \n            modalOpenViewRemovalOpponent,\n            modalOpenViewHandOpponent,\n            modalOpenTakeControlOpponentCard,\n            modalOpenAssignWeapon\n    } = useSelector((state: RootState) => state.uiModal);\n\n    const { online, socket } = useContext(SocketContext);\n\n    const openLeaveMatchModal = () => {\n        confirm({\n            title: '¿Seguro que quieres abandonar la partida?',\n            icon: <ExclamationCircleOutlined />,\n            content: 'Si abandonas la partida perderás y tu oponente será el ganador',\n            okText: 'Sí',\n            cancelText: 'No',\n            onOk() {\n                window.location.replace(window.location.origin + '/play');\n            },\n            onCancel() {\n                setVisiblePopover(false); \n            },\n        });\n    };\n\n    const leaveMutualMatchModal = useCallback(\n        () => {\n            confirm({\n                title: 'Tu oponente solicita abandono mutuo',\n                icon: <ExclamationCircleOutlined />,\n                content: 'Tu oponente te está solicitando que abandonen mutuamente la partida. Ambos, no sumarán victorias ni derrotas. ',\n                okText: 'Aprobar',\n                cancelText: 'Rechazar',\n                onOk() {\n                    socket?.emit('approve-request-leave-mutual-match', {\n                        matchId,\n                        opponentId\n                    });\n\n                    window.location.replace(window.location.origin + '/play');\n                    \n                },\n                onCancel() {\n                    socket?.emit('reject-request-leave-mutual-match', {\n                        matchId,\n                        opponentId\n                    }); \n                },\n            });\n        }, [matchId, opponentId, socket],\n    );\n\n    const finishMutualMatchModal = useCallback(\n        (text: string) => {\n\n            confirm({\n                title: text,\n                icon: <ExclamationCircleOutlined />,\n                cancelButtonProps: { hidden: true },\n                okButtonProps: { hidden: true }\n            });\n\n        }, [],\n    );\n\n    const leaveMutualMatch = () => {\n        socket?.emit('request-leave-mutual-match', {\n            matchId\n        });\n\n        setVisiblePopover(false);\n    };\n\n    const youWinModal = useCallback(\n        (text: string) => {\n            confirm({\n                title: text,\n                icon: <CheckCircleOutlined />,\n                content: 'Has ganado la partida, felicitaciones!',\n                cancelButtonProps: { hidden: true },\n                okText: 'Aceptar',\n                onOk() {\n                    window.location.replace(window.location.origin + '/play');\n                    \n                },\n            });\n        }, [],\n    );\n\n    const opponentCards: Dictionary<Card[] | []> = {};\n    opponentCards[CASTLE_ZONE] = [];\n    opponentCards[HAND_ZONE] = [];\n    opponentCards[ATTACK_ZONE] = [];\n    opponentCards[CEMETERY_ZONE] = [];\n    opponentCards[EXILE_ZONE] = [];\n    opponentCards[DEFENSE_ZONE] = [];\n    opponentCards[REMOVAL_ZONE] = [];    \n    opponentCards[SUPPORT_ZONE] = [];\n    opponentCards[GOLDS_PAID_ZONE] = [];\n    opponentCards[UNPAID_GOLD_ZONE] = [];\n\n    const isMobile = window.innerWidth < 600;\n\n    useEffect(() => {\n\n        if (deckDefault?.cards.length) {\n            console.log('changeMatch');\n            const myCards: Dictionary<Card[] | []> = {};\n            myCards[CASTLE_ZONE] = deckDefault?.cards as Card[];\n            myCards[HAND_ZONE] = [];\n            myCards[ATTACK_ZONE] = [];\n            myCards[CEMETERY_ZONE] = [];\n            myCards[EXILE_ZONE] = [];\n            myCards[DEFENSE_ZONE] = [];\n            myCards[REMOVAL_ZONE] = [];    \n            myCards[SUPPORT_ZONE] = [];\n            myCards[GOLDS_PAID_ZONE] = [];\n            myCards[UNPAID_GOLD_ZONE] = [];\n            myCards[AUXILIARY_ZONE] = [];    \n\n            dispatch(changeMatch(myCards));  \n        }\n\n    }, [dispatch, deckDefault?.cards]);\n\n    useEffect(() => {\n        \n        if (match && emmitChange && matchId) {\n            if (\n                (match[CASTLE_ZONE] && match[CASTLE_ZONE].length) ||\n                (match[DEFENSE_ZONE] && match[DEFENSE_ZONE].length) ||\n                (match[ATTACK_ZONE] && match[ATTACK_ZONE].length) ||\n                (match[SUPPORT_ZONE] && match[SUPPORT_ZONE].length) ||\n                (match[CEMETERY_ZONE] && match[CEMETERY_ZONE].length) ||\n                (match[EXILE_ZONE] && match[EXILE_ZONE].length) ||\n                (match[REMOVAL_ZONE] && match[REMOVAL_ZONE].length) ||\n                (match[GOLDS_PAID_ZONE] && match[GOLDS_PAID_ZONE].length) ||\n                (match[UNPAID_GOLD_ZONE] && match[UNPAID_GOLD_ZONE].length) ||\n                (match[AUXILIARY_ZONE] && match[AUXILIARY_ZONE].length)\n            ) {\n                console.log('changing...');\n                socket?.emit('changing', {\n                    match,\n                    matchId\n                });\n            }\n        }        \n\n    }, [socket, match, matchId, emmitChange]);\n\n    useEffect(() => {\n        \n        socket?.on('changing-opponent', (data) => {\n            dispatch(changOpponenteMatch(data));\n        });\n        \n    }, [socket, dispatch]);\n\n    useEffect(() => {\n        \n        socket?.on('updating-match-opponent', (data) => {\n            console.log('updating-match-opponent');\n            dispatch(changeMatch(data));\n        });\n        \n    }, [socket, dispatch]);\n\n    useEffect(() => {\n\n        socket?.on('showing-clastle-to-opponent', () => {\n            dispatch(openModalViewCastleOpponent());\n        });\n\n    }, [socket, dispatch]);\n\n    useEffect(() => {\n\n        socket?.on('showing-hand-to-opponent', () => {\n            dispatch(openModalViewHandOpponent());\n        });\n\n    }, [socket, dispatch]);\n\n    useEffect(() => {\n\n        socket?.on('opponent-leave-match', () => {                  \n            youWinModal('Tu oponente abandonó la partida');\n        });\n\n    }, [socket, youWinModal, dispatch, history]);\n\n    useEffect(() => {\n\n        socket?.on('request-opponent-leave-mutual-match', () => {                  \n            leaveMutualMatchModal();\n        });\n\n    }, [socket, leaveMutualMatchModal]);\n\n    useEffect(() => {\n\n        socket?.on('finish-approve-leave-mutual-match', () => {   \n            \n            finishMutualMatchModal('Tu oponente aprobó el abandono mutuo. Saliendo...');\n\n            setTimeout(() => {\n                window.location.replace(window.location.origin + '/play');\n            }, 2000);            \n            \n        });\n\n    }, [socket, finishMutualMatchModal]);\n\n    useEffect(() => {\n\n        socket?.on('finish-reject-leave-mutual-match', () => {                  \n            finishMutualMatchModal('Tu oponente rechazó el abandono mutuo');\n\n            setTimeout(() => {\n                Modal.destroyAll();\n            }, 2000);\n\n        });\n\n    }, [socket, finishMutualMatchModal]);\n\n    useEffect(() => {\n        if (match && match[CASTLE_ZONE] && match[CASTLE_ZONE].length === 0) {\n\n            socket?.emit('i-missed-match', {\n                opponentId,\n                matchId\n            });\n\n            finishMutualMatchModal('Perdiste :(');\n\n            setTimeout(() => {\n                window.location.replace(window.location.origin + '/play');\n            }, 2000);\n        }\n    }, [match, socket]);\n\n    useEffect(() => {\n\n        socket?.on('you-win-match', () => {\n            youWinModal('Ganaste :)');\n        });\n\n    }, [socket, finishMutualMatchModal]);\n\n\n    const moveCard = useCallback(\n        (dragIndex: number, hoverIndex: number, zoneName: string) => {\n            return; // para evitar que ordene\n            const dragCard = match[zoneName][dragIndex];\n\n            if (!match[zoneName][dragIndex]) { // Significa que quiere ordenar cards de distintas zonas\n                return;\n            }\n\n            let newCards = {...match};\n\n            newCards[zoneName] = update(match[zoneName], {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, dragCard],\n                ],\n            });\n\n            dispatch(changeMatch(newCards));\n        },\n        [match, dispatch],\n    );\n\n    const returnItemsForZone = (zoneName: string) => {\n        return match[zoneName]\n            .map((card: Card, index: number) => (\n                <CardComponent\n                    key={ index }\n                    index={ index }\n                    moveCard={(dragIndex: number, hoverIndex: number, zoneName: string) => moveCard(dragIndex, hoverIndex, zoneName)}\n                    zone={ zoneName }\n                    card={ card }\n                />\n            ));\n    };\n\n    const returnItemsForZoneOpponent = (zoneName: string) => {\n        return opponentMatch[zoneName]\n            .map((card: Card, index: number) => (\n                <CardComponent\n                    key={ index }\n                    isOpponent={ true }\n                    index={ index }\n                    moveCard={(dragIndex: number, hoverIndex: number, zoneName: string) => moveCard(dragIndex, hoverIndex, zoneName)}\n                    zone={ zoneName }\n                    card={ card }\n                />\n            ));\n    };\n\n    const content = (\n        <div>\n            <Button type=\"link\" onClick={ openLeaveMatchModal }>Abandonar</Button><br/>\n            <Button type=\"link\" onClick={ leaveMutualMatch }>Abandono mutuo</Button>\n        </div>        \n    );\n\n    const handleVisibleChangePopever = (visible: boolean) => {\n        setVisiblePopover(visible); \n    };\n\n    return (\n        <>\n\n            { modalOpenThrowXcards && <ThrowXcardsModal /> }\n            { modalOpenViewCastle && <ViewCardsModal origin={ match } zone={ CASTLE_ZONE } /> }\n\n            { modalOpenSelectXcards && <SelectXcardsModal /> }\n            { modalOpenViewXcards && <ViewCardsModal origin={ match } zone={ CASTLE_ZONE } amount={ amountCardsView }/> }\n\n            { modalOpenViewCastleToOpponent && <ViewCardsModal origin={ opponentMatch } zone={ CASTLE_ZONE } onlyRead /> }\n            \n            { modalOpenViewCementery && <ViewCardsModal origin={ match } zone={ CEMETERY_ZONE } /> }\n            { modalOpenViewExile && <ViewCardsModal origin={ match } zone={ EXILE_ZONE } /> }\n            { modalOpenViewRemoval && <ViewCardsModal origin={ match } zone={ REMOVAL_ZONE } /> }\n\n            { modalOpenViewCementeryOpponent && <ViewCardsModal origin={ opponentMatch } zone={ CEMETERY_ZONE } onlyRead /> }\n            { modalOpenViewExileOpponent && <ViewCardsModal origin={ opponentMatch } zone={ EXILE_ZONE } onlyRead /> }\n            { modalOpenViewRemovalOpponent && <ViewCardsModal origin={ opponentMatch } zone={ REMOVAL_ZONE } onlyRead /> }\n\n            { modalOpenViewHandOpponent && <ViewCardsModal origin={ opponentMatch } zone={ HAND_ZONE } onlyRead />}\n\n            { modalOpenTakeControlOpponentCard && <TakeControlOpponentCardModal zone={ takeControlOpponentCardZone } index={ takeControlOpponentCardIndex } /> }\n\n            { modalOpenAssignWeapon && <AssingWeaponModal /> }\n\n            <div className=\"content-match\">\n                <DndProvider backend={ isMobile ? TouchBackend : HTML5Backend } >\n                    <Row gutter={[8, 8]}>\n                        <Col span={ 20 }>\n                                <Row gutter={[8, 8]}>\n                                    <Col span={ 10 }> \n                                        <Zone title={ GOLDS_PAID_ZONE + ': ' + (opponentMatch[GOLDS_PAID_ZONE] ? opponentMatch[GOLDS_PAID_ZONE].length : '0') } className='zone-flex' isOpponent>\n                                            { opponentMatch[GOLDS_PAID_ZONE] && returnItemsForZoneOpponent(GOLDS_PAID_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                    <Col span={ 2 }>\n                                        <Zone title={ AUXILIARY_ZONE } className='zone-flex' isOpponent >\n                                            { opponentMatch[AUXILIARY_ZONE] && returnItemsForZoneOpponent(AUXILIARY_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                    <Col span={ 12 }>\n                                        <Zone title={ HAND_ZONE } className='zone-flex' isOpponent >\n                                            { opponentMatch[HAND_ZONE] && returnItemsForZoneOpponent(HAND_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                </Row> \n\n                                <Row gutter={[8, 8]}>\n                                    <Col span={ 10 }> \n                                        <Zone title={ UNPAID_GOLD_ZONE + ': ' + (opponentMatch[UNPAID_GOLD_ZONE] ? opponentMatch[UNPAID_GOLD_ZONE].length : '0') } className='zone-flex ' isOpponent>\n                                            { opponentMatch[UNPAID_GOLD_ZONE] && returnItemsForZoneOpponent(UNPAID_GOLD_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 14 }> \n                                        <Zone title={ SUPPORT_ZONE } className='zone-flex' isOpponent >\n                                            { opponentMatch[SUPPORT_ZONE] && returnItemsForZoneOpponent(SUPPORT_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                </Row>  \n\n                                <Row gutter={[8, 8]}>\n                                    <Col span={ 2 }>\n                                        <Zone title={ REMOVAL_ZONE } className='stack' isOpponent >\n                                            { opponentMatch[REMOVAL_ZONE] && returnItemsForZoneOpponent(REMOVAL_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 2 }>                                    \n                                        <Zone title={ CASTLE_ZONE + ': ' + (opponentMatch[CASTLE_ZONE] ? opponentMatch[CASTLE_ZONE].length : '0') } className='stack' isOpponent >\n                                            { opponentMatch[CASTLE_ZONE] && returnItemsForZoneOpponent(CASTLE_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 20 }> \n                                        <Zone title={ DEFENSE_ZONE } className='zone-flex' isOpponent >\n                                            { opponentMatch[DEFENSE_ZONE] && returnItemsForZoneOpponent(DEFENSE_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                </Row>\n\n                                <Row gutter={[8, 8]}>\n                                    <Col span={ 2 }>\n                                        <Zone title={ EXILE_ZONE } className='stack' isOpponent >\n                                            { opponentMatch[EXILE_ZONE] && returnItemsForZoneOpponent(EXILE_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 2 }>\n                                        <Zone title={ CEMETERY_ZONE } className='stack' isOpponent >\n                                            { opponentMatch[CEMETERY_ZONE] && returnItemsForZoneOpponent(CEMETERY_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 20 }> \n                                        <Zone title={ ATTACK_ZONE } className='zone-flex' isOpponent >\n                                            { opponentMatch[ATTACK_ZONE] && returnItemsForZoneOpponent(ATTACK_ZONE) }\n                                        </Zone> \n                                    </Col>\n                                </Row>\n\n                                {/* <Row gutter={[8, 8]} style={{padding: 10}}>\n                                    <Col span={ 22 } style={{backgroundColor: '#330000', padding: 20, borderRadius: 5}}>\n                                        <Steps current={current} size=\"small\">\n                                            {steps.map(item => (\n                                                <Step key={item.title} title={item.title} />\n                                            ))}\n                                        </Steps>\n                                    </Col>\n                                    <Col span={ 2 } style={{padding: 15}}>\n                                        <Button type=\"primary\" size=\"large\" onClick={() => next()}>\n                                            Next\n                                        </Button>\n                                    </Col>\n                                </Row> */}\n\n                                <Row gutter={[8, 8]}>\n\n                                    <Col span={ 2 }>\n                                        <Zone title={ EXILE_ZONE } className='stack' >\n                                            { match[EXILE_ZONE] && returnItemsForZone(EXILE_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 2 }>\n                                        <Zone title={ CEMETERY_ZONE } className='stack'>\n                                            { match[CEMETERY_ZONE] && returnItemsForZone(CEMETERY_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 20 }> \n                                        <Zone title={ ATTACK_ZONE } className='zone-flex'>\n                                            { match[ATTACK_ZONE] && returnItemsForZone(ATTACK_ZONE) }\n                                        </Zone> \n                                    </Col>\n\n                                </Row>\n\n                                <Row gutter={[8, 8]}>\n\n                                    <Col span={ 2 }>\n                                        <Zone title={ REMOVAL_ZONE } className='stack'>\n                                            { match[REMOVAL_ZONE] && returnItemsForZone(REMOVAL_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 2 }>                                    \n                                        <Zone title={ CASTLE_ZONE + ': ' + (match[CASTLE_ZONE] ? match[CASTLE_ZONE].length : '0') } className='stack'>\n                                            { match[CASTLE_ZONE] && returnItemsForZone(CASTLE_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                    <Col span={ 20 }> \n                                        <Zone title={ DEFENSE_ZONE } className='zone-flex'>\n                                            { match[DEFENSE_ZONE] && returnItemsForZone(DEFENSE_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                </Row>\n\n                                <Row gutter={[8, 8]}>\n\n                                    <Col span={ 10 }> \n                                        <Zone title={ UNPAID_GOLD_ZONE + ': ' + (match[UNPAID_GOLD_ZONE] ? match[UNPAID_GOLD_ZONE].length : '0') } className='zone-flex' >\n                                            { match[UNPAID_GOLD_ZONE] && returnItemsForZone(UNPAID_GOLD_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                    <Col span={ 14 }> \n                                        <Zone title={ SUPPORT_ZONE } className='zone-flex'>\n                                            { match[SUPPORT_ZONE] && returnItemsForZone(SUPPORT_ZONE) }\n                                        </Zone>\n                                    </Col>\n\n                                </Row>  \n\n                                <Row gutter={[8, 8]}>\n                                    <Col span={ 10 }> \n                                        <Zone title={ GOLDS_PAID_ZONE + ': ' + (match[GOLDS_PAID_ZONE] ? match[GOLDS_PAID_ZONE].length : '0') } className='zone-flex' >\n                                            { match[GOLDS_PAID_ZONE] && returnItemsForZone(GOLDS_PAID_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                    <Col span={ 2 }>\n                                        <Zone title={ AUXILIARY_ZONE } className='stack'>\n                                            { match[AUXILIARY_ZONE] && returnItemsForZone(AUXILIARY_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                    <Col span={ 12 }>\n                                        <Zone title={ HAND_ZONE } className='zone-flex' withPopover >\n                                            { match[HAND_ZONE] && returnItemsForZone(HAND_ZONE) }\n                                        </Zone>\n                                    </Col>\n                                </Row>\n                            \n                        </Col>\n                        <Col span={4}>\n                            <Row gutter={[8, 8]}>\n                                <Col style={{width: '100%', textAlign: 'right'}} >\n                                    {/* <Dropdown.Button size=\"small\" style={{backgroundColor: 'black', width: '100%'}} overlay={menu}>Menú</Dropdown.Button> */}\n                                    <Popover\n                                        placement=\"leftTop\" \n                                        trigger=\"click\"\n                                        content={ content }\n                                        visible={ visiblePopover }\n                                        onVisibleChange={ handleVisibleChangePopever }\n                                    >\n                                        <Button  style={{backgroundColor: 'black'}} icon={<MenuOutlined />} />\n                                    </Popover>\n                                </Col> \n                            </Row>\n                            \n                        </Col>\n                    </Row>\n                </DndProvider>\n            </div>\n            \n        </>\n    )\n}\n\nexport default MatchPage2;","import { Button, Layout, Menu, notification, Popconfirm } from 'antd';\nimport React, { FC, useCallback, useContext, useEffect } from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport {\n    BlockOutlined,\n    UserOutlined,\n    PlayCircleOutlined,\n    AppstoreOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\n\nimport Play from '../components/signed/user/Play';\n\nimport '../css/signed.css'\nimport Cards from '../components/signed/admin/Cards';\nimport { MenuContext } from '../context/MenuContext';\nimport NewCard from '../components/signed/admin/NewCard';\n//import { useSelector } from 'react-redux';\n//import { RootState } from '../store';\nimport Users from '../components/signed/admin/Users';\nimport { useHistory, useLocation } from 'react-router';\nimport '../css/signed.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../store/auth/action';\nimport Decks from '../components/signed/user/Decks';\nimport NewDeck from '../components/signed/user/NewDeck';\nimport { SocketContext } from '../context/SocketContext';\nimport { matchSetMatchId, matchSetOpponentId, resetMatch } from '../store/match/action';\nimport { resetDeckUpdating } from '../store/deck/action';\nimport { resetCardUpdating } from '../store/card/action';\nimport { resetAllDescription } from '../store/description/action';\nimport MatchPage from '../pages/MatchPage';\nimport { RootState } from '../store';\nconst { Content, Sider } = Layout;\n\nexport const SingedRouter: FC = () => {\n\n    const { hiddenMenu, selectedOption } = useContext(MenuContext);\n    const { socket } = useContext(SocketContext);\n    const { matchId, opponentId } = useSelector((state: RootState) => state.match);\n\n    const { pathname } = useLocation();\n    const path = pathname.replace('/', '');\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    //const { role } = useSelector((state: RootState) => state.auth);\n    \n    const handleLogout = () => {\n        dispatch(startLogout());\n        dispatch(resetDeckUpdating());\n        dispatch(resetCardUpdating());\n        dispatch(resetMatch());\n        dispatch(resetAllDescription())\n    };   \n\n    const confirm = () => {\n        handleLogout();\n    };\n\n    const cancel = () => {\n\n    };\n\n    const close = () => {\n        console.log('close notification')\n    };\n\n    const acceptInvitation = useCallback((key: string, opponentId: string) => {\n\n        socket?.emit('create-match', {\n            opponentId\n        });\n\n        notification.close(key);\n\n    }, [socket]);\n\n    const openNotification = useCallback( (key: string, username: string, id: string) => {\n        \n        const btn = (\n            <Button type=\"primary\" size=\"small\" onClick={() => {\n                acceptInvitation(key, id);            \n            }}>\n                Aceptar\n            </Button>\n        );\n\n        notification.open({\n            message: 'Nueva invitación',\n            description:\n              `El usuario ${username} te está invitando a jugar`,\n            btn,\n            key,\n            onClose: close,\n            duration: 10,\n            className: 'centered',\n        });\n\n    }, [acceptInvitation]);\n    \n    useEffect(() => {\n\n        socket?.on('send-notification', (payload: any) => {\n            openNotification(payload.key, payload.from, payload.id);\n        });\n\n    }, [socket, openNotification]);\n\n    useEffect(() => {\n\n        socket?.on('cancele-notification', (payload: any) => {\n            notification.close(payload.key);\n        });\n\n    }, [socket]);\n\n    useEffect(() => {\n\n        socket?.on('go-match', (payload: any) => {\n\n            dispatch(matchSetOpponentId(payload.opponentId));\n            dispatch(matchSetMatchId(payload.matchId));\n            history.replace('/match');\n\n        });\n\n    }, [socket, openNotification, dispatch, history]);\n\n    return (\n            <Layout  style={{ height: '100vh' }}>\n                <Sider\n                    hidden={ hiddenMenu }\n                    collapsedWidth=\"0\" \n                    breakpoint=\"md\"\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                    }}\n                >\n                    <div className=\"logo\" />\n                    <Menu className=\"menu-myl\" theme=\"dark\" mode=\"inline\" selectedKeys={[ selectedOption ]}>\n\n                        <Menu.Item key=\"play\" icon={<PlayCircleOutlined />}>\n                            <Link to=\"/play\">\n                                Jugar\n                            </Link>\n                        </Menu.Item>\n\n                        <Menu.Item key=\"decks\" icon={<BlockOutlined />}>\n                            <Link to=\"/decks\">\n                                Mis Mazos\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"cards\" icon={<AppstoreOutlined />}>\n                            <Link to=\"/cards\">\n                                Cartas\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"users\" icon={<UserOutlined />}>\n                            <Link to=\"/users\">\n                                Usuarios\n                            </Link>\n                        </Menu.Item>\n\n                        <Menu.Item className=\"btn-logout\" key=\"logout\" icon={<LogoutOutlined />}>\n\n                            <Popconfirm\n                                title=\"¿Salir?\"\n                                okText=\"Sí\"\n                                placement=\"right\"\n                                onConfirm={confirm}\n                                onCancel={cancel}\n                                cancelText=\"No\"\n                            >\n                                Cerrar sesión\n                            </Popconfirm>\n                        </Menu.Item>\n\n                    </Menu>\n                    \n                </Sider>\n                \n                <Layout className=\"site-layout\" style={{ marginLeft: !hiddenMenu ? 200 : 0 }} >\n\n                    <Content style={{ margin: '24px 16px 0', overflow: 'initial' }} >\n                        <div className=\"site-layout-background\" style={{ padding: path === 'match' ? 0 : 24 }} >\n                            <Switch>\n\n                                <Route exact path=\"/match\" component={ MatchPage } />\n\n                                <Route exact path=\"/play\" component={ Play } />\n\n\n                                <Route exact path=\"/cards\" component={ Cards } />\n\n                                <Route exact path=\"/cards/new\" component={ NewCard } />\n\n                                <Route exact path=\"/cards/:id/edit\" component={ NewCard } />\n\n\n                                <Route exact path=\"/decks\" component={ Decks } />\n\n                                <Route exact path=\"/decks/new\" component={ NewDeck } />\n\n                                <Route exact path=\"/decks/:id/edit\" component={ NewDeck } />\n\n\n                                <Route exact path=\"/users\" component={ Users } />\n\n                                <Redirect to=\"/play\" />\n\n                            </Switch>\n                        </div>\n                    </Content>\n                </Layout>\n            </Layout>            \n    )\n};","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { RootState } from '../store';\nimport { startChecking } from '../store/auth/action';\nimport { startLoadCard } from '../store/card/action';\nimport { startLoadEditionCard, startLoadFrecuencyCard, startLoadRaceCard, startLoadTypeCard } from '../store/description/action';\n//import Match from '../pages/Match';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRouter } from './PublicRouter';\nimport { SingedRouter } from './SingedRouter';\n\nconst AppRouter: FC = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, logged } = useSelector((state: RootState) => state.auth);    \n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n    useEffect(() => {\n        if (logged) {\n            dispatch(startLoadTypeCard());\n            dispatch(startLoadFrecuencyCard());\n            dispatch(startLoadRaceCard());\n            dispatch(startLoadEditionCard());\n            dispatch(startLoadCard());       \n        }\n        \n    }, [dispatch, logged])\n\n\n    if (checking) {\n        return (<h1>Espere...</h1>)\n    }\n\n\n    return (\n        \n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter isAuthenticated={ logged } component={ AuthRouter } path=\"/auth\" />\n\n                    <PrivateRouter isAuthenticated={ logged } component={ SingedRouter } path=\"/\" />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n        </Router>\n        \n        \n    )\n}\n\nexport default AppRouter;","import { Spin } from 'antd';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MenuProvider } from './context/MenuContext';\nimport { SocketProvider } from './context/SocketContext';\nimport AppRouter from './routers/AppRouter';\nimport { RootState } from './store';\n\nimport 'animate.css';\n\nconst MyLApp: FC = () => {\n    //document.addEventListener('contextmenu', event => event.preventDefault());\n\n    const { show, text } = useSelector((state: RootState) => state.spin);\n\n    return (\n        <Spin tip={ text } spinning={ show }>\n            <SocketProvider>\n                <MenuProvider>\n                    <AppRouter />\n                </MenuProvider >\n            </SocketProvider>\n        </Spin>\n        \n        \n    )\n}\n\nexport default MyLApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport './index.css';\nimport MyLApp from './MyLApp';\n\nReactDOM.render(\n\t<Provider store={ store } >\n\t\t<MyLApp />\n\t</Provider>\n\n    ,\n  document.getElementById('root')\n);"],"sourceRoot":""}